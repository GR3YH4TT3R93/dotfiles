# Enable vi mode
setw -g mode-keys vi

# True color support
set -g default-terminal "tmux-256color"
set -sg terminal-overrides "*:Tc"

# Ensure window index numbers get reordered on delete.
set -g renumber-windows on

# Options: start indexes from 1
set -g base-index 1
set -g pane-base-index 1

# Detach when shell exits
# set -g detach-on-destroy off

# Clipboard Settings
set -g set-clipboard on
set -g allow-passthrough on

# Clipboard command setup for termux, wayland, Xorg, and macOS
if-shell 'command -v termux-clipboard-set' 'set -s copy-command "termux-clipboard-set"' {
    if-shell 'command -v wl-copy' 'set -s copy-command "wl-copy"' {
        if-shell 'command -v xclip' 'set -s copy-command "xclip -in -selection clipboard"' {
            if-shell 'command -v xsel' 'set -s copy-command "xsel --clipboard --input"' {
                if-shell 'command -v pbcopy' 'set -s copy-command "pbcopy"'
            }
        }
    }
}

# Enable focus-events for event hooks
set -g focus-events on

# Enable mouse support
set -g mouse on

# Edit config and reload when done with <prefix> e
bind e new-window -n "Tmux Config Editor" "nvim ~/.config/tmux/tmux.conf && tmux run -bC 'source ~/.config/tmux/tmux.conf; display-message \"Config reloaded!\"'"

# Reload tmux conf
bind r run -bC "source ~/.config/tmux/tmux.conf; display 'Config reloaded!'"

# Rename Window
bind R command-prompt "rename-session '%%'"

# Make 'S' enter a session management mode
bind S display-menu -T "Session Manager" \
    "List Sessions" l "choose-session" \
    "New Session" n "command-prompt -p 'Session name:' 'new-session -s %%'" \
    "Kill Session" x "command-prompt -p 'Kill session:' 'kill-session -t %%'"

# Clear tmux history
bind c-h clear-history

# Detach and kill terminal
bind -n c-d detach-client -P

# synchronize actions in tmux panes
# bind S setw synchronize-panes

# Paste from tmux buffer
bind b list-buffers
bind C-p paste-buffer -p
bind C-P choose-buffer

# Better Vi Window Keys
bind -n M-v split-window -h
bind -n M-s split-window -v

# Better Vi copy mode
bind Enter copy-mode # enter copy mode

bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi C-v send -X rectangle-toggle
bind -T copy-mode-vi y send -X copy-selection-and-cancel
bind -T copy-mode-vi Enter send -X copy-selection-and-cancel
bind -T copy-mode-vi Escape send -X cancel
bind -T copy-mode-vi H send -X start-of-line
bind -T copy-mode-vi L send -X end-of-line

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'MunifTanjim/tmux-suspend'
set -g @suspend_key 'F10'
set -g @plugin 'erikw/tmux-powerline'
set -g @plugin 'joshmedeski/tmux-nerd-font-window-name'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @custom_copy_command 'termux-clipboard-set'
set -g @custom_paste_command 'termux-clipboard-get'
set -g @yank_selection_mouse 'clipboard'
set -g @plugin 'tmux-plugins/tmux-open'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @resurrect-strategy-nvim 'session'
set -g @resurrect-processes 'vi vim nvim emacs man less more tail top htop irssi weechat mutt ssh psql mysql sqlite3'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @continuum-restore 'on'
set -g @continuum-save-interval '1'

# Process Check
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+/)?g?(view|n?vim?x?)(diff)?$'"
is_fzf="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+/)?fzf$'"

# Navigate Panes
bind -n M-h run "(eval \"$is_vim\" && tmux send-keys M-h) || tmux select-pane -L"
bind -n M-j run "(eval \"$is_vim\" && tmux send-keys M-j)  || (\"$is_fzf\" && tmux send-keys M-j) || tmux select-pane -D"
bind -n M-k run "(eval \"$is_vim\" && tmux send-keys M-k) || (\"$is_fzf\" && tmux send-keys M-k) || tmux select-pane -U"
bind -n M-l run "(eval \"$is_vim\" && tmux send-keys M-l) || tmux select-pane -R"

# Resizing
# bind -n M-+ run "(eval \"$is_vim\" && tmux send-keys M-+) || tmux resize-pane -R 5 || tmux resize-pane -D 5"
# bind -n M-- run "(eval \"$is_vim\" && tmux send-keys M--) || tmux resize-pane -L 5 || tmux resize-pane -U 5"

bind -n M-+ run "(eval \"$is_vim\" && tmux send-keys M-+) || { w1=$(tmux display -p '#{pane_width}'); tmux resize-pane -R 5; w2=$(tmux display -p '#{pane_width}'); [ \"$w1\" != \"$w2\" ] || tmux resize-pane -D 5; }"
bind -n M-- run "(eval \"$is_vim\" && tmux send-keys M--) || { h1=$(tmux display -p '#{pane_height}'); tmux resize-pane -L 5; h2=$(tmux display -p '#{pane_height}'); [ \"$h1\" != \"$h2\" ] || tmux resize-pane -U 5; }"

# Ensure Tmux Plugin Manager is installed and install any plugins
if "test ! -d ~/.config/tmux/plugins/tpm" \
  "run 'git clone https://github.com/tmux-plugins/tpm ~/.config/tmux/plugins/tpm && ~/.config/tmux/plugins/tpm/bin/install_plugins'"

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.config/tmux/plugins/tpm/tpm'
