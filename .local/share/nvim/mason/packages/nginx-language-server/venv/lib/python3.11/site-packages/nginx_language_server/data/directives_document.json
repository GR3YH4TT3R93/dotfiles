[
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>accept_mutex</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>accept_mutex off;</pre></td></tr><tr><th>Context:</th><td><code>events</code><br></td></tr></tbody></table>",
    "doc": "<p>If <code>accept_mutex</code> is enabled, worker processes will accept new connections by turn. Otherwise, all worker processes will be notified about new connections, and if volume of new connections is low, some of the worker processes may just waste system resources.</p><blockquote class=\"note\">There is no need to enable <code>accept_mutex</code> on systems that support the <a href=\"https://nginx.org/en/docs/events.html#epoll\">EPOLLEXCLUSIVE</a> flag (1.11.3) or when using <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#reuseport\">reuseport</a>.</blockquote><blockquote class=\"note\">Prior to version 1.11.3, the default value was <code>on</code>.</blockquote>",
    "module": "Core functionality",
    "link": "ngx_core_module.html#accept_mutex",
    "name": "accept_mutex"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>accept_mutex_delay</strong> <code><i>time</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>accept_mutex_delay 500ms;</pre></td></tr><tr><th>Context:</th><td><code>events</code><br></td></tr></tbody></table>",
    "doc": "<p>If <a href=\"https://nginx.org/en/docs/ngx_core_module.html#accept_mutex\">accept_mutex</a> is enabled, specifies the maximum time during which a worker process will try to restart accepting new connections if another worker process is currently accepting new connections.</p>",
    "module": "Core functionality",
    "link": "ngx_core_module.html#accept_mutex_delay",
    "name": "accept_mutex_delay"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>daemon</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>daemon on;</pre></td></tr><tr><th>Context:</th><td><code>main</code><br></td></tr></tbody></table>",
    "doc": "<p>Determines whether nginx should become a daemon. Mainly used during development.</p>",
    "module": "Core functionality",
    "link": "ngx_core_module.html#daemon",
    "name": "daemon"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>debug_connection</strong> <code><i>address</i></code> | <code><i>CIDR</i></code> | <code>unix:</code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>events</code><br></td></tr></tbody></table>",
    "doc": "<p>Enables debugging log for selected client connections. Other connections will use logging level set by the <a href=\"https://nginx.org/en/docs/ngx_core_module.html#error_log\">error_log</a> directive. Debugged connections are specified by IPv4 or IPv6 (1.3.0, 1.2.1) address or network. A connection may also be specified using a hostname. For connections using UNIX-domain sockets (1.3.0, 1.2.1), debugging log is enabled by the “<code>unix:</code>” parameter.</p><blockquote class=\"example\"><pre>events {\n    debug_connection 127.0.0.1;\n    debug_connection localhost;\n    debug_connection 192.0.2.0/24;\n    debug_connection ::1;\n    debug_connection 2001:0db8::/32;\n    debug_connection unix:;\n    ...\n}\n</pre></blockquote><blockquote class=\"note\">For this directive to work, nginx needs to be built with <code>--with-debug</code>, see “<a href=\"https://nginx.org/en/docs/debugging_log.html\">A debugging log</a>”.</blockquote>",
    "module": "Core functionality",
    "link": "ngx_core_module.html#debug_connection",
    "name": "debug_connection"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>debug_points</strong> <code>abort</code> | <code>stop</code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>main</code><br></td></tr></tbody></table>",
    "doc": "<p>This directive is used for debugging.</p><p>When internal error is detected, e.g. the leak of sockets on restart of working processes, enabling <code>debug_points</code> leads to a core file creation (<code>abort</code>) or to stopping of a process (<code>stop</code>) for further analysis using a system debugger.</p>",
    "module": "Core functionality",
    "link": "ngx_core_module.html#debug_points",
    "name": "debug_points"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>env</strong> <code><i>variable</i></code>[=<code><i>value</i></code>];</code><br></td></tr><tr><th>Default:</th><td><pre>env TZ;</pre></td></tr><tr><th>Context:</th><td><code>main</code><br></td></tr></tbody></table>",
    "doc": "<p>By default, nginx removes all environment variables inherited from its parent process except the TZ variable. This directive allows preserving some of the inherited variables, changing their values, or creating new environment variables. These variables are then:</p>",
    "module": "Core functionality",
    "link": "ngx_core_module.html#env",
    "name": "env"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>error_log</strong> <code><i>file</i></code> [<code><i>level</i></code>];</code><br></td></tr><tr><th>Default:</th><td><pre>error_log logs/error.log error;</pre></td></tr><tr><th>Context:</th><td><code>main</code>, <code>http</code>, <code>mail</code>, <code>stream</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Configures logging. Several logs can be specified on the same configuration level (1.5.2). If on the <code>main</code> configuration level writing a log to a file is not explicitly defined, the default file will be used.</p><p>The first parameter defines a <code><i>file</i></code> that will store the log. The special value <code>stderr</code> selects the standard error file. Logging to <a href=\"https://nginx.org/en/docs/syslog.html\">syslog</a> can be configured by specifying the “<code>syslog:</code>” prefix. Logging to a <a href=\"https://nginx.org/en/docs/debugging_log.html#memory\">cyclic memory buffer</a> can be configured by specifying the “<code>memory:</code>” prefix and buffer <code><i>size</i></code>, and is generally used for debugging (1.7.11).</p><p>The second parameter determines the <code><i>level</i></code> of logging, and can be one of the following: <code>debug</code>, <code>info</code>, <code>notice</code>, <code>warn</code>, <code>error</code>, <code>crit</code>, <code>alert</code>, or <code>emerg</code>. Log levels above are listed in the order of increasing severity. Setting a certain log level will cause all messages of the specified and more severe log levels to be logged. For example, the default level <code>error</code> will cause <code>error</code>, <code>crit</code>, <code>alert</code>, and <code>emerg</code> messages to be logged. If this parameter is omitted then <code>error</code> is used.</p><blockquote class=\"note\">For <code>debug</code> logging to work, nginx needs to be built with <code>--with-debug</code>, see “<a href=\"https://nginx.org/en/docs/debugging_log.html\">A debugging log</a>”.</blockquote><blockquote class=\"note\">The directive can be specified on the <code>stream</code> level starting from version 1.7.11, and on the <code>mail</code> level starting from version 1.9.0.</blockquote>",
    "module": "Core functionality",
    "link": "ngx_core_module.html#error_log",
    "name": "error_log"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>events</strong> { ... }</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>main</code><br></td></tr></tbody></table>",
    "doc": "<p>Provides the configuration file context in which the directives that affect connection processing are specified.</p>",
    "module": "Core functionality",
    "link": "ngx_core_module.html#events",
    "name": "events"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>include</strong> <code><i>file</i></code> | <code><i>mask</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>any</code><br></td></tr></tbody></table>",
    "doc": "<p>Includes another <code><i>file</i></code>, or files matching the specified <code><i>mask</i></code>, into configuration. Included files should consist of syntactically correct directives and blocks.</p><p>Usage example:</p><blockquote class=\"example\"><pre>include mime.types;\ninclude vhosts/*.conf;\n</pre></blockquote>",
    "module": "Core functionality",
    "link": "ngx_core_module.html#include",
    "name": "include"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>load_module</strong> <code><i>file</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>main</code><br></td></tr></tbody></table><p>This directive appeared in version 1.9.11.</p>",
    "doc": "<p>Loads a dynamic module.</p><p>Example:</p><blockquote class=\"example\"><pre>load_module modules/ngx_mail_module.so;\n</pre></blockquote>",
    "module": "Core functionality",
    "link": "ngx_core_module.html#load_module",
    "name": "load_module"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>lock_file</strong> <code><i>file</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>lock_file logs/nginx.lock;</pre></td></tr><tr><th>Context:</th><td><code>main</code><br></td></tr></tbody></table>",
    "doc": "<p>nginx uses the locking mechanism to implement <a href=\"https://nginx.org/en/docs/ngx_core_module.html#accept_mutex\">accept_mutex</a> and serialize access to shared memory. On most systems the locks are implemented using atomic operations, and this directive is ignored. On other systems the “lock file” mechanism is used. This directive specifies a prefix for the names of lock files.</p>",
    "module": "Core functionality",
    "link": "ngx_core_module.html#lock_file",
    "name": "lock_file"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>master_process</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>master_process on;</pre></td></tr><tr><th>Context:</th><td><code>main</code><br></td></tr></tbody></table>",
    "doc": "<p>Determines whether worker processes are started. This directive is intended for nginx developers.</p>",
    "module": "Core functionality",
    "link": "ngx_core_module.html#master_process",
    "name": "master_process"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>multi_accept</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>multi_accept off;</pre></td></tr><tr><th>Context:</th><td><code>events</code><br></td></tr></tbody></table>",
    "doc": "<p>If <code>multi_accept</code> is disabled, a worker process will accept one new connection at a time. Otherwise, a worker process will accept all new connections at a time.</p><blockquote class=\"note\">The directive is ignored if <a href=\"https://nginx.org/en/docs/events.html#kqueue\">kqueue</a> connection processing method is used, because it reports the number of new connections waiting to be accepted.</blockquote>",
    "module": "Core functionality",
    "link": "ngx_core_module.html#multi_accept",
    "name": "multi_accept"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>pcre_jit</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>pcre_jit off;</pre></td></tr><tr><th>Context:</th><td><code>main</code><br></td></tr></tbody></table><p>This directive appeared in version 1.1.12.</p>",
    "doc": "<p>Enables or disables the use of “just-in-time compilation” (PCRE JIT) for the regular expressions known by the time of configuration parsing.</p><p>PCRE JIT can speed up processing of regular expressions significantly.</p><blockquote class=\"note\">The JIT is available in PCRE libraries starting from version 8.20 built with the <code>--enable-jit</code> configuration parameter. When the PCRE library is built with nginx (<code>--with-pcre=</code>), the JIT support is enabled via the <code>--with-pcre-jit</code> configuration parameter.</blockquote>",
    "module": "Core functionality",
    "link": "ngx_core_module.html#pcre_jit",
    "name": "pcre_jit"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>pid</strong> <code><i>file</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>pid logs/nginx.pid;</pre></td></tr><tr><th>Context:</th><td><code>main</code><br></td></tr></tbody></table>",
    "doc": "<p>Defines a <code><i>file</i></code> that will store the process ID of the main process.</p>",
    "module": "Core functionality",
    "link": "ngx_core_module.html#pid",
    "name": "pid"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>ssl_engine</strong> <code><i>device</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>main</code><br></td></tr></tbody></table>",
    "doc": "<p>Defines the name of the hardware SSL accelerator.</p>",
    "module": "Core functionality",
    "link": "ngx_core_module.html#ssl_engine",
    "name": "ssl_engine"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>thread_pool</strong> <code><i>name</i></code> <code>threads</code>=<code><i>number</i></code> [<code>max_queue</code>=<code><i>number</i></code>];</code><br></td></tr><tr><th>Default:</th><td><pre>thread_pool default threads=32 max_queue=65536;</pre></td></tr><tr><th>Context:</th><td><code>main</code><br></td></tr></tbody></table><p>This directive appeared in version 1.7.11.</p>",
    "doc": "<p>Defines the <code><i>name</i></code> and parameters of a thread pool used for multi-threaded reading and sending of files <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#aio\">without blocking</a> worker processes.</p><p>The <code>threads</code> parameter defines the number of threads in the pool.</p><p>In the event that all threads in the pool are busy, a new task will wait in the queue. The <code>max_queue</code> parameter limits the number of tasks allowed to be waiting in the queue. By default, up to 65536 tasks can wait in the queue. When the queue overflows, the task is completed with an error.</p>",
    "module": "Core functionality",
    "link": "ngx_core_module.html#thread_pool",
    "name": "thread_pool"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>timer_resolution</strong> <code><i>interval</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>main</code><br></td></tr></tbody></table>",
    "doc": "<p>Reduces timer resolution in worker processes, thus reducing the number of <code>gettimeofday()</code> system calls made. By default, <code>gettimeofday()</code> is called each time a kernel event is received. With reduced resolution, <code>gettimeofday()</code> is only called once per specified <code><i>interval</i></code>.</p><p>Example:</p><blockquote class=\"example\"><pre>timer_resolution 100ms;\n</pre></blockquote><p>Internal implementation of the interval depends on the method used:</p>",
    "module": "Core functionality",
    "link": "ngx_core_module.html#timer_resolution",
    "name": "timer_resolution"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>use</strong> <code><i>method</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>events</code><br></td></tr></tbody></table>",
    "doc": "<p>Specifies the <a href=\"https://nginx.org/en/docs/events.html\">connection processing</a> <code><i>method</i></code> to use. There is normally no need to specify it explicitly, because nginx will by default use the most efficient method.</p>",
    "module": "Core functionality",
    "link": "ngx_core_module.html#use",
    "name": "use"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>user</strong> <code><i>user</i></code> [<code><i>group</i></code>];</code><br></td></tr><tr><th>Default:</th><td><pre>user nobody nobody;</pre></td></tr><tr><th>Context:</th><td><code>main</code><br></td></tr></tbody></table>",
    "doc": "<p>Defines <code><i>user</i></code> and <code><i>group</i></code> credentials used by worker processes. If <code><i>group</i></code> is omitted, a group whose name equals that of <code><i>user</i></code> is used.</p>",
    "module": "Core functionality",
    "link": "ngx_core_module.html#user",
    "name": "user"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>worker_aio_requests</strong> <code><i>number</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>worker_aio_requests 32;</pre></td></tr><tr><th>Context:</th><td><code>events</code><br></td></tr></tbody></table><p>This directive appeared in versions 1.1.4 and 1.0.7.</p>",
    "doc": "<p>When using <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#aio\">aio</a> with the <a href=\"https://nginx.org/en/docs/events.html#epoll\">epoll</a> connection processing method, sets the maximum <code><i>number</i></code> of outstanding asynchronous I/O operations for a single worker process.</p>",
    "module": "Core functionality",
    "link": "ngx_core_module.html#worker_aio_requests",
    "name": "worker_aio_requests"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>worker_connections</strong> <code><i>number</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>worker_connections 512;</pre></td></tr><tr><th>Context:</th><td><code>events</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets the maximum number of simultaneous connections that can be opened by a worker process.</p><p>It should be kept in mind that this number includes all connections (e.g. connections with proxied servers, among others), not only connections with clients. Another consideration is that the actual number of simultaneous connections cannot exceed the current limit on the maximum number of open files, which can be changed by <a href=\"https://nginx.org/en/docs/ngx_core_module.html#worker_rlimit_nofile\">worker_rlimit_nofile</a>.</p>",
    "module": "Core functionality",
    "link": "ngx_core_module.html#worker_connections",
    "name": "worker_connections"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>worker_cpu_affinity</strong> <code><i>cpumask</i></code> ...;</code><br><code><strong>worker_cpu_affinity</strong> <code>auto</code> [<code><i>cpumask</i></code>];</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>main</code><br></td></tr></tbody></table>",
    "doc": "<p>Binds worker processes to the sets of CPUs. Each CPU set is represented by a bitmask of allowed CPUs. There should be a separate set defined for each of the worker processes. By default, worker processes are not bound to any specific CPUs.</p><p>For example,</p><blockquote class=\"example\"><pre>worker_processes    4;\nworker_cpu_affinity 0001 0010 0100 1000;\n</pre></blockquote><p>binds each worker process to a separate CPU, while</p><blockquote class=\"example\"><pre>worker_processes    2;\nworker_cpu_affinity 0101 1010;\n</pre></blockquote><p>binds the first worker process to CPU0/CPU2, and the second worker process to CPU1/CPU3. The second example is suitable for hyper-threading.</p><p>The special value <code>auto</code> (1.9.10) allows binding worker processes automatically to available CPUs:</p><blockquote class=\"example\"><pre>worker_processes auto;\nworker_cpu_affinity auto;\n</pre></blockquote><p>The optional mask parameter can be used to limit the CPUs available for automatic binding:</p><blockquote class=\"example\"><pre>worker_cpu_affinity auto 01010101;\n</pre></blockquote><blockquote class=\"note\">The directive is only available on FreeBSD and Linux.</blockquote>",
    "module": "Core functionality",
    "link": "ngx_core_module.html#worker_cpu_affinity",
    "name": "worker_cpu_affinity"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>worker_priority</strong> <code><i>number</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>worker_priority 0;</pre></td></tr><tr><th>Context:</th><td><code>main</code><br></td></tr></tbody></table>",
    "doc": "<p>Defines the scheduling priority for worker processes like it is done by the <code>nice</code> command: a negative <code><i>number</i></code> means higher priority. Allowed range normally varies from -20 to 20.</p><p>Example:</p><blockquote class=\"example\"><pre>worker_priority -10;\n</pre></blockquote>",
    "module": "Core functionality",
    "link": "ngx_core_module.html#worker_priority",
    "name": "worker_priority"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>worker_processes</strong> <code><i>number</i></code> | <code>auto</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>worker_processes 1;</pre></td></tr><tr><th>Context:</th><td><code>main</code><br></td></tr></tbody></table>",
    "doc": "<p>Defines the number of worker processes.</p><p>The optimal value depends on many factors including (but not limited to) the number of CPU cores, the number of hard disk drives that store data, and load pattern. When one is in doubt, setting it to the number of available CPU cores would be a good start (the value “<code>auto</code>” will try to autodetect it).</p><blockquote class=\"note\">The <code>auto</code> parameter is supported starting from versions 1.3.8 and 1.2.5.</blockquote>",
    "module": "Core functionality",
    "link": "ngx_core_module.html#worker_processes",
    "name": "worker_processes"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>worker_rlimit_core</strong> <code><i>size</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>main</code><br></td></tr></tbody></table>",
    "doc": "<p>Changes the limit on the largest size of a core file (<code>RLIMIT_CORE</code>) for worker processes. Used to increase the limit without restarting the main process.</p>",
    "module": "Core functionality",
    "link": "ngx_core_module.html#worker_rlimit_core",
    "name": "worker_rlimit_core"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>worker_rlimit_nofile</strong> <code><i>number</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>main</code><br></td></tr></tbody></table>",
    "doc": "<p>Changes the limit on the maximum number of open files (<code>RLIMIT_NOFILE</code>) for worker processes. Used to increase the limit without restarting the main process.</p>",
    "module": "Core functionality",
    "link": "ngx_core_module.html#worker_rlimit_nofile",
    "name": "worker_rlimit_nofile"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>worker_shutdown_timeout</strong> <code><i>time</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>main</code><br></td></tr></tbody></table><p>This directive appeared in version 1.11.11.</p>",
    "doc": "<p>Configures a timeout for a graceful shutdown of worker processes. When the <code><i>time</i></code> expires, nginx will try to close all the connections currently open to facilitate shutdown.</p>",
    "module": "Core functionality",
    "link": "ngx_core_module.html#worker_shutdown_timeout",
    "name": "worker_shutdown_timeout"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>working_directory</strong> <code><i>directory</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>main</code><br></td></tr></tbody></table>",
    "doc": "<p>Defines the current working directory for a worker process. It is primarily used when writing a core-file, in which case a worker process should have write permission for the specified directory.</p>",
    "module": "Core functionality",
    "link": "ngx_core_module.html#working_directory",
    "name": "working_directory"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>absolute_redirect</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>absolute_redirect on;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.11.8.</p>",
    "doc": "<p>If disabled, redirects issued by nginx will be relative.</p><p>See also <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#server_name_in_redirect\">server_name_in_redirect</a> and <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#port_in_redirect\">port_in_redirect</a> directives.</p>",
    "module": "ngx_http_core_module",
    "link": "http/ngx_http_core_module.html#absolute_redirect",
    "name": "absolute_redirect"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>aio</strong> <code>on</code> | <code>off</code> | <code>threads</code>[<code>=</code><code><i>pool</i></code>];</code><br></td></tr><tr><th>Default:</th><td><pre>aio off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 0.8.11.</p>",
    "doc": "<p>Enables or disables the use of asynchronous file I/O (AIO) on FreeBSD and Linux:</p><blockquote class=\"example\"><pre>location /video/ {\n    aio            on;\n    output_buffers 1 64k;\n}\n</pre></blockquote><p>On FreeBSD, AIO can be used starting from FreeBSD&nbsp;4.3. Prior to FreeBSD&nbsp;11.0, AIO can either be linked statically into a kernel:</p><blockquote class=\"example\"><pre>options VFS_AIO\n</pre></blockquote><p>or loaded dynamically as a kernel loadable module:</p><blockquote class=\"example\"><pre>kldload aio\n</pre></blockquote><p>On Linux, AIO can be used starting from kernel version 2.6.22. Also, it is necessary to enable <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#directio\">directio</a>, or otherwise reading will be blocking:</p><blockquote class=\"example\"><pre>location /video/ {\n    aio            on;\n    directio       512;\n    output_buffers 1 128k;\n}\n</pre></blockquote><p>On Linux, <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#directio\">directio</a> can only be used for reading blocks that are aligned on 512-byte boundaries (or 4K for XFS). File’s unaligned end is read in blocking mode. The same holds true for byte range requests and for FLV requests not from the beginning of a file: reading of unaligned data at the beginning and end of a file will be blocking.</p><p>When both AIO and <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#sendfile\">sendfile</a> are enabled on Linux, AIO is used for files that are larger than or equal to the size specified in the <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#directio\">directio</a> directive, while <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#sendfile\">sendfile</a> is used for files of smaller sizes or when <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#directio\">directio</a> is disabled.</p><blockquote class=\"example\"><pre>location /video/ {\n    sendfile       on;\n    aio            on;\n    directio       8m;\n}\n</pre></blockquote><p>Finally, files can be read and <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#sendfile\">sent</a> using multi-threading (1.7.11), without blocking a worker process:</p><blockquote class=\"example\"><pre>location /video/ {\n    sendfile       on;\n    aio            threads;\n}\n</pre></blockquote><p>Read and send file operations are offloaded to threads of the specified <a href=\"https://nginx.org/en/docs/ngx_core_module.html#thread_pool\">pool</a>. If the pool name is omitted, the pool with the name “<code>default</code>” is used. The pool name can also be set with variables:</p><blockquote class=\"example\"><pre>aio threads=pool$disk;\n</pre></blockquote><p>By default, multi-threading is disabled, it should be enabled with the <code>--with-threads</code> configuration parameter. Currently, multi-threading is compatible only with the <a href=\"https://nginx.org/en/docs/events.html#epoll\">epoll</a>, <a href=\"https://nginx.org/en/docs/events.html#kqueue\">kqueue</a>, and <a href=\"https://nginx.org/en/docs/events.html#eventport\">eventport</a> methods. Multi-threaded sending of files is only supported on Linux.</p><p>See also the <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#sendfile\">sendfile</a> directive.</p>",
    "module": "ngx_http_core_module",
    "link": "http/ngx_http_core_module.html#aio",
    "name": "aio"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>aio_write</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>aio_write off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.9.13.</p>",
    "doc": "<p>If <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#aio\">aio</a> is enabled, specifies whether it is used for writing files. Currently, this only works when using <code>aio threads</code> and is limited to writing temporary files with data received from proxied servers.</p>",
    "module": "ngx_http_core_module",
    "link": "http/ngx_http_core_module.html#aio_write",
    "name": "aio_write"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>alias</strong> <code><i>path</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Defines a replacement for the specified location. For example, with the following configuration</p><blockquote class=\"example\"><pre>location /i/ {\n    alias /data/w3/images/;\n}\n</pre></blockquote><p>on request of “<code>/i/top.gif</code>”, the file <code>/data/w3/images/top.gif</code> will be sent.</p><p>The <code><i>path</i></code> value can contain variables, except <code>$document_root</code> and <code>$realpath_root</code>.</p><p>If <code>alias</code> is used inside a location defined with a regular expression then such regular expression should contain captures and <code>alias</code> should refer to these captures (0.7.40), for example:</p><blockquote class=\"example\"><pre>location ~ ^/users/(.+\\.(?:gif|jpe?g|png))$ {\n    alias /data/w3/images/$1;\n}\n</pre></blockquote><p>When location matches the last part of the directive’s value:</p><blockquote class=\"example\"><pre>location /images/ {\n    alias /data/w3/images/;\n}\n</pre></blockquote><p>it is better to use the <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#root\">root</a> directive instead:</p><blockquote class=\"example\"><pre>location /images/ {\n    root /data/w3;\n}\n</pre></blockquote>",
    "module": "ngx_http_core_module",
    "link": "http/ngx_http_core_module.html#alias",
    "name": "alias"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>auth_delay</strong> <code><i>time</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>auth_delay 0s;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.17.10.</p>",
    "doc": "<p>Delays processing of unauthorized requests with 401 response code to prevent timing attacks when access is limited by <a href=\"https://nginx.org/en/docs/http/ngx_http_auth_basic_module.html\">password</a>, by the <a href=\"https://nginx.org/en/docs/http/ngx_http_auth_request_module.html\">result of subrequest</a>, or by <a href=\"https://nginx.org/en/docs/http/ngx_http_auth_jwt_module.html\">JWT</a>.</p>",
    "module": "ngx_http_core_module",
    "link": "http/ngx_http_core_module.html#auth_delay",
    "name": "auth_delay"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>chunked_transfer_encoding</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>chunked_transfer_encoding on;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Allows disabling chunked transfer encoding in HTTP/1.1. It may come in handy when using a software failing to support chunked encoding despite the standard’s requirement.</p>",
    "module": "ngx_http_core_module",
    "link": "http/ngx_http_core_module.html#chunked_transfer_encoding",
    "name": "chunked_transfer_encoding"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>client_body_buffer_size</strong> <code><i>size</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>client_body_buffer_size 8k|16k;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets buffer size for reading client request body. In case the request body is larger than the buffer, the whole body or only its part is written to a <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#client_body_temp_path\">temporary file</a>. By default, buffer size is equal to two memory pages. This is 8K on x86, other 32-bit platforms, and x86-64. It is usually 16K on other 64-bit platforms.</p>",
    "module": "ngx_http_core_module",
    "link": "http/ngx_http_core_module.html#client_body_buffer_size",
    "name": "client_body_buffer_size"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>client_body_in_file_only</strong> <code>on</code> | <code>clean</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>client_body_in_file_only off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Determines whether nginx should save the entire client request body into a file. This directive can be used during debugging, or when using the <code>$request_body_file</code> variable, or the <a href=\"https://nginx.org/en/docs/http/ngx_http_perl_module.html#methods\">$r-&gt;request_body_file</a> method of the module <a href=\"https://nginx.org/en/docs/http/ngx_http_perl_module.html\">ngx_http_perl_module</a>.</p><p>When set to the value <code>on</code>, temporary files are not removed after request processing.</p><p>The value <code>clean</code> will cause the temporary files left after request processing to be removed.</p>",
    "module": "ngx_http_core_module",
    "link": "http/ngx_http_core_module.html#client_body_in_file_only",
    "name": "client_body_in_file_only"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>client_body_in_single_buffer</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>client_body_in_single_buffer off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Determines whether nginx should save the entire client request body in a single buffer. The directive is recommended when using the <code>$request_body</code> variable, to save the number of copy operations involved.</p>",
    "module": "ngx_http_core_module",
    "link": "http/ngx_http_core_module.html#client_body_in_single_buffer",
    "name": "client_body_in_single_buffer"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>client_body_temp_path</strong> <code><i>path</i></code> [<code><i>level1</i></code> [<code><i>level2</i></code> [<code><i>level3</i></code>]]];</code><br></td></tr><tr><th>Default:</th><td><pre>client_body_temp_path client_body_temp;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Defines a directory for storing temporary files holding client request bodies. Up to three-level subdirectory hierarchy can be used under the specified directory. For example, in the following configuration</p><blockquote class=\"example\"><pre>client_body_temp_path /spool/nginx/client_temp 1 2;\n</pre></blockquote><p>a path to a temporary file might look like this:</p><blockquote class=\"example\"><pre>/spool/nginx/client_temp/7/45/00000123457\n</pre></blockquote>",
    "module": "ngx_http_core_module",
    "link": "http/ngx_http_core_module.html#client_body_temp_path",
    "name": "client_body_temp_path"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>client_body_timeout</strong> <code><i>time</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>client_body_timeout 60s;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Defines a timeout for reading client request body. The timeout is set only for a period between two successive read operations, not for the transmission of the whole request body. If a client does not transmit anything within this time, the request is terminated with the 408 (Request Time-out) error.</p>",
    "module": "ngx_http_core_module",
    "link": "http/ngx_http_core_module.html#client_body_timeout",
    "name": "client_body_timeout"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>client_header_buffer_size</strong> <code><i>size</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>client_header_buffer_size 1k;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets buffer size for reading client request header. For most requests, a buffer of 1K bytes is enough. However, if a request includes long cookies, or comes from a WAP client, it may not fit into 1K. If a request line or a request header field does not fit into this buffer then larger buffers, configured by the <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#large_client_header_buffers\">large_client_header_buffers</a> directive, are allocated.</p><p>If the directive is specified on the <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#server\">server</a> level, the value from the default server can be used. Details are provided in the “<a href=\"https://nginx.org/en/docs/http/server_names.html#virtual_server_selection\">Virtual server selection</a>” section.</p>",
    "module": "ngx_http_core_module",
    "link": "http/ngx_http_core_module.html#client_header_buffer_size",
    "name": "client_header_buffer_size"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>client_header_timeout</strong> <code><i>time</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>client_header_timeout 60s;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code><br></td></tr></tbody></table>",
    "doc": "<p>Defines a timeout for reading client request header. If a client does not transmit the entire header within this time, the request is terminated with the 408 (Request Time-out) error.</p>",
    "module": "ngx_http_core_module",
    "link": "http/ngx_http_core_module.html#client_header_timeout",
    "name": "client_header_timeout"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>client_max_body_size</strong> <code><i>size</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>client_max_body_size 1m;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets the maximum allowed size of the client request body. If the size in a request exceeds the configured value, the 413 (Request Entity Too Large) error is returned to the client. Please be aware that browsers cannot correctly display this error. Setting <code><i>size</i></code> to 0 disables checking of client request body size.</p>",
    "module": "ngx_http_core_module",
    "link": "http/ngx_http_core_module.html#client_max_body_size",
    "name": "client_max_body_size"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>connection_pool_size</strong> <code><i>size</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>connection_pool_size 256|512;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code><br></td></tr></tbody></table>",
    "doc": "<p>Allows accurate tuning of per-connection memory allocations. This directive has minimal impact on performance and should not generally be used. By default, the size is equal to 256 bytes on 32-bit platforms and 512 bytes on 64-bit platforms.</p><blockquote class=\"note\">Prior to version 1.9.8, the default value was 256 on all platforms.</blockquote>",
    "module": "ngx_http_core_module",
    "link": "http/ngx_http_core_module.html#connection_pool_size",
    "name": "connection_pool_size"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>default_type</strong> <code><i>mime-type</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>default_type text/plain;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Defines the default MIME type of a response. Mapping of file name extensions to MIME types can be set with the <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#types\">types</a> directive.</p>",
    "module": "ngx_http_core_module",
    "link": "http/ngx_http_core_module.html#default_type",
    "name": "default_type"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>directio</strong> <code><i>size</i></code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>directio off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 0.7.7.</p>",
    "doc": "<p>Enables the use of the <code>O_DIRECT</code> flag (FreeBSD, Linux), the <code>F_NOCACHE</code> flag (macOS), or the <code>directio()</code> function (Solaris), when reading files that are larger than or equal to the specified <code><i>size</i></code>. The directive automatically disables (0.7.15) the use of <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#sendfile\">sendfile</a> for a given request. It can be useful for serving large files:</p><blockquote class=\"example\"><pre>directio 4m;\n</pre></blockquote><p>or when using <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#aio\">aio</a> on Linux.</p>",
    "module": "ngx_http_core_module",
    "link": "http/ngx_http_core_module.html#directio",
    "name": "directio"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>directio_alignment</strong> <code><i>size</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>directio_alignment 512;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 0.8.11.</p>",
    "doc": "<p>Sets the alignment for <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#directio\">directio</a>. In most cases, a 512-byte alignment is enough. However, when using XFS under Linux, it needs to be increased to 4K.</p>",
    "module": "ngx_http_core_module",
    "link": "http/ngx_http_core_module.html#directio_alignment",
    "name": "directio_alignment"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>disable_symlinks</strong> <code>off</code>;</code><br><code><strong>disable_symlinks</strong> <code>on</code> | <code>if_not_owner</code> [<code>from</code>=<code><i>part</i></code>];</code><br></td></tr><tr><th>Default:</th><td><pre>disable_symlinks off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.1.15.</p>",
    "doc": "<p>Determines how symbolic links should be treated when opening files:</p><dl class=\"compact\"><dt><code>off</code></dt><dd>Symbolic links in the pathname are allowed and not checked. This is the default behavior.</dd><dt><code>on</code></dt><dd>If any component of the pathname is a symbolic link, access to a file is denied.</dd><dt><code>if_not_owner</code></dt><dd>Access to a file is denied if any component of the pathname is a symbolic link, and the link and object that the link points to have different owners.</dd><dt><code>from</code>=<code><i>part</i></code></dt><dd>When checking symbolic links (parameters <code>on</code> and <code>if_not_owner</code>), all components of the pathname are normally checked. Checking of symbolic links in the initial part of the pathname may be avoided by specifying additionally the <code>from</code>=<code><i>part</i></code> parameter. In this case, symbolic links are checked only from the pathname component that follows the specified initial part. If the value is not an initial part of the pathname checked, the whole pathname is checked as if this parameter was not specified at all. If the value matches the whole file name, symbolic links are not checked. The parameter value can contain variables.</dd></dl><p>Example:</p><blockquote class=\"example\"><pre>disable_symlinks on from=$document_root;\n</pre></blockquote><p>This directive is only available on systems that have the <code>openat()</code> and <code>fstatat()</code> interfaces. Such systems include modern versions of FreeBSD, Linux, and Solaris.</p><p>Parameters <code>on</code> and <code>if_not_owner</code> add a processing overhead.</p><blockquote class=\"note\">On systems that do not support opening of directories only for search, to use these parameters it is required that worker processes have read permissions for all directories being checked.</blockquote><blockquote class=\"note\">The <a href=\"https://nginx.org/en/docs/http/ngx_http_autoindex_module.html\">ngx_http_autoindex_module</a>, <a href=\"https://nginx.org/en/docs/http/ngx_http_random_index_module.html\">ngx_http_random_index_module</a>, and <a href=\"https://nginx.org/en/docs/http/ngx_http_dav_module.html\">ngx_http_dav_module</a> modules currently ignore this directive.</blockquote>",
    "module": "ngx_http_core_module",
    "link": "http/ngx_http_core_module.html#disable_symlinks",
    "name": "disable_symlinks"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>error_page</strong> <code><i>code</i></code> ... [<code>=</code>[<code><i>response</i></code>]] <code><i>uri</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code>, <code>if in location</code><br></td></tr></tbody></table>",
    "doc": "<p>Defines the URI that will be shown for the specified errors. A <code><i>uri</i></code> value can contain variables.</p><p>Example:</p><blockquote class=\"example\"><pre>error_page 404             /404.html;\nerror_page 500 502 503 504 /50x.html;\n</pre></blockquote><p>This causes an internal redirect to the specified <code><i>uri</i></code> with the client request method changed to “<code>GET</code>” (for all methods other than “<code>GET</code>” and “<code>HEAD</code>”).</p><p>Furthermore, it is possible to change the response code to another using the “<code>=</code><code><i>response</i></code>” syntax, for example:</p><blockquote class=\"example\"><pre>error_page 404 =200 /empty.gif;\n</pre></blockquote><p>If an error response is processed by a proxied server or a FastCGI/uwsgi/SCGI/gRPC server, and the server may return different response codes (e.g., 200, 302, 401 or 404), it is possible to respond with the code it returns:</p><blockquote class=\"example\"><pre>error_page 404 = /404.php;\n</pre></blockquote><p>If there is no need to change URI and method during internal redirection it is possible to pass error processing into a named location:</p><blockquote class=\"example\"><pre>location / {\n    error_page 404 = @fallback;\n}\n\nlocation @fallback {\n    proxy_pass http://backend;\n}\n</pre></blockquote><blockquote class=\"note\">If <code><i>uri</i></code> processing leads to an error, the status code of the last occurred error is returned to the client.</blockquote><p>It is also possible to use URL redirects for error processing:</p><blockquote class=\"example\"><pre>error_page 403      http://example.com/forbidden.html;\nerror_page 404 =301 http://example.com/notfound.html;\n</pre></blockquote><p>In this case, by default, the response code 302 is returned to the client. It can only be changed to one of the redirect status codes (301, 302, 303, 307, and 308).</p><blockquote class=\"note\">The code 307 was not treated as a redirect until versions 1.1.16 and 1.0.13.</blockquote><blockquote class=\"note\">The code 308 was not treated as a redirect until version 1.13.0.</blockquote><p>These directives are inherited from the previous configuration level if and only if there are no <code>error_page</code> directives defined on the current level.</p>",
    "module": "ngx_http_core_module",
    "link": "http/ngx_http_core_module.html#error_page",
    "name": "error_page"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>etag</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>etag on;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.3.3.</p>",
    "doc": "<p>Enables or disables automatic generation of the “ETag” response header field for static resources.</p>",
    "module": "ngx_http_core_module",
    "link": "http/ngx_http_core_module.html#etag",
    "name": "etag"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>http</strong> { ... }</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>main</code><br></td></tr></tbody></table>",
    "doc": "<p>Provides the configuration file context in which the HTTP server directives are specified.</p>",
    "module": "ngx_http_core_module",
    "link": "http/ngx_http_core_module.html#http",
    "name": "http"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>if_modified_since</strong> <code>off</code> | <code>exact</code> | <code>before</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>if_modified_since exact;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 0.7.24.</p>",
    "doc": "<p>Specifies how to compare modification time of a response with the time in the “If-Modified-Since” request header field:</p><dl class=\"compact\"><dt><code>off</code></dt><dd>the “If-Modified-Since” request header field is ignored (0.7.34);</dd><dt><code>exact</code></dt><dd>exact match;</dd><dt><code>before</code></dt><dd>modification time of a response is less than or equal to the time in the “If-Modified-Since” request header field.</dd></dl>",
    "module": "ngx_http_core_module",
    "link": "http/ngx_http_core_module.html#if_modified_since",
    "name": "if_modified_since"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>ignore_invalid_headers</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>ignore_invalid_headers on;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code><br></td></tr></tbody></table>",
    "doc": "<p>Controls whether header fields with invalid names should be ignored. Valid names are composed of English letters, digits, hyphens, and possibly underscores (as controlled by the <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#underscores_in_headers\">underscores_in_headers</a> directive).</p><p>If the directive is specified on the <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#server\">server</a> level, the value from the default server can be used. Details are provided in the “<a href=\"https://nginx.org/en/docs/http/server_names.html#virtual_server_selection\">Virtual server selection</a>” section.</p>",
    "module": "ngx_http_core_module",
    "link": "http/ngx_http_core_module.html#ignore_invalid_headers",
    "name": "ignore_invalid_headers"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>internal</strong>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Specifies that a given location can only be used for internal requests. For external requests, the client error 404 (Not Found) is returned. Internal requests are the following:</p>",
    "module": "ngx_http_core_module",
    "link": "http/ngx_http_core_module.html#internal",
    "name": "internal"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>keepalive_disable</strong> <code>none</code> | <code><i>browser</i></code> ...;</code><br></td></tr><tr><th>Default:</th><td><pre>keepalive_disable msie6;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Disables keep-alive connections with misbehaving browsers. The <code><i>browser</i></code> parameters specify which browsers will be affected. The value <code>msie6</code> disables keep-alive connections with old versions of MSIE, once a POST request is received. The value <code>safari</code> disables keep-alive connections with Safari and Safari-like browsers on macOS and macOS-like operating systems. The value <code>none</code> enables keep-alive connections with all browsers.</p><blockquote class=\"note\">Prior to version 1.1.18, the value <code>safari</code> matched all Safari and Safari-like browsers on all operating systems, and keep-alive connections with them were disabled by default.</blockquote>",
    "module": "ngx_http_core_module",
    "link": "http/ngx_http_core_module.html#keepalive_disable",
    "name": "keepalive_disable"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>keepalive_requests</strong> <code><i>number</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>keepalive_requests 1000;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 0.8.0.</p>",
    "doc": "<p>Sets the maximum number of requests that can be served through one keep-alive connection. After the maximum number of requests are made, the connection is closed.</p><p>Closing connections periodically is necessary to free per-connection memory allocations. Therefore, using too high maximum number of requests could result in excessive memory usage and not recommended.</p><blockquote class=\"note\">Prior to version 1.19.10, the default value was 100.</blockquote>",
    "module": "ngx_http_core_module",
    "link": "http/ngx_http_core_module.html#keepalive_requests",
    "name": "keepalive_requests"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>keepalive_time</strong> <code><i>time</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>keepalive_time 1h;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.19.10.</p>",
    "doc": "<p>Limits the maximum time during which requests can be processed through one keep-alive connection. After this time is reached, the connection is closed following the subsequent request processing.</p>",
    "module": "ngx_http_core_module",
    "link": "http/ngx_http_core_module.html#keepalive_time",
    "name": "keepalive_time"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>keepalive_timeout</strong> <code><i>timeout</i></code> [<code><i>header_timeout</i></code>];</code><br></td></tr><tr><th>Default:</th><td><pre>keepalive_timeout 75s;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>The first parameter sets a timeout during which a keep-alive client connection will stay open on the server side. The zero value disables keep-alive client connections. The optional second parameter sets a value in the “Keep-Alive: timeout=<code><i>time</i></code>” response header field. Two parameters may differ.</p><p>The “Keep-Alive: timeout=<code><i>time</i></code>” header field is recognized by Mozilla and Konqueror. MSIE closes keep-alive connections by itself in about 60 seconds.</p>",
    "module": "ngx_http_core_module",
    "link": "http/ngx_http_core_module.html#keepalive_timeout",
    "name": "keepalive_timeout"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>large_client_header_buffers</strong> <code><i>number</i></code> <code><i>size</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>large_client_header_buffers 4 8k;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets the maximum <code><i>number</i></code> and <code><i>size</i></code> of buffers used for reading large client request header. A request line cannot exceed the size of one buffer, or the 414 (Request-URI Too Large) error is returned to the client. A request header field cannot exceed the size of one buffer as well, or the 400 (Bad Request) error is returned to the client. Buffers are allocated only on demand. By default, the buffer size is equal to 8K bytes. If after the end of request processing a connection is transitioned into the keep-alive state, these buffers are released.</p><p>If the directive is specified on the <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#server\">server</a> level, the value from the default server can be used. Details are provided in the “<a href=\"https://nginx.org/en/docs/http/server_names.html#virtual_server_selection\">Virtual server selection</a>” section.</p>",
    "module": "ngx_http_core_module",
    "link": "http/ngx_http_core_module.html#large_client_header_buffers",
    "name": "large_client_header_buffers"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>limit_except</strong> <code><i>method</i></code> ... { ... }</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Limits allowed HTTP methods inside a location. The <code><i>method</i></code> parameter can be one of the following: <code>GET</code>, <code>HEAD</code>, <code>POST</code>, <code>PUT</code>, <code>DELETE</code>, <code>MKCOL</code>, <code>COPY</code>, <code>MOVE</code>, <code>OPTIONS</code>, <code>PROPFIND</code>, <code>PROPPATCH</code>, <code>LOCK</code>, <code>UNLOCK</code>, or <code>PATCH</code>. Allowing the <code>GET</code> method makes the <code>HEAD</code> method also allowed. Access to other methods can be limited using the <a href=\"https://nginx.org/en/docs/http/ngx_http_access_module.html\">ngx_http_access_module</a>, <a href=\"https://nginx.org/en/docs/http/ngx_http_auth_basic_module.html\">ngx_http_auth_basic_module</a>, and <a href=\"https://nginx.org/en/docs/http/ngx_http_auth_jwt_module.html\">ngx_http_auth_jwt_module</a> (1.13.10) modules directives:</p><blockquote class=\"example\"><pre>limit_except GET {\n    allow 192.168.1.0/32;\n    deny  all;\n}\n</pre></blockquote><p>Please note that this will limit access to all methods <strong>except</strong> GET and HEAD.</p>",
    "module": "ngx_http_core_module",
    "link": "http/ngx_http_core_module.html#limit_except",
    "name": "limit_except"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>limit_rate</strong> <code><i>rate</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>limit_rate 0;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code>, <code>if in location</code><br></td></tr></tbody></table>",
    "doc": "<p>Limits the rate of response transmission to a client. The <code><i>rate</i></code> is specified in bytes per second. The zero value disables rate limiting. The limit is set per a request, and so if a client simultaneously opens two connections, the overall rate will be twice as much as the specified limit.</p><p>Parameter value can contain variables (1.17.0). It may be useful in cases where rate should be limited depending on a certain condition:</p><blockquote class=\"example\"><pre>map $slow $rate {\n    1     4k;\n    2     8k;\n}\n\nlimit_rate $rate;\n</pre></blockquote><p>Rate limit can also be set in the <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#var_limit_rate\"><code>$limit_rate</code></a> variable, however, since version 1.17.0, this method is not recommended:</p><blockquote class=\"example\"><pre>server {\n\n    if ($slow) {\n        set $limit_rate 4k;\n    }\n\n    ...\n}\n</pre></blockquote><p>Rate limit can also be set in the “X-Accel-Limit-Rate” header field of a proxied server response. This capability can be disabled using the <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_ignore_headers\">proxy_ignore_headers</a>, <a href=\"https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_ignore_headers\">fastcgi_ignore_headers</a>, <a href=\"https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_ignore_headers\">uwsgi_ignore_headers</a>, and <a href=\"https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_ignore_headers\">scgi_ignore_headers</a> directives.</p>",
    "module": "ngx_http_core_module",
    "link": "http/ngx_http_core_module.html#limit_rate",
    "name": "limit_rate"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>limit_rate_after</strong> <code><i>size</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>limit_rate_after 0;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code>, <code>if in location</code><br></td></tr></tbody></table><p>This directive appeared in version 0.8.0.</p>",
    "doc": "<p>Sets the initial amount after which the further transmission of a response to a client will be rate limited. Parameter value can contain variables (1.17.0).</p><p>Example:</p><blockquote class=\"example\"><pre>location /flv/ {\n    flv;\n    limit_rate_after 500k;\n    limit_rate       50k;\n}\n</pre></blockquote>",
    "module": "ngx_http_core_module",
    "link": "http/ngx_http_core_module.html#limit_rate_after",
    "name": "limit_rate_after"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>lingering_close</strong> <code>off</code> | <code>on</code> | <code>always</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>lingering_close on;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in versions 1.1.0 and 1.0.6.</p>",
    "doc": "<p>Controls how nginx closes client connections.</p><p>The default value “<code>on</code>” instructs nginx to <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#lingering_timeout\">wait for</a> and <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#lingering_time\">process</a> additional data from a client before fully closing a connection, but only if heuristics suggests that a client may be sending more data.</p><p>The value “<code>always</code>” will cause nginx to unconditionally wait for and process additional client data.</p><p>The value “<code>off</code>” tells nginx to never wait for more data and close the connection immediately. This behavior breaks the protocol and should not be used under normal circumstances.</p><p>To control closing <a href=\"https://nginx.org/en/docs/http/ngx_http_v2_module.html\">HTTP/2</a> connections, the directive must be specified on the <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#server\">server</a> level (1.19.1).</p>",
    "module": "ngx_http_core_module",
    "link": "http/ngx_http_core_module.html#lingering_close",
    "name": "lingering_close"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>lingering_time</strong> <code><i>time</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>lingering_time 30s;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>When <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#lingering_close\">lingering_close</a> is in effect, this directive specifies the maximum time during which nginx will process (read and ignore) additional data coming from a client. After that, the connection will be closed, even if there will be more data.</p>",
    "module": "ngx_http_core_module",
    "link": "http/ngx_http_core_module.html#lingering_time",
    "name": "lingering_time"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>lingering_timeout</strong> <code><i>time</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>lingering_timeout 5s;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>When <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#lingering_close\">lingering_close</a> is in effect, this directive specifies the maximum waiting time for more client data to arrive. If data are not received during this time, the connection is closed. Otherwise, the data are read and ignored, and nginx starts waiting for more data again. The “wait-read-ignore” cycle is repeated, but no longer than specified by the <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#lingering_time\">lingering_time</a> directive.</p>",
    "module": "ngx_http_core_module",
    "link": "http/ngx_http_core_module.html#lingering_timeout",
    "name": "lingering_timeout"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>listen</strong> <code><i>address</i></code>[:<code><i>port</i></code>] [<code>default_server</code>] [<code>ssl</code>] [<code>http2</code> | <code>spdy</code>] [<code>proxy_protocol</code>] [<code>setfib</code>=<code><i>number</i></code>] [<code>fastopen</code>=<code><i>number</i></code>] [<code>backlog</code>=<code><i>number</i></code>] [<code>rcvbuf</code>=<code><i>size</i></code>] [<code>sndbuf</code>=<code><i>size</i></code>] [<code>accept_filter</code>=<code><i>filter</i></code>] [<code>deferred</code>] [<code>bind</code>] [<code>ipv6only</code>=<code>on</code>|<code>off</code>] [<code>reuseport</code>] [<code>so_keepalive</code>=<code>on</code>|<code>off</code>|[<code><i>keepidle</i></code>]:[<code><i>keepintvl</i></code>]:[<code><i>keepcnt</i></code>]];</code><br><code><strong>listen</strong> <code><i>port</i></code> [<code>default_server</code>] [<code>ssl</code>] [<code>http2</code> | <code>spdy</code>] [<code>proxy_protocol</code>] [<code>setfib</code>=<code><i>number</i></code>] [<code>fastopen</code>=<code><i>number</i></code>] [<code>backlog</code>=<code><i>number</i></code>] [<code>rcvbuf</code>=<code><i>size</i></code>] [<code>sndbuf</code>=<code><i>size</i></code>] [<code>accept_filter</code>=<code><i>filter</i></code>] [<code>deferred</code>] [<code>bind</code>] [<code>ipv6only</code>=<code>on</code>|<code>off</code>] [<code>reuseport</code>] [<code>so_keepalive</code>=<code>on</code>|<code>off</code>|[<code><i>keepidle</i></code>]:[<code><i>keepintvl</i></code>]:[<code><i>keepcnt</i></code>]];</code><br><code><strong>listen</strong> <code>unix:</code><code><i>path</i></code> [<code>default_server</code>] [<code>ssl</code>] [<code>http2</code> | <code>spdy</code>] [<code>proxy_protocol</code>] [<code>backlog</code>=<code><i>number</i></code>] [<code>rcvbuf</code>=<code><i>size</i></code>] [<code>sndbuf</code>=<code><i>size</i></code>] [<code>accept_filter</code>=<code><i>filter</i></code>] [<code>deferred</code>] [<code>bind</code>] [<code>so_keepalive</code>=<code>on</code>|<code>off</code>|[<code><i>keepidle</i></code>]:[<code><i>keepintvl</i></code>]:[<code><i>keepcnt</i></code>]];</code><br></td></tr><tr><th>Default:</th><td><pre>listen *:80 | *:8000;</pre></td></tr><tr><th>Context:</th><td><code>server</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets the <code><i>address</i></code> and <code><i>port</i></code> for IP, or the <code><i>path</i></code> for a UNIX-domain socket on which the server will accept requests. Both <code><i>address</i></code> and <code><i>port</i></code>, or only <code><i>address</i></code> or only <code><i>port</i></code> can be specified. An <code><i>address</i></code> may also be a hostname, for example:</p><blockquote class=\"example\"><pre>listen 127.0.0.1:8000;\nlisten 127.0.0.1;\nlisten 8000;\nlisten *:8000;\nlisten localhost:8000;\n</pre></blockquote><p>IPv6 addresses (0.7.36) are specified in square brackets:</p><blockquote class=\"example\"><pre>listen [::]:8000;\nlisten [::1];\n</pre></blockquote><p>UNIX-domain sockets (0.8.21) are specified with the “<code>unix:</code>” prefix:</p><blockquote class=\"example\"><pre>listen unix:/var/run/nginx.sock;\n</pre></blockquote><p>If only <code><i>address</i></code> is given, the port 80 is used.</p><p>If the directive is not present then either <code>*:80</code> is used if nginx runs with the superuser privileges, or <code>*:8000</code> otherwise.</p><p>The <code>default_server</code> parameter, if present, will cause the server to become the default server for the specified <code><i>address</i></code>:<code><i>port</i></code> pair. If none of the directives have the <code>default_server</code> parameter then the first server with the <code><i>address</i></code>:<code><i>port</i></code> pair will be the default server for this pair.</p><blockquote class=\"note\">In versions prior to 0.8.21 this parameter is named simply <code>default</code>.</blockquote><p>The <code>ssl</code> parameter (0.7.14) allows specifying that all connections accepted on this port should work in SSL mode. This allows for a more compact <a href=\"https://nginx.org/en/docs/http/configuring_https_servers.html#single_http_https_server\">configuration</a> for the server that handles both HTTP and HTTPS requests.</p><p>The <code>http2</code> parameter (1.9.5) configures the port to accept <a href=\"https://nginx.org/en/docs/http/ngx_http_v2_module.html\">HTTP/2</a> connections. Normally, for this to work the <code>ssl</code> parameter should be specified as well, but nginx can also be configured to accept HTTP/2 connections without SSL.</p><p>The <code>spdy</code> parameter (1.3.15-1.9.4) allows accepting <a href=\"https://nginx.org/en/docs/http/ngx_http_spdy_module.html\">SPDY</a> connections on this port. Normally, for this to work the <code>ssl</code> parameter should be specified as well, but nginx can also be configured to accept SPDY connections without SSL.</p><p>The <code>proxy_protocol</code> parameter (1.5.12) allows specifying that all connections accepted on this port should use the <a href=\"http://www.haproxy.org/download/1.5/doc/proxy-protocol.txt\">PROXY protocol</a>.</p><blockquote class=\"note\">The PROXY protocol version 2 is supported since version 1.13.11.</blockquote><p>The <code>listen</code> directive can have several additional parameters specific to socket-related system calls. These parameters can be specified in any <code>listen</code> directive, but only once for a given <code><i>address</i></code>:<code><i>port</i></code> pair.</p><blockquote class=\"note\">In versions prior to 0.8.21, they could only be specified in the <code>listen</code> directive together with the <code>default</code> parameter.</blockquote><dl class=\"compact\"><dt><code>setfib</code>=<code><i>number</i></code></dt><dd>this parameter (0.8.44) sets the associated routing table, FIB (the <code>SO_SETFIB</code> option) for the listening socket. This currently works only on FreeBSD.</dd><dt><code>fastopen</code>=<code><i>number</i></code></dt><dd>enables “<a href=\"http://en.wikipedia.org/wiki/TCP_Fast_Open\">TCP Fast Open</a>” for the listening socket (1.5.8) and <a href=\"https://datatracker.ietf.org/doc/html/rfc7413#section-5.1\">limits</a> the maximum length for the queue of connections that have not yet completed the three-way handshake.<blockquote class=\"note\">Do not enable this feature unless the server can handle receiving the <a href=\"https://datatracker.ietf.org/doc/html/rfc7413#section-6.1\">same SYN packet with data</a> more than once.</blockquote></dd><dt><code>backlog</code>=<code><i>number</i></code></dt><dd>sets the <code>backlog</code> parameter in the <code>listen()</code> call that limits the maximum length for the queue of pending connections. By default, <code>backlog</code> is set to -1 on FreeBSD, DragonFly BSD, and macOS, and to 511 on other platforms.</dd><dt><code>rcvbuf</code>=<code><i>size</i></code></dt><dd>sets the receive buffer size (the <code>SO_RCVBUF</code> option) for the listening socket.</dd><dt><code>sndbuf</code>=<code><i>size</i></code></dt><dd>sets the send buffer size (the <code>SO_SNDBUF</code> option) for the listening socket.</dd><dt><code>accept_filter</code>=<code><i>filter</i></code></dt><dd>sets the name of accept filter (the <code>SO_ACCEPTFILTER</code> option) for the listening socket that filters incoming connections before passing them to <code>accept()</code>. This works only on FreeBSD and NetBSD&nbsp;5.0+. Possible values are <a href=\"http://man.freebsd.org/accf_data\">dataready</a> and <a href=\"http://man.freebsd.org/accf_http\">httpready</a>.</dd><dt><code>deferred</code></dt><dd>instructs to use a deferred <code>accept()</code> (the <code>TCP_DEFER_ACCEPT</code> socket option) on Linux.</dd><dt><code>bind</code></dt><dd>instructs to make a separate <code>bind()</code> call for a given <code><i>address</i></code>:<code><i>port</i></code> pair. This is useful because if there are several <code>listen</code> directives with the same port but different addresses, and one of the <code>listen</code> directives listens on all addresses for the given port (<code>*:</code><code><i>port</i></code>), nginx will <code>bind()</code> only to <code>*:</code><code><i>port</i></code>. It should be noted that the <code>getsockname()</code> system call will be made in this case to determine the address that accepted the connection. If the <code>setfib</code>, <code>fastopen</code>, <code>backlog</code>, <code>rcvbuf</code>, <code>sndbuf</code>, <code>accept_filter</code>, <code>deferred</code>, <code>ipv6only</code>, <code>reuseport</code>, or <code>so_keepalive</code> parameters are used then for a given <code><i>address</i></code>:<code><i>port</i></code> pair a separate <code>bind()</code> call will always be made.</dd><dt><code>ipv6only</code>=<code>on</code>|<code>off</code></dt><dd>this parameter (0.7.42) determines (via the <code>IPV6_V6ONLY</code> socket option) whether an IPv6 socket listening on a wildcard address <code>[::]</code> will accept only IPv6 connections or both IPv6 and IPv4 connections. This parameter is turned on by default. It can only be set once on start.<blockquote class=\"note\">Prior to version 1.3.4, if this parameter was omitted then the operating system’s settings were in effect for the socket.</blockquote></dd><dt id=\"reuseport\"><code>reuseport</code></dt><dd>this parameter (1.9.1) instructs to create an individual listening socket for each worker process (using the <code>SO_REUSEPORT</code> socket option on Linux 3.9+ and DragonFly BSD, or <code>SO_REUSEPORT_LB</code> on FreeBSD&nbsp;12+), allowing a kernel to distribute incoming connections between worker processes. This currently works only on Linux&nbsp;3.9+, DragonFly BSD, and FreeBSD 12+ (1.15.1).<blockquote class=\"note\">Inappropriate use of this option may have its security <a href=\"http://man7.org/linux/man-pages/man7/socket.7.html\">implications</a>.</blockquote></dd><dt><code>so_keepalive</code>=<code>on</code>|<code>off</code>|[<code><i>keepidle</i></code>]:[<code><i>keepintvl</i></code>]:[<code><i>keepcnt</i></code>]</dt><dd>this parameter (1.1.11) configures the “TCP keepalive” behavior for the listening socket. If this parameter is omitted then the operating system’s settings will be in effect for the socket. If it is set to the value “<code>on</code>”, the <code>SO_KEEPALIVE</code> option is turned on for the socket. If it is set to the value “<code>off</code>”, the <code>SO_KEEPALIVE</code> option is turned off for the socket. Some operating systems support setting of TCP keepalive parameters on a per-socket basis using the <code>TCP_KEEPIDLE</code>, <code>TCP_KEEPINTVL</code>, and <code>TCP_KEEPCNT</code> socket options. On such systems (currently, Linux&nbsp;2.4+, NetBSD&nbsp;5+, and FreeBSD&nbsp;9.0-STABLE), they can be configured using the <code><i>keepidle</i></code>, <code><i>keepintvl</i></code>, and <code><i>keepcnt</i></code> parameters. One or two parameters may be omitted, in which case the system default setting for the corresponding socket option will be in effect. For example,<blockquote class=\"example\"><pre>so_keepalive=30m::10</pre></blockquote>will set the idle timeout (<code>TCP_KEEPIDLE</code>) to 30 minutes, leave the probe interval (<code>TCP_KEEPINTVL</code>) at its system default, and set the probes count (<code>TCP_KEEPCNT</code>) to 10 probes.</dd></dl><p>Example:</p><blockquote class=\"example\"><pre>listen 127.0.0.1 default_server accept_filter=dataready backlog=1024;\n</pre></blockquote>",
    "module": "ngx_http_core_module",
    "link": "http/ngx_http_core_module.html#listen",
    "name": "listen"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>location</strong> [ <code>=</code> | <code>~</code> | <code>~*</code> | <code>^~</code> ] <code><i>uri</i></code> { ... }</code><br><code><strong>location</strong> <code>@</code><code><i>name</i></code> { ... }</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets configuration depending on a request URI.</p><p>The matching is performed against a normalized URI, after decoding the text encoded in the “<code>%XX</code>” form, resolving references to relative path components “<code>.</code>” and “<code>..</code>”, and possible <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#merge_slashes\">compression</a> of two or more adjacent slashes into a single slash.</p><p>A location can either be defined by a prefix string, or by a regular expression. Regular expressions are specified with the preceding “<code>~*</code>” modifier (for case-insensitive matching), or the “<code>~</code>” modifier (for case-sensitive matching). To find location matching a given request, nginx first checks locations defined using the prefix strings (prefix locations). Among them, the location with the longest matching prefix is selected and remembered. Then regular expressions are checked, in the order of their appearance in the configuration file. The search of regular expressions terminates on the first match, and the corresponding configuration is used. If no match with a regular expression is found then the configuration of the prefix location remembered earlier is used.</p><p><code>location</code> blocks can be nested, with some exceptions mentioned below.</p><p>For case-insensitive operating systems such as macOS and Cygwin, matching with prefix strings ignores a case (0.7.7). However, comparison is limited to one-byte locales.</p><p>Regular expressions can contain captures (0.7.40) that can later be used in other directives.</p><p>If the longest matching prefix location has the “<code>^~</code>” modifier then regular expressions are not checked.</p><p>Also, using the “<code>=</code>” modifier it is possible to define an exact match of URI and location. If an exact match is found, the search terminates. For example, if a “<code>/</code>” request happens frequently, defining “<code>location = /</code>” will speed up the processing of these requests, as search terminates right after the first comparison. Such a location cannot obviously contain nested locations.</p><blockquote class=\"note\">In versions from 0.7.1 to 0.8.41, if a request matched the prefix location without the “<code>=</code>” and “<code>^~</code>” modifiers, the search also terminated and regular expressions were not checked.</blockquote><p>Let’s illustrate the above by an example:</p><blockquote class=\"example\"><pre>location = / {\n    [ configuration A ]\n}\n\nlocation / {\n    [ configuration B ]\n}\n\nlocation /documents/ {\n    [ configuration C ]\n}\n\nlocation ^~ /images/ {\n    [ configuration D ]\n}\n\nlocation ~* \\.(gif|jpg|jpeg)$ {\n    [ configuration E ]\n}\n</pre></blockquote><p>The “<code>/</code>” request will match configuration A, the “<code>/index.html</code>” request will match configuration B, the “<code>/documents/document.html</code>” request will match configuration C, the “<code>/images/1.gif</code>” request will match configuration D, and the “<code>/documents/1.jpg</code>” request will match configuration E.</p><p>The “<code>@</code>” prefix defines a named location. Such a location is not used for a regular request processing, but instead used for request redirection. They cannot be nested, and cannot contain nested locations.</p><p>If a location is defined by a prefix string that ends with the slash character, and requests are processed by one of <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_pass\">proxy_pass</a>, <a href=\"https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_pass\">fastcgi_pass</a>, <a href=\"https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_pass\">uwsgi_pass</a>, <a href=\"https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_pass\">scgi_pass</a>, <a href=\"https://nginx.org/en/docs/http/ngx_http_memcached_module.html#memcached_pass\">memcached_pass</a>, or <a href=\"https://nginx.org/en/docs/http/ngx_http_grpc_module.html#grpc_pass\">grpc_pass</a>, then the special processing is performed. In response to a request with URI equal to this string, but without the trailing slash, a permanent redirect with the code 301 will be returned to the requested URI with the slash appended. If this is not desired, an exact match of the URI and location could be defined like this:</p><blockquote class=\"example\"><pre>location /user/ {\n    proxy_pass http://user.example.com;\n}\n\nlocation = /user {\n    proxy_pass http://login.example.com;\n}\n</pre></blockquote>",
    "module": "ngx_http_core_module",
    "link": "http/ngx_http_core_module.html#location",
    "name": "location"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>log_not_found</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>log_not_found on;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Enables or disables logging of errors about not found files into <a href=\"https://nginx.org/en/docs/ngx_core_module.html#error_log\">error_log</a>.</p>",
    "module": "ngx_http_core_module",
    "link": "http/ngx_http_core_module.html#log_not_found",
    "name": "log_not_found"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>log_subrequest</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>log_subrequest off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Enables or disables logging of subrequests into <a href=\"https://nginx.org/en/docs/http/ngx_http_log_module.html#access_log\">access_log</a>.</p>",
    "module": "ngx_http_core_module",
    "link": "http/ngx_http_core_module.html#log_subrequest",
    "name": "log_subrequest"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>max_ranges</strong> <code><i>number</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.1.2.</p>",
    "doc": "<p>Limits the maximum allowed number of ranges in byte-range requests. Requests that exceed the limit are processed as if there were no byte ranges specified. By default, the number of ranges is not limited. The zero value disables the byte-range support completely.</p>",
    "module": "ngx_http_core_module",
    "link": "http/ngx_http_core_module.html#max_ranges",
    "name": "max_ranges"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>merge_slashes</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>merge_slashes on;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code><br></td></tr></tbody></table>",
    "doc": "<p>Enables or disables compression of two or more adjacent slashes in a URI into a single slash.</p><p>Note that compression is essential for the correct matching of prefix string and regular expression locations. Without it, the “<code>//scripts/one.php</code>” request would not match</p><blockquote class=\"example\"><pre>location /scripts/ {\n    ...\n}\n</pre></blockquote><p>and might be processed as a static file. So it gets converted to “<code>/scripts/one.php</code>”.</p><p>Turning the compression <code>off</code> can become necessary if a URI contains base64-encoded names, since base64 uses the “<code>/</code>” character internally. However, for security considerations, it is better to avoid turning the compression off.</p><p>If the directive is specified on the <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#server\">server</a> level, the value from the default server can be used. Details are provided in the “<a href=\"https://nginx.org/en/docs/http/server_names.html#virtual_server_selection\">Virtual server selection</a>” section.</p>",
    "module": "ngx_http_core_module",
    "link": "http/ngx_http_core_module.html#merge_slashes",
    "name": "merge_slashes"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>msie_padding</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>msie_padding on;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Enables or disables adding comments to responses for MSIE clients with status greater than 400 to increase the response size to 512 bytes.</p>",
    "module": "ngx_http_core_module",
    "link": "http/ngx_http_core_module.html#msie_padding",
    "name": "msie_padding"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>msie_refresh</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>msie_refresh off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Enables or disables issuing refreshes instead of redirects for MSIE clients.</p>",
    "module": "ngx_http_core_module",
    "link": "http/ngx_http_core_module.html#msie_refresh",
    "name": "msie_refresh"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>open_file_cache</strong> <code>off</code>;</code><br><code><strong>open_file_cache</strong> <code>max</code>=<code><i>N</i></code> [<code>inactive</code>=<code><i>time</i></code>];</code><br></td></tr><tr><th>Default:</th><td><pre>open_file_cache off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Configures a cache that can store:</p>",
    "module": "ngx_http_core_module",
    "link": "http/ngx_http_core_module.html#open_file_cache",
    "name": "open_file_cache"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>open_file_cache_errors</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>open_file_cache_errors off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Enables or disables caching of file lookup errors by <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#open_file_cache\">open_file_cache</a>.</p>",
    "module": "ngx_http_core_module",
    "link": "http/ngx_http_core_module.html#open_file_cache_errors",
    "name": "open_file_cache_errors"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>open_file_cache_min_uses</strong> <code><i>number</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>open_file_cache_min_uses 1;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets the minimum <code><i>number</i></code> of file accesses during the period configured by the <code>inactive</code> parameter of the <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#open_file_cache\">open_file_cache</a> directive, required for a file descriptor to remain open in the cache.</p>",
    "module": "ngx_http_core_module",
    "link": "http/ngx_http_core_module.html#open_file_cache_min_uses",
    "name": "open_file_cache_min_uses"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>open_file_cache_valid</strong> <code><i>time</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>open_file_cache_valid 60s;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets a time after which <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#open_file_cache\">open_file_cache</a> elements should be validated.</p>",
    "module": "ngx_http_core_module",
    "link": "http/ngx_http_core_module.html#open_file_cache_valid",
    "name": "open_file_cache_valid"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>output_buffers</strong> <code><i>number</i></code> <code><i>size</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>output_buffers 2 32k;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets the <code><i>number</i></code> and <code><i>size</i></code> of the buffers used for reading a response from a disk.</p><blockquote class=\"note\">Prior to version 1.9.5, the default value was 1 32k.</blockquote>",
    "module": "ngx_http_core_module",
    "link": "http/ngx_http_core_module.html#output_buffers",
    "name": "output_buffers"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>port_in_redirect</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>port_in_redirect on;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Enables or disables specifying the port in <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#absolute_redirect\">absolute</a> redirects issued by nginx.</p><p>The use of the primary server name in redirects is controlled by the <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#server_name_in_redirect\">server_name_in_redirect</a> directive.</p>",
    "module": "ngx_http_core_module",
    "link": "http/ngx_http_core_module.html#port_in_redirect",
    "name": "port_in_redirect"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>postpone_output</strong> <code><i>size</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>postpone_output 1460;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>If possible, the transmission of client data will be postponed until nginx has at least <code><i>size</i></code> bytes of data to send. The zero value disables postponing data transmission.</p>",
    "module": "ngx_http_core_module",
    "link": "http/ngx_http_core_module.html#postpone_output",
    "name": "postpone_output"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>read_ahead</strong> <code><i>size</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>read_ahead 0;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets the amount of pre-reading for the kernel when working with file.</p><p>On Linux, the <code>posix_fadvise(0, 0, 0, POSIX_FADV_SEQUENTIAL)</code> system call is used, and so the <code><i>size</i></code> parameter is ignored.</p><p>On FreeBSD, the <code>fcntl(O_READAHEAD,</code> <code><i>size</i></code><code>)</code> system call, supported since FreeBSD&nbsp;9.0-CURRENT, is used. FreeBSD&nbsp;7 has to be <a href=\"http://sysoev.ru/freebsd/patch.readahead.txt\">patched</a>.</p>",
    "module": "ngx_http_core_module",
    "link": "http/ngx_http_core_module.html#read_ahead",
    "name": "read_ahead"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>recursive_error_pages</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>recursive_error_pages off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Enables or disables doing several redirects using the <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#error_page\">error_page</a> directive. The number of such redirects is <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#internal\">limited</a>.</p>",
    "module": "ngx_http_core_module",
    "link": "http/ngx_http_core_module.html#recursive_error_pages",
    "name": "recursive_error_pages"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>request_pool_size</strong> <code><i>size</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>request_pool_size 4k;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code><br></td></tr></tbody></table>",
    "doc": "<p>Allows accurate tuning of per-request memory allocations. This directive has minimal impact on performance and should not generally be used.</p>",
    "module": "ngx_http_core_module",
    "link": "http/ngx_http_core_module.html#request_pool_size",
    "name": "request_pool_size"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>reset_timedout_connection</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>reset_timedout_connection off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Enables or disables resetting timed out connections and connections <a href=\"https://nginx.org/en/docs/http/ngx_http_rewrite_module.html#return\">closed</a> with the non-standard code 444 (1.15.2). The reset is performed as follows. Before closing a socket, the <code>SO_LINGER</code> option is set on it with a timeout value of 0. When the socket is closed, TCP RST is sent to the client, and all memory occupied by this socket is released. This helps avoid keeping an already closed socket with filled buffers in a FIN_WAIT1 state for a long time.</p><p>It should be noted that timed out keep-alive connections are closed normally.</p>",
    "module": "ngx_http_core_module",
    "link": "http/ngx_http_core_module.html#reset_timedout_connection",
    "name": "reset_timedout_connection"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>resolver</strong> <code><i>address</i></code> ... [<code>valid</code>=<code><i>time</i></code>] [<code>ipv4</code>=<code>on</code>|<code>off</code>] [<code>ipv6</code>=<code>on</code>|<code>off</code>] [<code>status_zone</code>=<code><i>zone</i></code>];</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Configures name servers used to resolve names of upstream servers into addresses, for example:</p><blockquote class=\"example\"><pre>resolver 127.0.0.1 [::1]:5353;\n</pre></blockquote><p>The address can be specified as a domain name or IP address, with an optional port (1.3.1, 1.2.2). If port is not specified, the port 53 is used. Name servers are queried in a round-robin fashion.</p><blockquote class=\"note\">Before version 1.1.7, only a single name server could be configured. Specifying name servers using IPv6 addresses is supported starting from versions 1.3.1 and 1.2.2.</blockquote>",
    "module": "ngx_http_core_module",
    "link": "http/ngx_http_core_module.html#resolver",
    "name": "resolver"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>resolver_timeout</strong> <code><i>time</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>resolver_timeout 30s;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets a timeout for name resolution, for example:</p><blockquote class=\"example\"><pre>resolver_timeout 5s;\n</pre></blockquote>",
    "module": "ngx_http_core_module",
    "link": "http/ngx_http_core_module.html#resolver_timeout",
    "name": "resolver_timeout"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>root</strong> <code><i>path</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>root html;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code>, <code>if in location</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets the root directory for requests. For example, with the following configuration</p><blockquote class=\"example\"><pre>location /i/ {\n    root /data/w3;\n}\n</pre></blockquote><p>The <code>/data/w3/i/top.gif</code> file will be sent in response to the “<code>/i/top.gif</code>” request.</p><p>The <code><i>path</i></code> value can contain variables, except <code>$document_root</code> and <code>$realpath_root</code>.</p><p>A path to the file is constructed by merely adding a URI to the value of the <code>root</code> directive. If a URI has to be modified, the <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#alias\">alias</a> directive should be used.</p>",
    "module": "ngx_http_core_module",
    "link": "http/ngx_http_core_module.html#root",
    "name": "root"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>satisfy</strong> <code>all</code> | <code>any</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>satisfy all;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Allows access if all (<code>all</code>) or at least one (<code>any</code>) of the <a href=\"https://nginx.org/en/docs/http/ngx_http_access_module.html\">ngx_http_access_module</a>, <a href=\"https://nginx.org/en/docs/http/ngx_http_auth_basic_module.html\">ngx_http_auth_basic_module</a>, <a href=\"https://nginx.org/en/docs/http/ngx_http_auth_request_module.html\">ngx_http_auth_request_module</a>, or <a href=\"https://nginx.org/en/docs/http/ngx_http_auth_jwt_module.html\">ngx_http_auth_jwt_module</a> modules allow access.</p><p>Example:</p><blockquote class=\"example\"><pre>location / {\n    satisfy any;\n\n    allow 192.168.1.0/32;\n    deny  all;\n\n    auth_basic           \"closed site\";\n    auth_basic_user_file conf/htpasswd;\n}\n</pre></blockquote>",
    "module": "ngx_http_core_module",
    "link": "http/ngx_http_core_module.html#satisfy",
    "name": "satisfy"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>send_lowat</strong> <code><i>size</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>send_lowat 0;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>If the directive is set to a non-zero value, nginx will try to minimize the number of send operations on client sockets by using either <code>NOTE_LOWAT</code> flag of the <a href=\"https://nginx.org/en/docs/events.html#kqueue\">kqueue</a> method or the <code>SO_SNDLOWAT</code> socket option. In both cases the specified <code><i>size</i></code> is used.</p><p>This directive is ignored on Linux, Solaris, and Windows.</p>",
    "module": "ngx_http_core_module",
    "link": "http/ngx_http_core_module.html#send_lowat",
    "name": "send_lowat"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>send_timeout</strong> <code><i>time</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>send_timeout 60s;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets a timeout for transmitting a response to the client. The timeout is set only between two successive write operations, not for the transmission of the whole response. If the client does not receive anything within this time, the connection is closed.</p>",
    "module": "ngx_http_core_module",
    "link": "http/ngx_http_core_module.html#send_timeout",
    "name": "send_timeout"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>sendfile</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>sendfile off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code>, <code>if in location</code><br></td></tr></tbody></table>",
    "doc": "<p>Enables or disables the use of <code>sendfile()</code>.</p><p>Starting from nginx&nbsp;0.8.12 and FreeBSD&nbsp;5.2.1, <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#aio\">aio</a> can be used to pre-load data for <code>sendfile()</code>:</p><blockquote class=\"example\"><pre>location /video/ {\n    sendfile       on;\n    tcp_nopush     on;\n    aio            on;\n}\n</pre></blockquote><p>In this configuration, <code>sendfile()</code> is called with the <code>SF_NODISKIO</code> flag which causes it not to block on disk I/O, but, instead, report back that the data are not in memory. nginx then initiates an asynchronous data load by reading one byte. On the first read, the FreeBSD kernel loads the first 128K bytes of a file into memory, although next reads will only load data in 16K chunks. This can be changed using the <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#read_ahead\">read_ahead</a> directive.</p><blockquote class=\"note\">Before version 1.7.11, pre-loading could be enabled with <code>aio sendfile;</code>.</blockquote>",
    "module": "ngx_http_core_module",
    "link": "http/ngx_http_core_module.html#sendfile",
    "name": "sendfile"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>sendfile_max_chunk</strong> <code><i>size</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>sendfile_max_chunk 2m;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Limits the amount of data that can be transferred in a single <code>sendfile()</code> call. Without the limit, one fast connection may seize the worker process entirely.</p><blockquote class=\"note\">Prior to version 1.21.4, by default there was no limit.</blockquote>",
    "module": "ngx_http_core_module",
    "link": "http/ngx_http_core_module.html#sendfile_max_chunk",
    "name": "sendfile_max_chunk"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>server</strong> { ... }</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets configuration for a virtual server. There is no clear separation between IP-based (based on the IP address) and name-based (based on the “Host” request header field) virtual servers. Instead, the <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#listen\">listen</a> directives describe all addresses and ports that should accept connections for the server, and the <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#server_name\">server_name</a> directive lists all server names. Example configurations are provided in the “<a href=\"https://nginx.org/en/docs/http/request_processing.html\">How nginx processes a request</a>” document.</p>",
    "module": "ngx_http_core_module",
    "link": "http/ngx_http_core_module.html#server",
    "name": "server"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>server_name</strong> <code><i>name</i></code> ...;</code><br></td></tr><tr><th>Default:</th><td><pre>server_name \"\";</pre></td></tr><tr><th>Context:</th><td><code>server</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets names of a virtual server, for example:</p><blockquote class=\"example\"><pre>server {\n    server_name example.com www.example.com;\n}\n</pre></blockquote><p>The first name becomes the primary server name.</p><p>Server names can include an asterisk (“<code>*</code>”) replacing the first or last part of a name:</p><blockquote class=\"example\"><pre>server {\n    server_name example.com *.example.com www.example.*;\n}\n</pre></blockquote><p>Such names are called wildcard names.</p><p>The first two of the names mentioned above can be combined in one:</p><blockquote class=\"example\"><pre>server {\n    server_name .example.com;\n}\n</pre></blockquote><p>It is also possible to use regular expressions in server names, preceding the name with a tilde (“<code>~</code>”):</p><blockquote class=\"example\"><pre>server {\n    server_name www.example.com ~^www\\d+\\.example\\.com$;\n}\n</pre></blockquote><p>Regular expressions can contain captures (0.7.40) that can later be used in other directives:</p><blockquote class=\"example\"><pre>server {\n    server_name ~^(www\\.)?(.+)$;\n\n    location / {\n        root /sites/$2;\n    }\n}\n\nserver {\n    server_name _;\n\n    location / {\n        root /sites/default;\n    }\n}\n</pre></blockquote><p>Named captures in regular expressions create variables (0.8.25) that can later be used in other directives:</p><blockquote class=\"example\"><pre>server {\n    server_name ~^(www\\.)?(?&lt;domain&gt;.+)$;\n\n    location / {\n        root /sites/$domain;\n    }\n}\n\nserver {\n    server_name _;\n\n    location / {\n        root /sites/default;\n    }\n}\n</pre></blockquote><p>If the directive’s parameter is set to “<code>$hostname</code>” (0.9.4), the machine’s hostname is inserted.</p><p>It is also possible to specify an empty server name (0.7.11):</p><blockquote class=\"example\"><pre>server {\n    server_name www.example.com \"\";\n}\n</pre></blockquote><p>It allows this server to process requests without the “Host” header field&nbsp;— instead of the default server&nbsp;— for the given address:port pair. This is the default setting.</p><blockquote class=\"note\">Before 0.8.48, the machine’s hostname was used by default.</blockquote><p>During searching for a virtual server by name, if the name matches more than one of the specified variants, (e.g. both a wildcard name and regular expression match), the first matching variant will be chosen, in the following order of priority:</p>",
    "module": "ngx_http_core_module",
    "link": "http/ngx_http_core_module.html#server_name",
    "name": "server_name"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>server_name_in_redirect</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>server_name_in_redirect off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Enables or disables the use of the primary server name, specified by the <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#server_name\">server_name</a> directive, in <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#absolute_redirect\">absolute</a> redirects issued by nginx. When the use of the primary server name is disabled, the name from the “Host” request header field is used. If this field is not present, the IP address of the server is used.</p><p>The use of a port in redirects is controlled by the <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#port_in_redirect\">port_in_redirect</a> directive.</p>",
    "module": "ngx_http_core_module",
    "link": "http/ngx_http_core_module.html#server_name_in_redirect",
    "name": "server_name_in_redirect"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>server_names_hash_bucket_size</strong> <code><i>size</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>server_names_hash_bucket_size 32|64|128;</pre></td></tr><tr><th>Context:</th><td><code>http</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets the bucket size for the server names hash tables. The default value depends on the size of the processor’s cache line. The details of setting up hash tables are provided in a separate <a href=\"https://nginx.org/en/docs/hash.html\">document</a>.</p>",
    "module": "ngx_http_core_module",
    "link": "http/ngx_http_core_module.html#server_names_hash_bucket_size",
    "name": "server_names_hash_bucket_size"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>server_names_hash_max_size</strong> <code><i>size</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>server_names_hash_max_size 512;</pre></td></tr><tr><th>Context:</th><td><code>http</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets the maximum <code><i>size</i></code> of the server names hash tables. The details of setting up hash tables are provided in a separate <a href=\"https://nginx.org/en/docs/hash.html\">document</a>.</p>",
    "module": "ngx_http_core_module",
    "link": "http/ngx_http_core_module.html#server_names_hash_max_size",
    "name": "server_names_hash_max_size"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>server_tokens</strong> <code>on</code> | <code>off</code> | <code>build</code> | <code><i>string</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>server_tokens on;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Enables or disables emitting nginx version on error pages and in the “Server” response header field.</p>",
    "module": "ngx_http_core_module",
    "link": "http/ngx_http_core_module.html#server_tokens",
    "name": "server_tokens"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>subrequest_output_buffer_size</strong> <code><i>size</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>subrequest_output_buffer_size 4k|8k;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.13.10.</p>",
    "doc": "<p>Sets the <code><i>size</i></code> of the buffer used for storing the response body of a subrequest. By default, the buffer size is equal to one memory page. This is either 4K or 8K, depending on a platform. It can be made smaller, however.</p><p>The directive is applicable only for subrequests with response bodies saved into memory. For example, such subrequests are created by <a href=\"https://nginx.org/en/docs/http/ngx_http_ssi_module.html#ssi_include_set\">SSI</a>.</p>",
    "module": "ngx_http_core_module",
    "link": "http/ngx_http_core_module.html#subrequest_output_buffer_size",
    "name": "subrequest_output_buffer_size"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>tcp_nodelay</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>tcp_nodelay on;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Enables or disables the use of the <code>TCP_NODELAY</code> option. The option is enabled when a connection is transitioned into the keep-alive state. Additionally, it is enabled on SSL connections, for unbuffered proxying, and for <a href=\"https://nginx.org/en/docs/http/websocket.html\">WebSocket</a> proxying.</p>",
    "module": "ngx_http_core_module",
    "link": "http/ngx_http_core_module.html#tcp_nodelay",
    "name": "tcp_nodelay"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>tcp_nopush</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>tcp_nopush off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Enables or disables the use of the <code>TCP_NOPUSH</code> socket option on FreeBSD or the <code>TCP_CORK</code> socket option on Linux. The options are enabled only when <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#sendfile\">sendfile</a> is used. Enabling the option allows</p>",
    "module": "ngx_http_core_module",
    "link": "http/ngx_http_core_module.html#tcp_nopush",
    "name": "tcp_nopush"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>try_files</strong> <code><i>file</i></code> ... <code><i>uri</i></code>;</code><br><code><strong>try_files</strong> <code><i>file</i></code> ... =<code><i>code</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Checks the existence of files in the specified order and uses the first found file for request processing; the processing is performed in the current context. The path to a file is constructed from the <code><i>file</i></code> parameter according to the <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#root\">root</a> and <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#alias\">alias</a> directives. It is possible to check directory’s existence by specifying a slash at the end of a name, e.g. “<code>$uri/</code>”. If none of the files were found, an internal redirect to the <code><i>uri</i></code> specified in the last parameter is made. For example:</p><blockquote class=\"example\"><pre>location /images/ {\n    try_files $uri /images/default.gif;\n}\n\nlocation = /images/default.gif {\n    expires 30s;\n}\n</pre></blockquote><p>The last parameter can also point to a named location, as shown in examples below. Starting from version 0.7.51, the last parameter can also be a <code><i>code</i></code>:</p><blockquote class=\"example\"><pre>location / {\n    try_files $uri $uri/index.html $uri.html =404;\n}\n</pre></blockquote><p>Example in proxying Mongrel:</p><blockquote class=\"example\"><pre>location / {\n    try_files /system/maintenance.html\n              $uri $uri/index.html $uri.html\n              @mongrel;\n}\n\nlocation @mongrel {\n    proxy_pass http://mongrel;\n}\n</pre></blockquote><p>Example for Drupal/FastCGI:</p><blockquote class=\"example\"><pre>location / {\n    try_files $uri $uri/ @drupal;\n}\n\nlocation ~ \\.php$ {\n    try_files $uri @drupal;\n\n    fastcgi_pass ...;\n\n    fastcgi_param SCRIPT_FILENAME /path/to$fastcgi_script_name;\n    fastcgi_param SCRIPT_NAME     $fastcgi_script_name;\n    fastcgi_param QUERY_STRING    $args;\n\n    ... other fastcgi_param's\n}\n\nlocation @drupal {\n    fastcgi_pass ...;\n\n    fastcgi_param SCRIPT_FILENAME /path/to/index.php;\n    fastcgi_param SCRIPT_NAME     /index.php;\n    fastcgi_param QUERY_STRING    q=$uri&amp;$args;\n\n    ... other fastcgi_param's\n}\n</pre></blockquote><p>In the following example,</p><blockquote class=\"example\"><pre>location / {\n    try_files $uri $uri/ @drupal;\n}\n</pre></blockquote><p>the <code>try_files</code> directive is equivalent to</p><blockquote class=\"example\"><pre>location / {\n    error_page 404 = @drupal;\n    log_not_found off;\n}\n</pre></blockquote><p>And here,</p><blockquote class=\"example\"><pre>location ~ \\.php$ {\n    try_files $uri @drupal;\n\n    fastcgi_pass ...;\n\n    fastcgi_param SCRIPT_FILENAME /path/to$fastcgi_script_name;\n\n    ...\n}\n</pre></blockquote><p><code>try_files</code> checks the existence of the PHP file before passing the request to the FastCGI server.</p><p>Example for Wordpress and Joomla:</p><blockquote class=\"example\"><pre>location / {\n    try_files $uri $uri/ @wordpress;\n}\n\nlocation ~ \\.php$ {\n    try_files $uri @wordpress;\n\n    fastcgi_pass ...;\n\n    fastcgi_param SCRIPT_FILENAME /path/to$fastcgi_script_name;\n    ... other fastcgi_param's\n}\n\nlocation @wordpress {\n    fastcgi_pass ...;\n\n    fastcgi_param SCRIPT_FILENAME /path/to/index.php;\n    ... other fastcgi_param's\n}\n</pre></blockquote>",
    "module": "ngx_http_core_module",
    "link": "http/ngx_http_core_module.html#try_files",
    "name": "try_files"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>types</strong> { ... }</code><br></td></tr><tr><th>Default:</th><td><pre>types {\n    text/html  html;\n    image/gif  gif;\n    image/jpeg jpg;\n}</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Maps file name extensions to MIME types of responses. Extensions are case-insensitive. Several extensions can be mapped to one type, for example:</p><blockquote class=\"example\"><pre>types {\n    application/octet-stream bin exe dll;\n    application/octet-stream deb;\n    application/octet-stream dmg;\n}\n</pre></blockquote><p>A sufficiently full mapping table is distributed with nginx in the <code>conf/mime.types</code> file.</p><p>To make a particular location emit the “<code>application/octet-stream</code>” MIME type for all requests, the following configuration can be used:</p><blockquote class=\"example\"><pre>location /download/ {\n    types        { }\n    default_type application/octet-stream;\n}\n</pre></blockquote>",
    "module": "ngx_http_core_module",
    "link": "http/ngx_http_core_module.html#types",
    "name": "types"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>types_hash_bucket_size</strong> <code><i>size</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>types_hash_bucket_size 64;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets the bucket size for the types hash tables. The details of setting up hash tables are provided in a separate <a href=\"https://nginx.org/en/docs/hash.html\">document</a>.</p><blockquote class=\"note\">Prior to version 1.5.13, the default value depended on the size of the processor’s cache line.</blockquote>",
    "module": "ngx_http_core_module",
    "link": "http/ngx_http_core_module.html#types_hash_bucket_size",
    "name": "types_hash_bucket_size"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>types_hash_max_size</strong> <code><i>size</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>types_hash_max_size 1024;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets the maximum <code><i>size</i></code> of the types hash tables. The details of setting up hash tables are provided in a separate <a href=\"https://nginx.org/en/docs/hash.html\">document</a>.</p>",
    "module": "ngx_http_core_module",
    "link": "http/ngx_http_core_module.html#types_hash_max_size",
    "name": "types_hash_max_size"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>underscores_in_headers</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>underscores_in_headers off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code><br></td></tr></tbody></table>",
    "doc": "<p>Enables or disables the use of underscores in client request header fields. When the use of underscores is disabled, request header fields whose names contain underscores are marked as invalid and become subject to the <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#ignore_invalid_headers\">ignore_invalid_headers</a> directive.</p><p>If the directive is specified on the <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#server\">server</a> level, the value from the default server can be used. Details are provided in the “<a href=\"https://nginx.org/en/docs/http/server_names.html#virtual_server_selection\">Virtual server selection</a>” section.</p>",
    "module": "ngx_http_core_module",
    "link": "http/ngx_http_core_module.html#underscores_in_headers",
    "name": "underscores_in_headers"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>variables_hash_bucket_size</strong> <code><i>size</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>variables_hash_bucket_size 64;</pre></td></tr><tr><th>Context:</th><td><code>http</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets the bucket size for the variables hash table. The details of setting up hash tables are provided in a separate <a href=\"https://nginx.org/en/docs/hash.html\">document</a>.</p>",
    "module": "ngx_http_core_module",
    "link": "http/ngx_http_core_module.html#variables_hash_bucket_size",
    "name": "variables_hash_bucket_size"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>variables_hash_max_size</strong> <code><i>size</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>variables_hash_max_size 1024;</pre></td></tr><tr><th>Context:</th><td><code>http</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets the maximum <code><i>size</i></code> of the variables hash table. The details of setting up hash tables are provided in a separate <a href=\"https://nginx.org/en/docs/hash.html\">document</a>.</p><blockquote class=\"note\">Prior to version 1.5.13, the default value was 512.</blockquote>",
    "module": "ngx_http_core_module",
    "link": "http/ngx_http_core_module.html#variables_hash_max_size",
    "name": "variables_hash_max_size"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>allow</strong> <code><i>address</i></code> | <code><i>CIDR</i></code> | <code>unix:</code> | <code>all</code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code>, <code>limit_except</code><br></td></tr></tbody></table>",
    "doc": "<p>Allows access for the specified network or address. If the special value <code>unix:</code> is specified (1.5.1), allows access for all UNIX-domain sockets.</p>",
    "module": "ngx_http_access_module",
    "link": "http/ngx_http_access_module.html#allow",
    "name": "allow"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>deny</strong> <code><i>address</i></code> | <code><i>CIDR</i></code> | <code>unix:</code> | <code>all</code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code>, <code>limit_except</code><br></td></tr></tbody></table>",
    "doc": "<p>Denies access for the specified network or address. If the special value <code>unix:</code> is specified (1.5.1), denies access for all UNIX-domain sockets.</p>",
    "module": "ngx_http_access_module",
    "link": "http/ngx_http_access_module.html#deny",
    "name": "deny"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>add_before_body</strong> <code><i>uri</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Adds the text returned as a result of processing a given subrequest before the response body. An empty string (<code>\"\"</code>) as a parameter cancels addition inherited from the previous configuration level.</p>",
    "module": "ngx_http_addition_module",
    "link": "http/ngx_http_addition_module.html#add_before_body",
    "name": "add_before_body"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>add_after_body</strong> <code><i>uri</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Adds the text returned as a result of processing a given subrequest after the response body. An empty string (<code>\"\"</code>) as a parameter cancels addition inherited from the previous configuration level.</p>",
    "module": "ngx_http_addition_module",
    "link": "http/ngx_http_addition_module.html#add_after_body",
    "name": "add_after_body"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>addition_types</strong> <code><i>mime-type</i></code> ...;</code><br></td></tr><tr><th>Default:</th><td><pre>addition_types text/html;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 0.7.9.</p>",
    "doc": "<p>Allows adding text in responses with the specified MIME types, in addition to “<code>text/html</code>”. The special value “<code>*</code>” matches any MIME type (0.8.29).</p>",
    "module": "ngx_http_addition_module",
    "link": "http/ngx_http_addition_module.html#addition_types",
    "name": "addition_types"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>api</strong> [<code>write</code>=<code>on</code>|<code>off</code>];</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Turns on the REST API interface in the surrounding location. Access to this location should be <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#satisfy\">limited</a>.</p><p>The <code>write</code> parameter determines whether the API is read-only or read-write. By default, the API is read-only.</p>",
    "module": "ngx_http_api_module",
    "link": "http/ngx_http_api_module.html#api",
    "name": "api"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>status_zone</strong> <code><i>zone</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>server</code>, <code>location</code>, <code>if in location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.13.12.</p>",
    "doc": "<p>Enables collection of virtual <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#server\">http</a> or <a href=\"https://nginx.org/en/docs/stream/ngx_stream_core_module.html#server\">stream</a> server status information in the specified <code><i>zone</i></code>. Several servers may share the same zone.</p>",
    "module": "ngx_http_api_module",
    "link": "http/ngx_http_api_module.html#status_zone",
    "name": "status_zone"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>auth_basic</strong> <code><i>string</i></code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>auth_basic off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code>, <code>limit_except</code><br></td></tr></tbody></table>",
    "doc": "<p>Enables validation of user name and password using the “HTTP Basic Authentication” protocol. The specified parameter is used as a <code><i>realm</i></code>. Parameter value can contain variables (1.3.10, 1.2.7). The special value <code>off</code> cancels the effect of the <code>auth_basic</code> directive inherited from the previous configuration level.</p>",
    "module": "ngx_http_auth_basic_module",
    "link": "http/ngx_http_auth_basic_module.html#auth_basic",
    "name": "auth_basic"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>auth_basic_user_file</strong> <code><i>file</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code>, <code>limit_except</code><br></td></tr></tbody></table>",
    "doc": "<p>Specifies a file that keeps user names and passwords, in the following format:</p><blockquote class=\"example\"><pre># comment\nname1:password1\nname2:password2:comment\nname3:password3\n</pre></blockquote><p>The <code><i>file</i></code> name can contain variables.</p><p>The following password types are supported:</p>",
    "module": "ngx_http_auth_basic_module",
    "link": "http/ngx_http_auth_basic_module.html#auth_basic_user_file",
    "name": "auth_basic_user_file"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>auth_jwt</strong> <code><i>string</i></code> [<code>token=</code><code><i>$variable</i></code>] | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>auth_jwt off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code>, <code>limit_except</code><br></td></tr></tbody></table>",
    "doc": "<p>Enables validation of JSON Web Token. The specified <code><i>string</i></code> is used as a <code>realm</code>. Parameter value can contain variables.</p><p>The optional <code>token</code> parameter specifies a variable that contains JSON Web Token. By default, JWT is passed in the “Authorization” header as a <a href=\"https://datatracker.ietf.org/doc/html/rfc6750\">Bearer Token</a>. JWT may be also passed as a cookie or a part of a query string:</p><blockquote class=\"example\"><pre>auth_jwt \"closed site\" token=$cookie_auth_token;\n</pre></blockquote><p>The special value <code>off</code> cancels the effect of the <code>auth_jwt</code> directive inherited from the previous configuration level.</p>",
    "module": "ngx_http_auth_jwt_module",
    "link": "http/ngx_http_auth_jwt_module.html#auth_jwt",
    "name": "auth_jwt"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>auth_jwt_claim_set</strong> <code><i>$variable</i></code> <code><i>name</i></code> ...;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code><br></td></tr></tbody></table><p>This directive appeared in version 1.11.10.</p>",
    "doc": "<p>Sets the <code><i>variable</i></code> to a JWT claim parameter identified by key names. Name matching starts from the top level of the JSON tree. For arrays, the variable keeps a list of array elements separated by commas.</p><blockquote class=\"example\"><pre>auth_jwt_claim_set $email info e-mail;\nauth_jwt_claim_set $job info \"job title\";\n</pre></blockquote><blockquote class=\"note\">Prior to version 1.13.7, only one key name could be specified, and the result was undefined for arrays.</blockquote><blockquote class=\"note\">Variable values for tokens encrypted with JWE are available only after decryption which occurs during the <a href=\"https://nginx.org/en/docs/dev/development_guide.html#http_phases\">Access</a> phase.</blockquote>",
    "module": "ngx_http_auth_jwt_module",
    "link": "http/ngx_http_auth_jwt_module.html#auth_jwt_claim_set",
    "name": "auth_jwt_claim_set"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>auth_jwt_header_set</strong> <code><i>$variable</i></code> <code><i>name</i></code> ...;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code><br></td></tr></tbody></table><p>This directive appeared in version 1.11.10.</p>",
    "doc": "<p>Sets the <code><i>variable</i></code> to a JOSE header parameter identified by key names. Name matching starts from the top level of the JSON tree. For arrays, the variable keeps a list of array elements separated by commas.</p><blockquote class=\"note\">Prior to version 1.13.7, only one key name could be specified, and the result was undefined for arrays.</blockquote>",
    "module": "ngx_http_auth_jwt_module",
    "link": "http/ngx_http_auth_jwt_module.html#auth_jwt_header_set",
    "name": "auth_jwt_header_set"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>auth_jwt_key_cache</strong> <code><i>time</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>auth_jwt_key_cache 0;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.21.4.</p>",
    "doc": "<p>Enables or disables caching of keys obtained from a <a href=\"https://nginx.org/en/docs/http/ngx_http_auth_jwt_module.html#auth_jwt_key_file\">file</a> or from a <a href=\"https://nginx.org/en/docs/http/ngx_http_auth_jwt_module.html#auth_jwt_key_request\">subrequest</a>, and sets caching time for them. Caching of keys obtained from variables is not supported. By default, caching of keys is disabled.</p>",
    "module": "ngx_http_auth_jwt_module",
    "link": "http/ngx_http_auth_jwt_module.html#auth_jwt_key_cache",
    "name": "auth_jwt_key_cache"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>auth_jwt_key_file</strong> <code><i>file</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code>, <code>limit_except</code><br></td></tr></tbody></table>",
    "doc": "<p>Specifies a <code><i>file</i></code> in <a href=\"https://datatracker.ietf.org/doc/html/rfc7517#section-5\">JSON Web Key Set</a> format for validating JWT signature. Parameter value can contain variables.</p><p>Several <code>auth_jwt_key_file</code> directives can be specified on the same level (1.21.1):</p><blockquote class=\"example\"><pre>auth_jwt_key_file conf/keys.json;\nauth_jwt_key_file conf/key.jwk;\n</pre></blockquote><p>If at least one of the specified keys cannot be loaded or processed, nginx will return the 500 (Internal Server Error) error.</p>",
    "module": "ngx_http_auth_jwt_module",
    "link": "http/ngx_http_auth_jwt_module.html#auth_jwt_key_file",
    "name": "auth_jwt_key_file"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>auth_jwt_key_request</strong> <code><i>uri</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code>, <code>limit_except</code><br></td></tr></tbody></table><p>This directive appeared in version 1.15.6.</p>",
    "doc": "<p>Allows retrieving a <a href=\"https://datatracker.ietf.org/doc/html/rfc7517#section-5\">JSON Web Key Set</a> file from a subrequest for validating JWT signature and sets the URI where the subrequest will be sent to. Parameter value can contain variables. To avoid validation overhead, it is recommended to cache the key file:</p><blockquote class=\"example\"><pre>proxy_cache_path /data/nginx/cache levels=1 keys_zone=foo:10m;\n\nserver {\n    ...\n\n    location / {\n        auth_jwt             \"closed site\";\n        auth_jwt_key_request /jwks_uri;\n    }\n\n    location = /jwks_uri {\n        internal;\n        proxy_cache foo;\n        proxy_pass  http://idp.example.com/keys;\n    }\n}\n</pre></blockquote><p>Several <code>auth_jwt_key_request</code> directives can be specified on the same level (1.21.1):</p><blockquote class=\"example\"><pre>auth_jwt_key_request /jwks_uri;\nauth_jwt_key_request /jwks2_uri;\n</pre></blockquote><p>If at least one of the specified keys cannot be loaded or processed, nginx will return the 500 (Internal Server Error) error.</p>",
    "module": "ngx_http_auth_jwt_module",
    "link": "http/ngx_http_auth_jwt_module.html#auth_jwt_key_request",
    "name": "auth_jwt_key_request"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>auth_jwt_leeway</strong> <code><i>time</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>auth_jwt_leeway 0s;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.13.10.</p>",
    "doc": "<p>Sets the maximum allowable leeway to compensate clock skew when verifying the <a href=\"https://datatracker.ietf.org/doc/html/rfc7519#section-4.1.4\">exp</a> and <a href=\"https://datatracker.ietf.org/doc/html/rfc7519#section-4.1.5\">nbf</a> JWT claims.</p>",
    "module": "ngx_http_auth_jwt_module",
    "link": "http/ngx_http_auth_jwt_module.html#auth_jwt_leeway",
    "name": "auth_jwt_leeway"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>auth_jwt_type</strong> <code><i>signed</i></code> | <code><i>encrypted</i></code> | <code><i>nested</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>auth_jwt_type signed;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code>, <code>limit_except</code><br></td></tr></tbody></table><p>This directive appeared in version 1.19.7.</p>",
    "doc": "<p>Specifies which type of JSON Web Token to expect: JWS (<code>signed</code>), JWE (<code>encrypted</code>), or signed and then encrypted Nested JWT (<code>nested</code>) (1.21.0).</p>",
    "module": "ngx_http_auth_jwt_module",
    "link": "http/ngx_http_auth_jwt_module.html#auth_jwt_type",
    "name": "auth_jwt_type"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>auth_jwt_require</strong> <code><i>$value</i></code> ... [<code>error</code>=<code>401</code> | <code>403</code>] ;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code>, <code>limit_except</code><br></td></tr></tbody></table><p>This directive appeared in version 1.21.2.</p>",
    "doc": "<p>Specifies additional checks for JWT validation. The value can contain text, variables, and their combination, and must start with a variable (1.21.7). The authentication will succeed only if all the values are not empty and are not equal to “0”.</p><blockquote class=\"example\"><pre>map $jwt_claim_iss $valid_jwt_iss {\n    \"good\" 1;\n}\n...\n\nauth_jwt_require $valid_jwt_iss;\n</pre></blockquote><p>If any of the checks fails, the <code>401</code> error code is returned. The optional <code>error</code> parameter (1.21.7) allows redefining the error code to <code>403</code>.</p>",
    "module": "ngx_http_auth_jwt_module",
    "link": "http/ngx_http_auth_jwt_module.html#auth_jwt_require",
    "name": "auth_jwt_require"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>auth_request</strong> <code><i>uri</i></code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>auth_request off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Enables authorization based on the result of a subrequest and sets the URI to which the subrequest will be sent.</p>",
    "module": "ngx_http_auth_request_module",
    "link": "http/ngx_http_auth_request_module.html#auth_request",
    "name": "auth_request"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>auth_request_set</strong> <code><i>$variable</i></code> <code><i>value</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets the request <code><i>variable</i></code> to the given <code><i>value</i></code> after the authorization request completes. The value may contain variables from the authorization request, such as <code>$upstream_http_*</code>.</p>",
    "module": "ngx_http_auth_request_module",
    "link": "http/ngx_http_auth_request_module.html#auth_request_set",
    "name": "auth_request_set"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>autoindex</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>autoindex off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Enables or disables the directory listing output.</p>",
    "module": "ngx_http_autoindex_module",
    "link": "http/ngx_http_autoindex_module.html#autoindex",
    "name": "autoindex"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>autoindex_exact_size</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>autoindex_exact_size on;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>For the HTML <a href=\"https://nginx.org/en/docs/http/ngx_http_autoindex_module.html#autoindex_format\">format</a>, specifies whether exact file sizes should be output in the directory listing, or rather rounded to kilobytes, megabytes, and gigabytes.</p>",
    "module": "ngx_http_autoindex_module",
    "link": "http/ngx_http_autoindex_module.html#autoindex_exact_size",
    "name": "autoindex_exact_size"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>autoindex_format</strong> <code>html</code> | <code>xml</code> | <code>json</code> | <code>jsonp</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>autoindex_format html;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.7.9.</p>",
    "doc": "<p>Sets the format of a directory listing.</p><p>When the JSONP format is used, the name of a callback function is set with the <code>callback</code> request argument. If the argument is missing or has an empty value, then the JSON format is used.</p><p>The XML output can be transformed using the <a href=\"https://nginx.org/en/docs/http/ngx_http_xslt_module.html\">ngx_http_xslt_module</a> module.</p>",
    "module": "ngx_http_autoindex_module",
    "link": "http/ngx_http_autoindex_module.html#autoindex_format",
    "name": "autoindex_format"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>autoindex_localtime</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>autoindex_localtime off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>For the HTML <a href=\"https://nginx.org/en/docs/http/ngx_http_autoindex_module.html#autoindex_format\">format</a>, specifies whether times in the directory listing should be output in the local time zone or UTC.</p>",
    "module": "ngx_http_autoindex_module",
    "link": "http/ngx_http_autoindex_module.html#autoindex_localtime",
    "name": "autoindex_localtime"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>ancient_browser</strong> <code><i>string</i></code> ...;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>If any of the specified substrings is found in the “User-Agent” request header field, the browser will be considered ancient. The special string “<code>netscape4</code>” corresponds to the regular expression “<code>^Mozilla/[1-4]</code>”.</p>",
    "module": "ngx_http_browser_module",
    "link": "http/ngx_http_browser_module.html#ancient_browser",
    "name": "ancient_browser"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>ancient_browser_value</strong> <code><i>string</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>ancient_browser_value 1;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets a value for the <code>$ancient_browser</code> variables.</p>",
    "module": "ngx_http_browser_module",
    "link": "http/ngx_http_browser_module.html#ancient_browser_value",
    "name": "ancient_browser_value"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>modern_browser</strong> <code><i>browser</i></code> <code><i>version</i></code>;</code><br><code><strong>modern_browser</strong> <code>unlisted</code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Specifies a version starting from which a browser is considered modern. A browser can be any one of the following: <code>msie</code>, <code>gecko</code> (browsers based on Mozilla), <code>opera</code>, <code>safari</code>, or <code>konqueror</code>.</p><p>Versions can be specified in the following formats: X, X.X, X.X.X, or X.X.X.X. The maximum values for each of the format are 4000, 4000.99, 4000.99.99, and 4000.99.99.99, respectively.</p><p>The special value <code>unlisted</code> specifies to consider a browser as modern if it was not listed by the <code>modern_browser</code> and <a href=\"https://nginx.org/en/docs/http/ngx_http_browser_module.html#ancient_browser\">ancient_browser</a> directives. Otherwise such a browser is considered ancient. If a request does not provide the “User-Agent” field in the header, the browser is treated as not being listed.</p>",
    "module": "ngx_http_browser_module",
    "link": "http/ngx_http_browser_module.html#modern_browser",
    "name": "modern_browser"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>modern_browser_value</strong> <code><i>string</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>modern_browser_value 1;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets a value for the <code>$modern_browser</code> variables.</p>",
    "module": "ngx_http_browser_module",
    "link": "http/ngx_http_browser_module.html#modern_browser_value",
    "name": "modern_browser_value"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>charset</strong> <code><i>charset</i></code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>charset off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code>, <code>if in location</code><br></td></tr></tbody></table>",
    "doc": "<p>Adds the specified charset to the “Content-Type” response header field. If this charset is different from the charset specified in the <a href=\"https://nginx.org/en/docs/http/ngx_http_charset_module.html#source_charset\">source_charset</a> directive, a conversion is performed.</p><p>The parameter <code>off</code> cancels the addition of charset to the “Content-Type” response header field.</p><p>A charset can be defined with a variable:</p><blockquote class=\"example\"><pre>charset $charset;\n</pre></blockquote><p>In such a case, all possible values of a variable need to be present in the configuration at least once in the form of the <a href=\"https://nginx.org/en/docs/http/ngx_http_charset_module.html#charset_map\">charset_map</a>, <a href=\"https://nginx.org/en/docs/http/ngx_http_charset_module.html#charset\">charset</a>, or <a href=\"https://nginx.org/en/docs/http/ngx_http_charset_module.html#source_charset\">source_charset</a> directives. For <code>utf-8</code>, <code>windows-1251</code>, and <code>koi8-r</code> charsets, it is sufficient to include the files <code>conf/koi-win</code>, <code>conf/koi-utf</code>, and <code>conf/win-utf</code> into configuration. For other charsets, simply making a fictitious conversion table works, for example:</p><blockquote class=\"example\"><pre>charset_map iso-8859-5 _ { }\n</pre></blockquote><p>In addition, a charset can be set in the “X-Accel-Charset” response header field. This capability can be disabled using the <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_ignore_headers\">proxy_ignore_headers</a>, <a href=\"https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_ignore_headers\">fastcgi_ignore_headers</a>, <a href=\"https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_ignore_headers\">uwsgi_ignore_headers</a>, <a href=\"https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_ignore_headers\">scgi_ignore_headers</a>, and <a href=\"https://nginx.org/en/docs/http/ngx_http_grpc_module.html#grpc_ignore_headers\">grpc_ignore_headers</a> directives.</p>",
    "module": "ngx_http_charset_module",
    "link": "http/ngx_http_charset_module.html#charset",
    "name": "charset"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>charset_map</strong> <code><i>charset1</i></code> <code><i>charset2</i></code> { ... }</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code><br></td></tr></tbody></table>",
    "doc": "<p>Describes the conversion table from one charset to another. A reverse conversion table is built using the same data. Character codes are given in hexadecimal. Missing characters in the range 80-FF are replaced with “<code>?</code>”. When converting from UTF-8, characters missing in a one-byte charset are replaced with “<code>&amp;#XXXX;</code>”.</p><p>Example:</p><blockquote class=\"example\"><pre>charset_map koi8-r windows-1251 {\n    C0 FE ; # small yu\n    C1 E0 ; # small a\n    C2 E1 ; # small b\n    C3 F6 ; # small ts\n    ...\n}\n</pre></blockquote><p>When describing a conversion table to UTF-8, codes for the UTF-8 charset should be given in the second column, for example:</p><blockquote class=\"example\"><pre>charset_map koi8-r utf-8 {\n    C0 D18E ; # small yu\n    C1 D0B0 ; # small a\n    C2 D0B1 ; # small b\n    C3 D186 ; # small ts\n    ...\n}\n</pre></blockquote><p>Full conversion tables from <code>koi8-r</code> to <code>windows-1251</code>, and from <code>koi8-r</code> and <code>windows-1251</code> to <code>utf-8</code> are provided in the distribution files <code>conf/koi-win</code>, <code>conf/koi-utf</code>, and <code>conf/win-utf</code>.</p>",
    "module": "ngx_http_charset_module",
    "link": "http/ngx_http_charset_module.html#charset_map",
    "name": "charset_map"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>charset_types</strong> <code><i>mime-type</i></code> ...;</code><br></td></tr><tr><th>Default:</th><td><pre>charset_types text/html text/xml text/plain text/vnd.wap.wml\napplication/javascript application/rss+xml;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 0.7.9.</p>",
    "doc": "<p>Enables module processing in responses with the specified MIME types in addition to “<code>text/html</code>”. The special value “<code>*</code>” matches any MIME type (0.8.29).</p><blockquote class=\"note\">Until version 1.5.4, “<code>application/x-javascript</code>” was used as the default MIME type instead of “<code>application/javascript</code>”.</blockquote>",
    "module": "ngx_http_charset_module",
    "link": "http/ngx_http_charset_module.html#charset_types",
    "name": "charset_types"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>override_charset</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>override_charset off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code>, <code>if in location</code><br></td></tr></tbody></table>",
    "doc": "<p>Determines whether a conversion should be performed for answers received from a proxied or a FastCGI/uwsgi/SCGI/gRPC server when the answers already carry a charset in the “Content-Type” response header field. If conversion is enabled, a charset specified in the received response is used as a source charset.</p><blockquote class=\"note\">It should be noted that if a response is received in a subrequest then the conversion from the response charset to the main request charset is always performed, regardless of the <code>override_charset</code> directive setting.</blockquote>",
    "module": "ngx_http_charset_module",
    "link": "http/ngx_http_charset_module.html#override_charset",
    "name": "override_charset"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>source_charset</strong> <code><i>charset</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code>, <code>if in location</code><br></td></tr></tbody></table>",
    "doc": "<p>Defines the source charset of a response. If this charset is different from the charset specified in the <a href=\"https://nginx.org/en/docs/http/ngx_http_charset_module.html#charset\">charset</a> directive, a conversion is performed.</p>",
    "module": "ngx_http_charset_module",
    "link": "http/ngx_http_charset_module.html#source_charset",
    "name": "source_charset"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>create_full_put_path</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>create_full_put_path off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>The WebDAV specification only allows creating files in already existing directories. This directive allows creating all needed intermediate directories.</p>",
    "module": "ngx_http_dav_module",
    "link": "http/ngx_http_dav_module.html#create_full_put_path",
    "name": "create_full_put_path"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>dav_access</strong> <code><i>users</i></code>:<code><i>permissions</i></code> ...;</code><br></td></tr><tr><th>Default:</th><td><pre>dav_access user:rw;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets access permissions for newly created files and directories, e.g.:</p><blockquote class=\"example\"><pre>dav_access user:rw group:rw all:r;\n</pre></blockquote><p>If any <code>group</code> or <code>all</code> access permissions are specified then <code>user</code> permissions may be omitted:</p><blockquote class=\"example\"><pre>dav_access group:rw all:r;\n</pre></blockquote>",
    "module": "ngx_http_dav_module",
    "link": "http/ngx_http_dav_module.html#dav_access",
    "name": "dav_access"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>dav_methods</strong> <code>off</code> | <code><i>method</i></code> ...;</code><br></td></tr><tr><th>Default:</th><td><pre>dav_methods off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Allows the specified HTTP and WebDAV methods. The parameter <code>off</code> denies all methods processed by this module. The following methods are supported: <code>PUT</code>, <code>DELETE</code>, <code>MKCOL</code>, <code>COPY</code>, and <code>MOVE</code>.</p><p>A file uploaded with the PUT method is first written to a temporary file, and then the file is renamed. Starting from version 0.8.9, temporary files and the persistent store can be put on different file systems. However, be aware that in this case a file is copied across two file systems instead of the cheap renaming operation. It is thus recommended that for any given location both saved files and a directory holding temporary files, set by the <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#client_body_temp_path\">client_body_temp_path</a> directive, are put on the same file system.</p><p>When creating a file with the PUT method, it is possible to specify the modification date by passing it in the “Date” header field.</p>",
    "module": "ngx_http_dav_module",
    "link": "http/ngx_http_dav_module.html#dav_methods",
    "name": "dav_methods"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>min_delete_depth</strong> <code><i>number</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>min_delete_depth 0;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Allows the DELETE method to remove files provided that the number of elements in a request path is not less than the specified number. For example, the directive</p><blockquote class=\"example\"><pre>min_delete_depth 4;\n</pre></blockquote><p>allows removing files on requests</p><blockquote class=\"example\"><pre>/users/00/00/name\n/users/00/00/name/pic.jpg\n/users/00/00/page.html\n</pre></blockquote><p>and denies the removal of</p><blockquote class=\"example\"><pre>/users/00/00\n</pre></blockquote>",
    "module": "ngx_http_dav_module",
    "link": "http/ngx_http_dav_module.html#min_delete_depth",
    "name": "min_delete_depth"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>empty_gif</strong>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Turns on module processing in a surrounding location.</p>",
    "module": "ngx_http_empty_gif_module",
    "link": "http/ngx_http_empty_gif_module.html#empty_gif",
    "name": "empty_gif"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>f4f</strong>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Turns on module processing in the surrounding location.</p>",
    "module": "ngx_http_f4f_module",
    "link": "http/ngx_http_f4f_module.html#f4f",
    "name": "f4f"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>f4f_buffer_size</strong> <code><i>size</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>f4f_buffer_size 512k;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets the <code><i>size</i></code> of the buffer used for reading the <code>.f4x</code> index file.</p>",
    "module": "ngx_http_f4f_module",
    "link": "http/ngx_http_f4f_module.html#f4f_buffer_size",
    "name": "f4f_buffer_size"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>fastcgi_bind</strong> <code><i>address</i></code> [<code>transparent</code>] | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 0.8.22.</p>",
    "doc": "<p>Makes outgoing connections to a FastCGI server originate from the specified local IP address with an optional port (1.11.2). Parameter value can contain variables (1.3.12). The special value <code>off</code> (1.3.12) cancels the effect of the <code>fastcgi_bind</code> directive inherited from the previous configuration level, which allows the system to auto-assign the local IP address and port.</p>",
    "module": "ngx_http_fastcgi_module",
    "link": "http/ngx_http_fastcgi_module.html#fastcgi_bind",
    "name": "fastcgi_bind"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>fastcgi_buffer_size</strong> <code><i>size</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>fastcgi_buffer_size 4k|8k;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets the <code><i>size</i></code> of the buffer used for reading the first part of the response received from the FastCGI server. This part usually contains a small response header. By default, the buffer size is equal to one memory page. This is either 4K or 8K, depending on a platform. It can be made smaller, however.</p>",
    "module": "ngx_http_fastcgi_module",
    "link": "http/ngx_http_fastcgi_module.html#fastcgi_buffer_size",
    "name": "fastcgi_buffer_size"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>fastcgi_buffering</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>fastcgi_buffering on;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.5.6.</p>",
    "doc": "<p>Enables or disables buffering of responses from the FastCGI server.</p><p>When buffering is enabled, nginx receives a response from the FastCGI server as soon as possible, saving it into the buffers set by the <a href=\"https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_buffer_size\">fastcgi_buffer_size</a> and <a href=\"https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_buffers\">fastcgi_buffers</a> directives. If the whole response does not fit into memory, a part of it can be saved to a <a href=\"https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_temp_path\">temporary file</a> on the disk. Writing to temporary files is controlled by the <a href=\"https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_max_temp_file_size\">fastcgi_max_temp_file_size</a> and <a href=\"https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_temp_file_write_size\">fastcgi_temp_file_write_size</a> directives.</p><p>When buffering is disabled, the response is passed to a client synchronously, immediately as it is received. nginx will not try to read the whole response from the FastCGI server. The maximum size of the data that nginx can receive from the server at a time is set by the <a href=\"https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_buffer_size\">fastcgi_buffer_size</a> directive.</p><p>Buffering can also be enabled or disabled by passing “<code>yes</code>” or “<code>no</code>” in the “X-Accel-Buffering” response header field. This capability can be disabled using the <a href=\"https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_ignore_headers\">fastcgi_ignore_headers</a> directive.</p>",
    "module": "ngx_http_fastcgi_module",
    "link": "http/ngx_http_fastcgi_module.html#fastcgi_buffering",
    "name": "fastcgi_buffering"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>fastcgi_buffers</strong> <code><i>number</i></code> <code><i>size</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>fastcgi_buffers 8 4k|8k;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets the <code><i>number</i></code> and <code><i>size</i></code> of the buffers used for reading a response from the FastCGI server, for a single connection. By default, the buffer size is equal to one memory page. This is either 4K or 8K, depending on a platform.</p>",
    "module": "ngx_http_fastcgi_module",
    "link": "http/ngx_http_fastcgi_module.html#fastcgi_buffers",
    "name": "fastcgi_buffers"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>fastcgi_busy_buffers_size</strong> <code><i>size</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>fastcgi_busy_buffers_size 8k|16k;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>When <a href=\"https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_buffering\">buffering</a> of responses from the FastCGI server is enabled, limits the total <code><i>size</i></code> of buffers that can be busy sending a response to the client while the response is not yet fully read. In the meantime, the rest of the buffers can be used for reading the response and, if needed, buffering part of the response to a temporary file. By default, <code><i>size</i></code> is limited by the size of two buffers set by the <a href=\"https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_buffer_size\">fastcgi_buffer_size</a> and <a href=\"https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_buffers\">fastcgi_buffers</a> directives.</p>",
    "module": "ngx_http_fastcgi_module",
    "link": "http/ngx_http_fastcgi_module.html#fastcgi_busy_buffers_size",
    "name": "fastcgi_busy_buffers_size"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>fastcgi_cache</strong> <code><i>zone</i></code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>fastcgi_cache off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Defines a shared memory zone used for caching. The same zone can be used in several places. Parameter value can contain variables (1.7.9). The <code>off</code> parameter disables caching inherited from the previous configuration level.</p>",
    "module": "ngx_http_fastcgi_module",
    "link": "http/ngx_http_fastcgi_module.html#fastcgi_cache",
    "name": "fastcgi_cache"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>fastcgi_cache_background_update</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>fastcgi_cache_background_update off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.11.10.</p>",
    "doc": "<p>Allows starting a background subrequest to update an expired cache item, while a stale cached response is returned to the client. Note that it is necessary to <a href=\"https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_cache_use_stale_updating\">allow</a> the usage of a stale cached response when it is being updated.</p>",
    "module": "ngx_http_fastcgi_module",
    "link": "http/ngx_http_fastcgi_module.html#fastcgi_cache_background_update",
    "name": "fastcgi_cache_background_update"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>fastcgi_cache_bypass</strong> <code><i>string</i></code> ...;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Defines conditions under which the response will not be taken from a cache. If at least one value of the string parameters is not empty and is not equal to “0” then the response will not be taken from the cache:</p><blockquote class=\"example\"><pre>fastcgi_cache_bypass $cookie_nocache $arg_nocache$arg_comment;\nfastcgi_cache_bypass $http_pragma    $http_authorization;\n</pre></blockquote><p>Can be used along with the <a href=\"https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_no_cache\">fastcgi_no_cache</a> directive.</p>",
    "module": "ngx_http_fastcgi_module",
    "link": "http/ngx_http_fastcgi_module.html#fastcgi_cache_bypass",
    "name": "fastcgi_cache_bypass"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>fastcgi_cache_key</strong> <code><i>string</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Defines a key for caching, for example</p><blockquote class=\"example\"><pre>fastcgi_cache_key localhost:9000$request_uri;\n</pre></blockquote>",
    "module": "ngx_http_fastcgi_module",
    "link": "http/ngx_http_fastcgi_module.html#fastcgi_cache_key",
    "name": "fastcgi_cache_key"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>fastcgi_cache_lock</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>fastcgi_cache_lock off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.1.12.</p>",
    "doc": "<p>When enabled, only one request at a time will be allowed to populate a new cache element identified according to the <a href=\"https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_cache_key\">fastcgi_cache_key</a> directive by passing a request to a FastCGI server. Other requests of the same cache element will either wait for a response to appear in the cache or the cache lock for this element to be released, up to the time set by the <a href=\"https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_cache_lock_timeout\">fastcgi_cache_lock_timeout</a> directive.</p>",
    "module": "ngx_http_fastcgi_module",
    "link": "http/ngx_http_fastcgi_module.html#fastcgi_cache_lock",
    "name": "fastcgi_cache_lock"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>fastcgi_cache_lock_age</strong> <code><i>time</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>fastcgi_cache_lock_age 5s;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.7.8.</p>",
    "doc": "<p>If the last request passed to the FastCGI server for populating a new cache element has not completed for the specified <code><i>time</i></code>, one more request may be passed to the FastCGI server.</p>",
    "module": "ngx_http_fastcgi_module",
    "link": "http/ngx_http_fastcgi_module.html#fastcgi_cache_lock_age",
    "name": "fastcgi_cache_lock_age"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>fastcgi_cache_lock_timeout</strong> <code><i>time</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>fastcgi_cache_lock_timeout 5s;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.1.12.</p>",
    "doc": "<p>Sets a timeout for <a href=\"https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_cache_lock\">fastcgi_cache_lock</a>. When the <code><i>time</i></code> expires, the request will be passed to the FastCGI server, however, the response will not be cached.</p><blockquote class=\"note\">Before 1.7.8, the response could be cached.</blockquote>",
    "module": "ngx_http_fastcgi_module",
    "link": "http/ngx_http_fastcgi_module.html#fastcgi_cache_lock_timeout",
    "name": "fastcgi_cache_lock_timeout"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>fastcgi_cache_max_range_offset</strong> <code><i>number</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.11.6.</p>",
    "doc": "<p>Sets an offset in bytes for byte-range requests. If the range is beyond the offset, the range request will be passed to the FastCGI server and the response will not be cached.</p>",
    "module": "ngx_http_fastcgi_module",
    "link": "http/ngx_http_fastcgi_module.html#fastcgi_cache_max_range_offset",
    "name": "fastcgi_cache_max_range_offset"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>fastcgi_cache_methods</strong> <code>GET</code> | <code>HEAD</code> | <code>POST</code> ...;</code><br></td></tr><tr><th>Default:</th><td><pre>fastcgi_cache_methods GET HEAD;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 0.7.59.</p>",
    "doc": "<p>If the client request method is listed in this directive then the response will be cached. “<code>GET</code>” and “<code>HEAD</code>” methods are always added to the list, though it is recommended to specify them explicitly. See also the <a href=\"https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_no_cache\">fastcgi_no_cache</a> directive.</p>",
    "module": "ngx_http_fastcgi_module",
    "link": "http/ngx_http_fastcgi_module.html#fastcgi_cache_methods",
    "name": "fastcgi_cache_methods"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>fastcgi_cache_min_uses</strong> <code><i>number</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>fastcgi_cache_min_uses 1;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets the <code><i>number</i></code> of requests after which the response will be cached.</p>",
    "module": "ngx_http_fastcgi_module",
    "link": "http/ngx_http_fastcgi_module.html#fastcgi_cache_min_uses",
    "name": "fastcgi_cache_min_uses"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>fastcgi_cache_path</strong> <code><i>path</i></code> [<code>levels</code>=<code><i>levels</i></code>] [<code>use_temp_path</code>=<code>on</code>|<code>off</code>] <code>keys_zone</code>=<code><i>name</i></code>:<code><i>size</i></code> [<code>inactive</code>=<code><i>time</i></code>] [<code>max_size</code>=<code><i>size</i></code>] [<code>min_free</code>=<code><i>size</i></code>] [<code>manager_files</code>=<code><i>number</i></code>] [<code>manager_sleep</code>=<code><i>time</i></code>] [<code>manager_threshold</code>=<code><i>time</i></code>] [<code>loader_files</code>=<code><i>number</i></code>] [<code>loader_sleep</code>=<code><i>time</i></code>] [<code>loader_threshold</code>=<code><i>time</i></code>] [<code>purger</code>=<code>on</code>|<code>off</code>] [<code>purger_files</code>=<code><i>number</i></code>] [<code>purger_sleep</code>=<code><i>time</i></code>] [<code>purger_threshold</code>=<code><i>time</i></code>];</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets the path and other parameters of a cache. Cache data are stored in files. Both the key and file name in a cache are a result of applying the MD5 function to the proxied URL. The <code>levels</code> parameter defines hierarchy levels of a cache: from 1 to 3, each level accepts values 1 or 2. For example, in the following configuration</p><blockquote class=\"example\"><pre>fastcgi_cache_path /data/nginx/cache levels=1:2 keys_zone=one:10m;\n</pre></blockquote><p>file names in a cache will look like this:</p><blockquote class=\"example\"><pre>/data/nginx/cache/<strong>c</strong>/<strong>29</strong>/b7f54b2df7773722d382f4809d650<strong>29c</strong>\n</pre></blockquote><p>A cached response is first written to a temporary file, and then the file is renamed. Starting from version 0.8.9, temporary files and the cache can be put on different file systems. However, be aware that in this case a file is copied across two file systems instead of the cheap renaming operation. It is thus recommended that for any given location both cache and a directory holding temporary files are put on the same file system. A directory for temporary files is set based on the <code>use_temp_path</code> parameter (1.7.10). If this parameter is omitted or set to the value <code>on</code>, the directory set by the <a href=\"https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_temp_path\">fastcgi_temp_path</a> directive for the given location will be used. If the value is set to <code>off</code>, temporary files will be put directly in the cache directory.</p><p>In addition, all active keys and information about data are stored in a shared memory zone, whose <code><i>name</i></code> and <code><i>size</i></code> are configured by the <code>keys_zone</code> parameter. One megabyte zone can store about 8 thousand keys.</p><blockquote class=\"note\">As part of <a href=\"http://nginx.com/products/\">commercial subscription</a>, the shared memory zone also stores extended cache <a href=\"https://nginx.org/en/docs/http/ngx_http_api_module.html#http_caches_\">information</a>, thus, it is required to specify a larger zone size for the same number of keys. For example, one megabyte zone can store about 4 thousand keys.</blockquote><p>Cached data that are not accessed during the time specified by the <code>inactive</code> parameter get removed from the cache regardless of their freshness. By default, <code>inactive</code> is set to 10 minutes.</p>",
    "module": "ngx_http_fastcgi_module",
    "link": "http/ngx_http_fastcgi_module.html#fastcgi_cache_path",
    "name": "fastcgi_cache_path"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>fastcgi_cache_purge</strong> string ...;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.5.7.</p>",
    "doc": "<p>Defines conditions under which the request will be considered a cache purge request. If at least one value of the string parameters is not empty and is not equal to “0” then the cache entry with a corresponding <a href=\"https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_cache_key\">cache key</a> is removed. The result of successful operation is indicated by returning the 204 (No Content) response.</p><p>If the <a href=\"https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_cache_key\">cache key</a> of a purge request ends with an asterisk (“<code>*</code>”), all cache entries matching the wildcard key will be removed from the cache. However, these entries will remain on the disk until they are deleted for either <a href=\"https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_cache_path\">inactivity</a>, or processed by the <a href=\"https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#purger\">cache purger</a> (1.7.12), or a client attempts to access them.</p><p>Example configuration:</p><blockquote class=\"example\"><pre>fastcgi_cache_path /data/nginx/cache keys_zone=cache_zone:10m;\n\nmap $request_method $purge_method {\n    PURGE   1;\n    default 0;\n}\n\nserver {\n    ...\n    location / {\n        fastcgi_pass        backend;\n        fastcgi_cache       cache_zone;\n        fastcgi_cache_key   $uri;\n        fastcgi_cache_purge $purge_method;\n    }\n}\n</pre></blockquote><blockquote class=\"note\">This functionality is available as part of our <a href=\"http://nginx.com/products/\">commercial subscription</a>.</blockquote>",
    "module": "ngx_http_fastcgi_module",
    "link": "http/ngx_http_fastcgi_module.html#fastcgi_cache_purge",
    "name": "fastcgi_cache_purge"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>fastcgi_cache_revalidate</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>fastcgi_cache_revalidate off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.5.7.</p>",
    "doc": "<p>Enables revalidation of expired cache items using conditional requests with the “If-Modified-Since” and “If-None-Match” header fields.</p>",
    "module": "ngx_http_fastcgi_module",
    "link": "http/ngx_http_fastcgi_module.html#fastcgi_cache_revalidate",
    "name": "fastcgi_cache_revalidate"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>fastcgi_cache_use_stale</strong> <code>error</code> | <code>timeout</code> | <code>invalid_header</code> | <code>updating</code> | <code>http_500</code> | <code>http_503</code> | <code>http_403</code> | <code>http_404</code> | <code>http_429</code> | <code>off</code> ...;</code><br></td></tr><tr><th>Default:</th><td><pre>fastcgi_cache_use_stale off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Determines in which cases a stale cached response can be used when an error occurs during communication with the FastCGI server. The directive’s parameters match the parameters of the <a href=\"https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_next_upstream\">fastcgi_next_upstream</a> directive.</p><p>The <code>error</code> parameter also permits using a stale cached response if a FastCGI server to process a request cannot be selected.</p>",
    "module": "ngx_http_fastcgi_module",
    "link": "http/ngx_http_fastcgi_module.html#fastcgi_cache_use_stale",
    "name": "fastcgi_cache_use_stale"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>fastcgi_cache_valid</strong> [<code><i>code</i></code> ...] <code><i>time</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets caching time for different response codes. For example, the following directives</p><blockquote class=\"example\"><pre>fastcgi_cache_valid 200 302 10m;\nfastcgi_cache_valid 404      1m;\n</pre></blockquote><p>set 10 minutes of caching for responses with codes 200 and 302 and 1 minute for responses with code 404.</p><p>If only caching <code><i>time</i></code> is specified</p><blockquote class=\"example\"><pre>fastcgi_cache_valid 5m;\n</pre></blockquote><p>then only 200, 301, and 302 responses are cached.</p><p>In addition, the <code>any</code> parameter can be specified to cache any responses:</p><blockquote class=\"example\"><pre>fastcgi_cache_valid 200 302 10m;\nfastcgi_cache_valid 301      1h;\nfastcgi_cache_valid any      1m;\n</pre></blockquote><p>Parameters of caching can also be set directly in the response header. This has higher priority than setting of caching time using the directive.</p>",
    "module": "ngx_http_fastcgi_module",
    "link": "http/ngx_http_fastcgi_module.html#fastcgi_cache_valid",
    "name": "fastcgi_cache_valid"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>fastcgi_catch_stderr</strong> <code><i>string</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets a string to search for in the error stream of a response received from a FastCGI server. If the <code><i>string</i></code> is found then it is considered that the FastCGI server has returned an <a href=\"https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_next_upstream\">invalid response</a>. This allows handling application errors in nginx, for example:</p><blockquote class=\"example\"><pre>location /php/ {\n    fastcgi_pass backend:9000;\n    ...\n    fastcgi_catch_stderr \"PHP Fatal error\";\n    fastcgi_next_upstream error timeout invalid_header;\n}\n</pre></blockquote>",
    "module": "ngx_http_fastcgi_module",
    "link": "http/ngx_http_fastcgi_module.html#fastcgi_catch_stderr",
    "name": "fastcgi_catch_stderr"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>fastcgi_connect_timeout</strong> <code><i>time</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>fastcgi_connect_timeout 60s;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Defines a timeout for establishing a connection with a FastCGI server. It should be noted that this timeout cannot usually exceed 75 seconds.</p>",
    "module": "ngx_http_fastcgi_module",
    "link": "http/ngx_http_fastcgi_module.html#fastcgi_connect_timeout",
    "name": "fastcgi_connect_timeout"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>fastcgi_force_ranges</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>fastcgi_force_ranges off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.7.7.</p>",
    "doc": "<p>Enables byte-range support for both cached and uncached responses from the FastCGI server regardless of the “Accept-Ranges” field in these responses.</p>",
    "module": "ngx_http_fastcgi_module",
    "link": "http/ngx_http_fastcgi_module.html#fastcgi_force_ranges",
    "name": "fastcgi_force_ranges"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>fastcgi_hide_header</strong> <code><i>field</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>By default, nginx does not pass the header fields “Status” and “X-Accel-...” from the response of a FastCGI server to a client. The <code>fastcgi_hide_header</code> directive sets additional fields that will not be passed. If, on the contrary, the passing of fields needs to be permitted, the <a href=\"https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_pass_header\">fastcgi_pass_header</a> directive can be used.</p>",
    "module": "ngx_http_fastcgi_module",
    "link": "http/ngx_http_fastcgi_module.html#fastcgi_hide_header",
    "name": "fastcgi_hide_header"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>fastcgi_ignore_client_abort</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>fastcgi_ignore_client_abort off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Determines whether the connection with a FastCGI server should be closed when a client closes the connection without waiting for a response.</p>",
    "module": "ngx_http_fastcgi_module",
    "link": "http/ngx_http_fastcgi_module.html#fastcgi_ignore_client_abort",
    "name": "fastcgi_ignore_client_abort"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>fastcgi_ignore_headers</strong> <code><i>field</i></code> ...;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Disables processing of certain response header fields from the FastCGI server. The following fields can be ignored: “X-Accel-Redirect”, “X-Accel-Expires”, “X-Accel-Limit-Rate” (1.1.6), “X-Accel-Buffering” (1.1.6), “X-Accel-Charset” (1.1.6), “Expires”, “Cache-Control”, “Set-Cookie” (0.8.44), and “Vary” (1.7.7).</p><p>If not disabled, processing of these header fields has the following effect:</p>",
    "module": "ngx_http_fastcgi_module",
    "link": "http/ngx_http_fastcgi_module.html#fastcgi_ignore_headers",
    "name": "fastcgi_ignore_headers"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>fastcgi_index</strong> <code><i>name</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets a file name that will be appended after a URI that ends with a slash, in the value of the <code>$fastcgi_script_name</code> variable. For example, with these settings</p><blockquote class=\"example\"><pre>fastcgi_index index.php;\nfastcgi_param SCRIPT_FILENAME /home/www/scripts/php$fastcgi_script_name;\n</pre></blockquote><p>and the “<code>/page.php</code>” request, the <code>SCRIPT_FILENAME</code> parameter will be equal to “<code>/home/www/scripts/php/page.php</code>”, and with the “<code>/</code>” request it will be equal to “<code>/home/www/scripts/php/index.php</code>”.</p>",
    "module": "ngx_http_fastcgi_module",
    "link": "http/ngx_http_fastcgi_module.html#fastcgi_index",
    "name": "fastcgi_index"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>fastcgi_intercept_errors</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>fastcgi_intercept_errors off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Determines whether FastCGI server responses with codes greater than or equal to 300 should be passed to a client or be intercepted and redirected to nginx for processing with the <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#error_page\">error_page</a> directive.</p>",
    "module": "ngx_http_fastcgi_module",
    "link": "http/ngx_http_fastcgi_module.html#fastcgi_intercept_errors",
    "name": "fastcgi_intercept_errors"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>fastcgi_keep_conn</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>fastcgi_keep_conn off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.1.4.</p>",
    "doc": "<p>By default, a FastCGI server will close a connection right after sending the response. However, when this directive is set to the value <code>on</code>, nginx will instruct a FastCGI server to keep connections open. This is necessary, in particular, for <a href=\"https://nginx.org/en/docs/http/ngx_http_upstream_module.html#keepalive\">keepalive</a> connections to FastCGI servers to function.</p>",
    "module": "ngx_http_fastcgi_module",
    "link": "http/ngx_http_fastcgi_module.html#fastcgi_keep_conn",
    "name": "fastcgi_keep_conn"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>fastcgi_limit_rate</strong> <code><i>rate</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>fastcgi_limit_rate 0;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.7.7.</p>",
    "doc": "<p>Limits the speed of reading the response from the FastCGI server. The <code><i>rate</i></code> is specified in bytes per second. The zero value disables rate limiting. The limit is set per a request, and so if nginx simultaneously opens two connections to the FastCFI server, the overall rate will be twice as much as the specified limit. The limitation works only if <a href=\"https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_buffering\">buffering</a> of responses from the FastCGI server is enabled.</p>",
    "module": "ngx_http_fastcgi_module",
    "link": "http/ngx_http_fastcgi_module.html#fastcgi_limit_rate",
    "name": "fastcgi_limit_rate"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>fastcgi_max_temp_file_size</strong> <code><i>size</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>fastcgi_max_temp_file_size 1024m;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>When <a href=\"https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_buffering\">buffering</a> of responses from the FastCGI server is enabled, and the whole response does not fit into the buffers set by the <a href=\"https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_buffer_size\">fastcgi_buffer_size</a> and <a href=\"https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_buffers\">fastcgi_buffers</a> directives, a part of the response can be saved to a temporary file. This directive sets the maximum <code><i>size</i></code> of the temporary file. The size of data written to the temporary file at a time is set by the <a href=\"https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_temp_file_write_size\">fastcgi_temp_file_write_size</a> directive.</p><p>The zero value disables buffering of responses to temporary files.</p><blockquote class=\"note\">This restriction does not apply to responses that will be <a href=\"https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_cache\">cached</a> or <a href=\"https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_store\">stored</a> on disk.</blockquote>",
    "module": "ngx_http_fastcgi_module",
    "link": "http/ngx_http_fastcgi_module.html#fastcgi_max_temp_file_size",
    "name": "fastcgi_max_temp_file_size"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>fastcgi_next_upstream</strong> <code>error</code> | <code>timeout</code> | <code>invalid_header</code> | <code>http_500</code> | <code>http_503</code> | <code>http_403</code> | <code>http_404</code> | <code>http_429</code> | <code>non_idempotent</code> | <code>off</code> ...;</code><br></td></tr><tr><th>Default:</th><td><pre>fastcgi_next_upstream error timeout;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Specifies in which cases a request should be passed to the next server:</p><dl class=\"compact\"><dt><code>error</code></dt><dd>an error occurred while establishing a connection with the server, passing a request to it, or reading the response header;</dd><dt><code>timeout</code></dt><dd>a timeout has occurred while establishing a connection with the server, passing a request to it, or reading the response header;</dd><dt><code>invalid_header</code></dt><dd>a server returned an empty or invalid response;</dd><dt><code>http_500</code></dt><dd>a server returned a response with the code 500;</dd><dt><code>http_503</code></dt><dd>a server returned a response with the code 503;</dd><dt><code>http_403</code></dt><dd>a server returned a response with the code 403;</dd><dt><code>http_404</code></dt><dd>a server returned a response with the code 404;</dd><dt><code>http_429</code></dt><dd>a server returned a response with the code 429 (1.11.13);</dd><dt id=\"non_idempotent\"><code>non_idempotent</code></dt><dd>normally, requests with a <a href=\"https://datatracker.ietf.org/doc/html/rfc7231#section-4.2.2\">non-idempotent</a> method (<code>POST</code>, <code>LOCK</code>, <code>PATCH</code>) are not passed to the next server if a request has been sent to an upstream server (1.9.13); enabling this option explicitly allows retrying such requests;</dd><dt><code>off</code></dt><dd>disables passing a request to the next server.</dd></dl><p>One should bear in mind that passing a request to the next server is only possible if nothing has been sent to a client yet. That is, if an error or timeout occurs in the middle of the transferring of a response, fixing this is impossible.</p><p>The directive also defines what is considered an <a href=\"https://nginx.org/en/docs/http/ngx_http_upstream_module.html#max_fails\">unsuccessful attempt</a> of communication with a server. The cases of <code>error</code>, <code>timeout</code> and <code>invalid_header</code> are always considered unsuccessful attempts, even if they are not specified in the directive. The cases of <code>http_500</code>, <code>http_503</code>, and <code>http_429</code> are considered unsuccessful attempts only if they are specified in the directive. The cases of <code>http_403</code> and <code>http_404</code> are never considered unsuccessful attempts.</p><p>Passing a request to the next server can be limited by <a href=\"https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_next_upstream_tries\">the number of tries</a> and by <a href=\"https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_next_upstream_timeout\">time</a>.</p>",
    "module": "ngx_http_fastcgi_module",
    "link": "http/ngx_http_fastcgi_module.html#fastcgi_next_upstream",
    "name": "fastcgi_next_upstream"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>fastcgi_next_upstream_timeout</strong> <code><i>time</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>fastcgi_next_upstream_timeout 0;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.7.5.</p>",
    "doc": "<p>Limits the time during which a request can be passed to the <a href=\"https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_next_upstream\">next server</a>. The <code>0</code> value turns off this limitation.</p>",
    "module": "ngx_http_fastcgi_module",
    "link": "http/ngx_http_fastcgi_module.html#fastcgi_next_upstream_timeout",
    "name": "fastcgi_next_upstream_timeout"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>fastcgi_next_upstream_tries</strong> <code><i>number</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>fastcgi_next_upstream_tries 0;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.7.5.</p>",
    "doc": "<p>Limits the number of possible tries for passing a request to the <a href=\"https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_next_upstream\">next server</a>. The <code>0</code> value turns off this limitation.</p>",
    "module": "ngx_http_fastcgi_module",
    "link": "http/ngx_http_fastcgi_module.html#fastcgi_next_upstream_tries",
    "name": "fastcgi_next_upstream_tries"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>fastcgi_no_cache</strong> <code><i>string</i></code> ...;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Defines conditions under which the response will not be saved to a cache. If at least one value of the string parameters is not empty and is not equal to “0” then the response will not be saved:</p><blockquote class=\"example\"><pre>fastcgi_no_cache $cookie_nocache $arg_nocache$arg_comment;\nfastcgi_no_cache $http_pragma    $http_authorization;\n</pre></blockquote><p>Can be used along with the <a href=\"https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_cache_bypass\">fastcgi_cache_bypass</a> directive.</p>",
    "module": "ngx_http_fastcgi_module",
    "link": "http/ngx_http_fastcgi_module.html#fastcgi_no_cache",
    "name": "fastcgi_no_cache"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>fastcgi_param</strong> <code><i>parameter</i></code> <code><i>value</i></code> [<code>if_not_empty</code>];</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets a <code><i>parameter</i></code> that should be passed to the FastCGI server. The <code><i>value</i></code> can contain text, variables, and their combination. These directives are inherited from the previous configuration level if and only if there are no <code>fastcgi_param</code> directives defined on the current level.</p><p>The following example shows the minimum required settings for PHP:</p><blockquote class=\"example\"><pre>fastcgi_param SCRIPT_FILENAME /home/www/scripts/php$fastcgi_script_name;\nfastcgi_param QUERY_STRING    $query_string;\n</pre></blockquote><p>The <code>SCRIPT_FILENAME</code> parameter is used in PHP for determining the script name, and the <code>QUERY_STRING</code> parameter is used to pass request parameters.</p><p>For scripts that process <code>POST</code> requests, the following three parameters are also required:</p><blockquote class=\"example\"><pre>fastcgi_param REQUEST_METHOD  $request_method;\nfastcgi_param CONTENT_TYPE    $content_type;\nfastcgi_param CONTENT_LENGTH  $content_length;\n</pre></blockquote><p>If PHP was built with the <code>--enable-force-cgi-redirect</code> configuration parameter, the <code>REDIRECT_STATUS</code> parameter should also be passed with the value “200”:</p><blockquote class=\"example\"><pre>fastcgi_param REDIRECT_STATUS 200;\n</pre></blockquote><p>If the directive is specified with <code>if_not_empty</code> (1.1.11) then such a parameter will be passed to the server only if its value is not empty:</p><blockquote class=\"example\"><pre>fastcgi_param HTTPS           $https if_not_empty;\n</pre></blockquote>",
    "module": "ngx_http_fastcgi_module",
    "link": "http/ngx_http_fastcgi_module.html#fastcgi_param",
    "name": "fastcgi_param"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>fastcgi_pass</strong> <code><i>address</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>location</code>, <code>if in location</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets the address of a FastCGI server. The address can be specified as a domain name or IP address, and a port:</p><blockquote class=\"example\"><pre>fastcgi_pass localhost:9000;\n</pre></blockquote><p>or as a UNIX-domain socket path:</p><blockquote class=\"example\"><pre>fastcgi_pass unix:/tmp/fastcgi.socket;\n</pre></blockquote><p>If a domain name resolves to several addresses, all of them will be used in a round-robin fashion. In addition, an address can be specified as a <a href=\"https://nginx.org/en/docs/http/ngx_http_upstream_module.html\">server group</a>.</p><p>Parameter value can contain variables. In this case, if an address is specified as a domain name, the name is searched among the described <a href=\"https://nginx.org/en/docs/http/ngx_http_upstream_module.html\">server groups</a>, and, if not found, is determined using a <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#resolver\">resolver</a>.</p>",
    "module": "ngx_http_fastcgi_module",
    "link": "http/ngx_http_fastcgi_module.html#fastcgi_pass",
    "name": "fastcgi_pass"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>fastcgi_pass_header</strong> <code><i>field</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Permits passing <a href=\"https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_hide_header\">otherwise disabled</a> header fields from a FastCGI server to a client.</p>",
    "module": "ngx_http_fastcgi_module",
    "link": "http/ngx_http_fastcgi_module.html#fastcgi_pass_header",
    "name": "fastcgi_pass_header"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>fastcgi_pass_request_body</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>fastcgi_pass_request_body on;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Indicates whether the original request body is passed to the FastCGI server. See also the <a href=\"https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_pass_request_headers\">fastcgi_pass_request_headers</a> directive.</p>",
    "module": "ngx_http_fastcgi_module",
    "link": "http/ngx_http_fastcgi_module.html#fastcgi_pass_request_body",
    "name": "fastcgi_pass_request_body"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>fastcgi_pass_request_headers</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>fastcgi_pass_request_headers on;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Indicates whether the header fields of the original request are passed to the FastCGI server. See also the <a href=\"https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_pass_request_body\">fastcgi_pass_request_body</a> directive.</p>",
    "module": "ngx_http_fastcgi_module",
    "link": "http/ngx_http_fastcgi_module.html#fastcgi_pass_request_headers",
    "name": "fastcgi_pass_request_headers"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>fastcgi_read_timeout</strong> <code><i>time</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>fastcgi_read_timeout 60s;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Defines a timeout for reading a response from the FastCGI server. The timeout is set only between two successive read operations, not for the transmission of the whole response. If the FastCGI server does not transmit anything within this time, the connection is closed.</p>",
    "module": "ngx_http_fastcgi_module",
    "link": "http/ngx_http_fastcgi_module.html#fastcgi_read_timeout",
    "name": "fastcgi_read_timeout"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>fastcgi_request_buffering</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>fastcgi_request_buffering on;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.7.11.</p>",
    "doc": "<p>Enables or disables buffering of a client request body.</p><p>When buffering is enabled, the entire request body is <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#client_body_buffer_size\">read</a> from the client before sending the request to a FastCGI server.</p><p>When buffering is disabled, the request body is sent to the FastCGI server immediately as it is received. In this case, the request cannot be passed to the <a href=\"https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_next_upstream\">next server</a> if nginx already started sending the request body.</p>",
    "module": "ngx_http_fastcgi_module",
    "link": "http/ngx_http_fastcgi_module.html#fastcgi_request_buffering",
    "name": "fastcgi_request_buffering"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>fastcgi_send_lowat</strong> <code><i>size</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>fastcgi_send_lowat 0;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>If the directive is set to a non-zero value, nginx will try to minimize the number of send operations on outgoing connections to a FastCGI server by using either <code>NOTE_LOWAT</code> flag of the <a href=\"https://nginx.org/en/docs/events.html#kqueue\">kqueue</a> method, or the <code>SO_SNDLOWAT</code> socket option, with the specified <code><i>size</i></code>.</p><p>This directive is ignored on Linux, Solaris, and Windows.</p>",
    "module": "ngx_http_fastcgi_module",
    "link": "http/ngx_http_fastcgi_module.html#fastcgi_send_lowat",
    "name": "fastcgi_send_lowat"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>fastcgi_send_timeout</strong> <code><i>time</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>fastcgi_send_timeout 60s;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets a timeout for transmitting a request to the FastCGI server. The timeout is set only between two successive write operations, not for the transmission of the whole request. If the FastCGI server does not receive anything within this time, the connection is closed.</p>",
    "module": "ngx_http_fastcgi_module",
    "link": "http/ngx_http_fastcgi_module.html#fastcgi_send_timeout",
    "name": "fastcgi_send_timeout"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>fastcgi_socket_keepalive</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>fastcgi_socket_keepalive off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.15.6.</p>",
    "doc": "<p>Configures the “TCP keepalive” behavior for outgoing connections to a FastCGI server. By default, the operating system’s settings are in effect for the socket. If the directive is set to the value “<code>on</code>”, the <code>SO_KEEPALIVE</code> socket option is turned on for the socket.</p>",
    "module": "ngx_http_fastcgi_module",
    "link": "http/ngx_http_fastcgi_module.html#fastcgi_socket_keepalive",
    "name": "fastcgi_socket_keepalive"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>fastcgi_split_path_info</strong> <code><i>regex</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Defines a regular expression that captures a value for the <code>$fastcgi_path_info</code> variable. The regular expression should have two captures: the first becomes a value of the <code>$fastcgi_script_name</code> variable, the second becomes a value of the <code>$fastcgi_path_info</code> variable. For example, with these settings</p><blockquote class=\"example\"><pre>location ~ ^(.+\\.php)(.*)$ {\n    fastcgi_split_path_info       ^(.+\\.php)(.*)$;\n    fastcgi_param SCRIPT_FILENAME /path/to/php$fastcgi_script_name;\n    fastcgi_param PATH_INFO       $fastcgi_path_info;\n</pre></blockquote><p>and the “<code>/show.php/article/0001</code>” request, the <code>SCRIPT_FILENAME</code> parameter will be equal to “<code>/path/to/php/show.php</code>”, and the <code>PATH_INFO</code> parameter will be equal to “<code>/article/0001</code>”.</p>",
    "module": "ngx_http_fastcgi_module",
    "link": "http/ngx_http_fastcgi_module.html#fastcgi_split_path_info",
    "name": "fastcgi_split_path_info"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>fastcgi_store</strong> <code>on</code> | <code>off</code> | <code><i>string</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>fastcgi_store off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Enables saving of files to a disk. The <code>on</code> parameter saves files with paths corresponding to the directives <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#alias\">alias</a> or <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#root\">root</a>. The <code>off</code> parameter disables saving of files. In addition, the file name can be set explicitly using the <code><i>string</i></code> with variables:</p><blockquote class=\"example\"><pre>fastcgi_store /data/www$original_uri;\n</pre></blockquote><p>The modification time of files is set according to the received “Last-Modified” response header field. The response is first written to a temporary file, and then the file is renamed. Starting from version 0.8.9, temporary files and the persistent store can be put on different file systems. However, be aware that in this case a file is copied across two file systems instead of the cheap renaming operation. It is thus recommended that for any given location both saved files and a directory holding temporary files, set by the <a href=\"https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_temp_path\">fastcgi_temp_path</a> directive, are put on the same file system.</p><p>This directive can be used to create local copies of static unchangeable files, e.g.:</p><blockquote class=\"example\"><pre>location /images/ {\n    root                 /data/www;\n    error_page           404 = /fetch$uri;\n}\n\nlocation /fetch/ {\n    internal;\n\n    fastcgi_pass         backend:9000;\n    ...\n\n    fastcgi_store        on;\n    fastcgi_store_access user:rw group:rw all:r;\n    fastcgi_temp_path    /data/temp;\n\n    alias                /data/www/;\n}\n</pre></blockquote>",
    "module": "ngx_http_fastcgi_module",
    "link": "http/ngx_http_fastcgi_module.html#fastcgi_store",
    "name": "fastcgi_store"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>fastcgi_store_access</strong> <code><i>users</i></code>:<code><i>permissions</i></code> ...;</code><br></td></tr><tr><th>Default:</th><td><pre>fastcgi_store_access user:rw;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets access permissions for newly created files and directories, e.g.:</p><blockquote class=\"example\"><pre>fastcgi_store_access user:rw group:rw all:r;\n</pre></blockquote><p>If any <code>group</code> or <code>all</code> access permissions are specified then <code>user</code> permissions may be omitted:</p><blockquote class=\"example\"><pre>fastcgi_store_access group:rw all:r;\n</pre></blockquote>",
    "module": "ngx_http_fastcgi_module",
    "link": "http/ngx_http_fastcgi_module.html#fastcgi_store_access",
    "name": "fastcgi_store_access"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>fastcgi_temp_file_write_size</strong> <code><i>size</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>fastcgi_temp_file_write_size 8k|16k;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Limits the <code><i>size</i></code> of data written to a temporary file at a time, when buffering of responses from the FastCGI server to temporary files is enabled. By default, <code><i>size</i></code> is limited by two buffers set by the <a href=\"https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_buffer_size\">fastcgi_buffer_size</a> and <a href=\"https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_buffers\">fastcgi_buffers</a> directives. The maximum size of a temporary file is set by the <a href=\"https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_max_temp_file_size\">fastcgi_max_temp_file_size</a> directive.</p>",
    "module": "ngx_http_fastcgi_module",
    "link": "http/ngx_http_fastcgi_module.html#fastcgi_temp_file_write_size",
    "name": "fastcgi_temp_file_write_size"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>fastcgi_temp_path</strong> <code><i>path</i></code> [<code><i>level1</i></code> [<code><i>level2</i></code> [<code><i>level3</i></code>]]];</code><br></td></tr><tr><th>Default:</th><td><pre>fastcgi_temp_path fastcgi_temp;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Defines a directory for storing temporary files with data received from FastCGI servers. Up to three-level subdirectory hierarchy can be used underneath the specified directory. For example, in the following configuration</p><blockquote class=\"example\"><pre>fastcgi_temp_path /spool/nginx/fastcgi_temp 1 2;\n</pre></blockquote><p>a temporary file might look like this:</p><blockquote class=\"example\"><pre>/spool/nginx/fastcgi_temp/<strong>7</strong>/<strong>45</strong>/00000123<strong>457</strong>\n</pre></blockquote><p>See also the <code>use_temp_path</code> parameter of the <a href=\"https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_cache_path\">fastcgi_cache_path</a> directive.</p>",
    "module": "ngx_http_fastcgi_module",
    "link": "http/ngx_http_fastcgi_module.html#fastcgi_temp_path",
    "name": "fastcgi_temp_path"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>flv</strong>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Turns on module processing in a surrounding location.</p>",
    "module": "ngx_http_flv_module",
    "link": "http/ngx_http_flv_module.html#flv",
    "name": "flv"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>geo</strong> [<code><i>$address</i></code>] <code><i>$variable</i></code> { ... }</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code><br></td></tr></tbody></table>",
    "doc": "<p>Describes the dependency of values of the specified variable on the client IP address. By default, the address is taken from the <code>$remote_addr</code> variable, but it can also be taken from another variable (0.7.27), for example:</p><blockquote class=\"example\"><pre>geo $arg_remote_addr $geo {\n    ...;\n}\n</pre></blockquote><blockquote class=\"note\">Since variables are evaluated only when used, the mere existence of even a large number of declared “<code>geo</code>” variables does not cause any extra costs for request processing.</blockquote><p>If the value of a variable does not represent a valid IP address then the “<code>255.255.255.255</code>” address is used.</p><p>Addresses are specified either as prefixes in CIDR notation (including individual addresses) or as ranges (0.7.23).</p><blockquote class=\"note\">IPv6 prefixes are supported starting from versions 1.3.10 and 1.2.7.</blockquote><p>The following special parameters are also supported:</p><dl class=\"compact\"><dt><code>delete</code></dt><dd>deletes the specified network (0.7.23).</dd><dt><code>default</code></dt><dd>a value set to the variable if the client address does not match any of the specified addresses. When addresses are specified in CIDR notation, “<code>0.0.0.0/0</code>” and “<code>::/0</code>” can be used instead of <code>default</code>. When <code>default</code> is not specified, the default value will be an empty string.</dd><dt><code>include</code></dt><dd>includes a file with addresses and values. There can be several inclusions.</dd><dt><code>proxy</code></dt><dd>defines trusted addresses (0.8.7, 0.7.63). When a request comes from a trusted address, an address from the “X-Forwarded-For” request header field will be used instead. In contrast to the regular addresses, trusted addresses are checked sequentially.<blockquote class=\"note\">Trusted IPv6 addresses are supported starting from versions 1.3.0 and 1.2.1.</blockquote></dd><dt><code>proxy_recursive</code></dt><dd>enables recursive address search (1.3.0, 1.2.1). If recursive search is disabled then instead of the original client address that matches one of the trusted addresses, the last address sent in “X-Forwarded-For” will be used. If recursive search is enabled then instead of the original client address that matches one of the trusted addresses, the last non-trusted address sent in “X-Forwarded-For” will be used.</dd><dt><code>ranges</code></dt><dd>indicates that addresses are specified as ranges (0.7.23). This parameter should be the first. To speed up loading of a geo base, addresses should be put in ascending order.</dd></dl><p>Example:</p><blockquote class=\"example\"><pre>geo $country {\n    default        ZZ;\n    include        conf/geo.conf;\n    delete         127.0.0.0/16;\n    proxy          192.168.100.0/24;\n    proxy          2001:0db8::/32;\n\n    127.0.0.0/24   US;\n    127.0.0.1/32   RU;\n    10.1.0.0/16    RU;\n    192.168.1.0/24 UK;\n}\n</pre></blockquote><p>The <code>conf/geo.conf</code> file could contain the following lines:</p><blockquote class=\"example\"><pre>10.2.0.0/16    RU;\n192.168.2.0/24 RU;\n</pre></blockquote><p>A value of the most specific match is used. For example, for the 127.0.0.1 address the value “<code>RU</code>” will be chosen, not “<code>US</code>”.</p><p>Example with ranges:</p><blockquote class=\"example\"><pre>geo $country {\n    ranges;\n    default                   ZZ;\n    127.0.0.0-127.0.0.0       US;\n    127.0.0.1-127.0.0.1       RU;\n    127.0.0.1-127.0.0.255     US;\n    10.1.0.0-10.1.255.255     RU;\n    192.168.1.0-192.168.1.255 UK;\n}\n</pre></blockquote>",
    "module": "ngx_http_geo_module",
    "link": "http/ngx_http_geo_module.html#geo",
    "name": "geo"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>geoip_country</strong> <code><i>file</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code><br></td></tr></tbody></table>",
    "doc": "<p>Specifies a database used to determine the country depending on the client IP address. The following variables are available when using this database:</p><dl class=\"compact\"><dt id=\"var_geoip_country_code\"><code>$geoip_country_code</code></dt><dd>two-letter country code, for example, “<code>RU</code>”, “<code>US</code>”.</dd><dt id=\"var_geoip_country_code3\"><code>$geoip_country_code3</code></dt><dd>three-letter country code, for example, “<code>RUS</code>”, “<code>USA</code>”.</dd><dt id=\"var_geoip_country_name\"><code>$geoip_country_name</code></dt><dd>country name, for example, “<code>Russian Federation</code>”, “<code>United States</code>”.</dd></dl>",
    "module": "ngx_http_geoip_module",
    "link": "http/ngx_http_geoip_module.html#geoip_country",
    "name": "geoip_country"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>geoip_city</strong> <code><i>file</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code><br></td></tr></tbody></table>",
    "doc": "<p>Specifies a database used to determine the country, region, and city depending on the client IP address. The following variables are available when using this database:</p><dl class=\"compact\"><dt id=\"var_geoip_area_code\"><code>$geoip_area_code</code></dt><dd>telephone area code (US only).<blockquote class=\"note\">This variable may contain outdated information since the corresponding database field is deprecated.</blockquote></dd><dt id=\"var_geoip_city_continent_code\"><code>$geoip_city_continent_code</code></dt><dd>two-letter continent code, for example, “<code>EU</code>”, “<code>NA</code>”.</dd><dt id=\"var_geoip_city_country_code\"><code>$geoip_city_country_code</code></dt><dd>two-letter country code, for example, “<code>RU</code>”, “<code>US</code>”.</dd><dt id=\"var_geoip_city_country_code3\"><code>$geoip_city_country_code3</code></dt><dd>three-letter country code, for example, “<code>RUS</code>”, “<code>USA</code>”.</dd><dt id=\"var_geoip_city_country_name\"><code>$geoip_city_country_name</code></dt><dd>country name, for example, “<code>Russian Federation</code>”, “<code>United States</code>”.</dd><dt id=\"var_geoip_dma_code\"><code>$geoip_dma_code</code></dt><dd>DMA region code in US (also known as “metro code”), according to the <a href=\"https://developers.google.com/adwords/api/docs/appendix/cities-DMAregions\">geotargeting</a> in Google AdWords API.</dd><dt id=\"var_geoip_latitude\"><code>$geoip_latitude</code></dt><dd>latitude.</dd><dt id=\"var_geoip_longitude\"><code>$geoip_longitude</code></dt><dd>longitude.</dd><dt id=\"var_geoip_region\"><code>$geoip_region</code></dt><dd>two-symbol country region code (region, territory, state, province, federal land and the like), for example, “<code>48</code>”, “<code>DC</code>”.</dd><dt id=\"var_geoip_region_name\"><code>$geoip_region_name</code></dt><dd>country region name (region, territory, state, province, federal land and the like), for example, “<code>Moscow City</code>”, “<code>District of Columbia</code>”.</dd><dt id=\"var_geoip_city\"><code>$geoip_city</code></dt><dd>city name, for example, “<code>Moscow</code>”, “<code>Washington</code>”.</dd><dt id=\"var_geoip_postal_code\"><code>$geoip_postal_code</code></dt><dd>postal code.</dd></dl>",
    "module": "ngx_http_geoip_module",
    "link": "http/ngx_http_geoip_module.html#geoip_city",
    "name": "geoip_city"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>geoip_org</strong> <code><i>file</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code><br></td></tr></tbody></table><p>This directive appeared in version 1.0.3.</p>",
    "doc": "<p>Specifies a database used to determine the organization depending on the client IP address. The following variable is available when using this database:</p><dl class=\"compact\"><dt id=\"var_geoip_org\"><code>$geoip_org</code></dt><dd>organization name, for example, “The University of Melbourne”.</dd></dl>",
    "module": "ngx_http_geoip_module",
    "link": "http/ngx_http_geoip_module.html#geoip_org",
    "name": "geoip_org"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>geoip_proxy</strong> <code><i>address</i></code> | <code><i>CIDR</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code><br></td></tr></tbody></table><p>This directive appeared in versions 1.3.0 and 1.2.1.</p>",
    "doc": "<p>Defines trusted addresses. When a request comes from a trusted address, an address from the “X-Forwarded-For” request header field will be used instead.</p>",
    "module": "ngx_http_geoip_module",
    "link": "http/ngx_http_geoip_module.html#geoip_proxy",
    "name": "geoip_proxy"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>geoip_proxy_recursive</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>geoip_proxy_recursive off;</pre></td></tr><tr><th>Context:</th><td><code>http</code><br></td></tr></tbody></table><p>This directive appeared in versions 1.3.0 and 1.2.1.</p>",
    "doc": "<p>If recursive search is disabled then instead of the original client address that matches one of the trusted addresses, the last address sent in “X-Forwarded-For” will be used. If recursive search is enabled then instead of the original client address that matches one of the trusted addresses, the last non-trusted address sent in “X-Forwarded-For” will be used.</p>",
    "module": "ngx_http_geoip_module",
    "link": "http/ngx_http_geoip_module.html#geoip_proxy_recursive",
    "name": "geoip_proxy_recursive"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>grpc_bind</strong> <code><i>address</i></code> [<code>transparent</code>] | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Makes outgoing connections to a gRPC server originate from the specified local IP address with an optional port. Parameter value can contain variables. The special value <code>off</code> cancels the effect of the <code>grpc_bind</code> directive inherited from the previous configuration level, which allows the system to auto-assign the local IP address and port.</p>",
    "module": "ngx_http_grpc_module",
    "link": "http/ngx_http_grpc_module.html#grpc_bind",
    "name": "grpc_bind"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>grpc_buffer_size</strong> <code><i>size</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>grpc_buffer_size 4k|8k;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets the <code><i>size</i></code> of the buffer used for reading the response received from the gRPC server. The response is passed to the client synchronously, as soon as it is received.</p>",
    "module": "ngx_http_grpc_module",
    "link": "http/ngx_http_grpc_module.html#grpc_buffer_size",
    "name": "grpc_buffer_size"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>grpc_connect_timeout</strong> <code><i>time</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>grpc_connect_timeout 60s;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Defines a timeout for establishing a connection with a gRPC server. It should be noted that this timeout cannot usually exceed 75 seconds.</p>",
    "module": "ngx_http_grpc_module",
    "link": "http/ngx_http_grpc_module.html#grpc_connect_timeout",
    "name": "grpc_connect_timeout"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>grpc_hide_header</strong> <code><i>field</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>By default, nginx does not pass the header fields “Date”, “Server”, and “X-Accel-...” from the response of a gRPC server to a client. The <code>grpc_hide_header</code> directive sets additional fields that will not be passed. If, on the contrary, the passing of fields needs to be permitted, the <a href=\"https://nginx.org/en/docs/http/ngx_http_grpc_module.html#grpc_pass_header\">grpc_pass_header</a> directive can be used.</p>",
    "module": "ngx_http_grpc_module",
    "link": "http/ngx_http_grpc_module.html#grpc_hide_header",
    "name": "grpc_hide_header"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>grpc_ignore_headers</strong> <code><i>field</i></code> ...;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Disables processing of certain response header fields from the gRPC server. The following fields can be ignored: “X-Accel-Redirect” and “X-Accel-Charset”.</p><p>If not disabled, processing of these header fields has the following effect:</p>",
    "module": "ngx_http_grpc_module",
    "link": "http/ngx_http_grpc_module.html#grpc_ignore_headers",
    "name": "grpc_ignore_headers"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>grpc_intercept_errors</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>grpc_intercept_errors off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Determines whether gRPC server responses with codes greater than or equal to 300 should be passed to a client or be intercepted and redirected to nginx for processing with the <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#error_page\">error_page</a> directive.</p>",
    "module": "ngx_http_grpc_module",
    "link": "http/ngx_http_grpc_module.html#grpc_intercept_errors",
    "name": "grpc_intercept_errors"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>grpc_next_upstream</strong> <code>error</code> | <code>timeout</code> | <code>invalid_header</code> | <code>http_500</code> | <code>http_502</code> | <code>http_503</code> | <code>http_504</code> | <code>http_403</code> | <code>http_404</code> | <code>http_429</code> | <code>non_idempotent</code> | <code>off</code> ...;</code><br></td></tr><tr><th>Default:</th><td><pre>grpc_next_upstream error timeout;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Specifies in which cases a request should be passed to the next server:</p><dl class=\"compact\"><dt><code>error</code></dt><dd>an error occurred while establishing a connection with the server, passing a request to it, or reading the response header;</dd><dt><code>timeout</code></dt><dd>a timeout has occurred while establishing a connection with the server, passing a request to it, or reading the response header;</dd><dt><code>invalid_header</code></dt><dd>a server returned an empty or invalid response;</dd><dt><code>http_500</code></dt><dd>a server returned a response with the code 500;</dd><dt><code>http_502</code></dt><dd>a server returned a response with the code 502;</dd><dt><code>http_503</code></dt><dd>a server returned a response with the code 503;</dd><dt><code>http_504</code></dt><dd>a server returned a response with the code 504;</dd><dt><code>http_403</code></dt><dd>a server returned a response with the code 403;</dd><dt><code>http_404</code></dt><dd>a server returned a response with the code 404;</dd><dt><code>http_429</code></dt><dd>a server returned a response with the code 429;</dd><dt id=\"non_idempotent\"><code>non_idempotent</code></dt><dd>normally, requests with a <a href=\"https://datatracker.ietf.org/doc/html/rfc7231#section-4.2.2\">non-idempotent</a> method (<code>POST</code>, <code>LOCK</code>, <code>PATCH</code>) are not passed to the next server if a request has been sent to an upstream server; enabling this option explicitly allows retrying such requests;</dd><dt><code>off</code></dt><dd>disables passing a request to the next server.</dd></dl><p>One should bear in mind that passing a request to the next server is only possible if nothing has been sent to a client yet. That is, if an error or timeout occurs in the middle of the transferring of a response, fixing this is impossible.</p><p>The directive also defines what is considered an <a href=\"https://nginx.org/en/docs/http/ngx_http_upstream_module.html#max_fails\">unsuccessful attempt</a> of communication with a server. The cases of <code>error</code>, <code>timeout</code> and <code>invalid_header</code> are always considered unsuccessful attempts, even if they are not specified in the directive. The cases of <code>http_500</code>, <code>http_502</code>, <code>http_503</code>, <code>http_504</code>, and <code>http_429</code> are considered unsuccessful attempts only if they are specified in the directive. The cases of <code>http_403</code> and <code>http_404</code> are never considered unsuccessful attempts.</p><p>Passing a request to the next server can be limited by <a href=\"https://nginx.org/en/docs/http/ngx_http_grpc_module.html#grpc_next_upstream_tries\">the number of tries</a> and by <a href=\"https://nginx.org/en/docs/http/ngx_http_grpc_module.html#grpc_next_upstream_timeout\">time</a>.</p>",
    "module": "ngx_http_grpc_module",
    "link": "http/ngx_http_grpc_module.html#grpc_next_upstream",
    "name": "grpc_next_upstream"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>grpc_next_upstream_timeout</strong> <code><i>time</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>grpc_next_upstream_timeout 0;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Limits the time during which a request can be passed to the <a href=\"https://nginx.org/en/docs/http/ngx_http_grpc_module.html#grpc_next_upstream\">next server</a>. The <code>0</code> value turns off this limitation.</p>",
    "module": "ngx_http_grpc_module",
    "link": "http/ngx_http_grpc_module.html#grpc_next_upstream_timeout",
    "name": "grpc_next_upstream_timeout"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>grpc_next_upstream_tries</strong> <code><i>number</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>grpc_next_upstream_tries 0;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Limits the number of possible tries for passing a request to the <a href=\"https://nginx.org/en/docs/http/ngx_http_grpc_module.html#grpc_next_upstream\">next server</a>. The <code>0</code> value turns off this limitation.</p>",
    "module": "ngx_http_grpc_module",
    "link": "http/ngx_http_grpc_module.html#grpc_next_upstream_tries",
    "name": "grpc_next_upstream_tries"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>grpc_pass</strong> <code><i>address</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>location</code>, <code>if in location</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets the gRPC server address. The address can be specified as a domain name or IP address, and a port:</p><blockquote class=\"example\"><pre>grpc_pass localhost:9000;\n</pre></blockquote><p>or as a UNIX-domain socket path:</p><blockquote class=\"example\"><pre>grpc_pass unix:/tmp/grpc.socket;\n</pre></blockquote><p>Alternatively, the “<code>grpc://</code>” scheme can be used:</p><blockquote class=\"example\"><pre>grpc_pass grpc://127.0.0.1:9000;\n</pre></blockquote><p>To use gRPC over SSL, the “<code>grpcs://</code>” scheme should be used:</p><blockquote class=\"example\"><pre>grpc_pass grpcs://127.0.0.1:443;\n</pre></blockquote><p>If a domain name resolves to several addresses, all of them will be used in a round-robin fashion. In addition, an address can be specified as a <a href=\"https://nginx.org/en/docs/http/ngx_http_upstream_module.html\">server group</a>.</p><p>Parameter value can contain variables (1.17.8). In this case, if an address is specified as a domain name, the name is searched among the described <a href=\"https://nginx.org/en/docs/http/ngx_http_upstream_module.html\">server groups</a>, and, if not found, is determined using a <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#resolver\">resolver</a>.</p>",
    "module": "ngx_http_grpc_module",
    "link": "http/ngx_http_grpc_module.html#grpc_pass",
    "name": "grpc_pass"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>grpc_pass_header</strong> <code><i>field</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Permits passing <a href=\"https://nginx.org/en/docs/http/ngx_http_grpc_module.html#grpc_hide_header\">otherwise disabled</a> header fields from a gRPC server to a client.</p>",
    "module": "ngx_http_grpc_module",
    "link": "http/ngx_http_grpc_module.html#grpc_pass_header",
    "name": "grpc_pass_header"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>grpc_read_timeout</strong> <code><i>time</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>grpc_read_timeout 60s;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Defines a timeout for reading a response from the gRPC server. The timeout is set only between two successive read operations, not for the transmission of the whole response. If the gRPC server does not transmit anything within this time, the connection is closed.</p>",
    "module": "ngx_http_grpc_module",
    "link": "http/ngx_http_grpc_module.html#grpc_read_timeout",
    "name": "grpc_read_timeout"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>grpc_send_timeout</strong> <code><i>time</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>grpc_send_timeout 60s;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets a timeout for transmitting a request to the gRPC server. The timeout is set only between two successive write operations, not for the transmission of the whole request. If the gRPC server does not receive anything within this time, the connection is closed.</p>",
    "module": "ngx_http_grpc_module",
    "link": "http/ngx_http_grpc_module.html#grpc_send_timeout",
    "name": "grpc_send_timeout"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>grpc_set_header</strong> <code><i>field</i></code> <code><i>value</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>grpc_set_header Content-Length $content_length;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Allows redefining or appending fields to the request header <a href=\"https://nginx.org/en/docs/http/ngx_http_grpc_module.html#grpc_pass_request_headers\">passed</a> to the gRPC server. The <code><i>value</i></code> can contain text, variables, and their combinations. These directives are inherited from the previous configuration level if and only if there are no <code>grpc_set_header</code> directives defined on the current level.</p><p>If the value of a header field is an empty string then this field will not be passed to a gRPC server:</p><blockquote class=\"example\"><pre>grpc_set_header Accept-Encoding \"\";\n</pre></blockquote>",
    "module": "ngx_http_grpc_module",
    "link": "http/ngx_http_grpc_module.html#grpc_set_header",
    "name": "grpc_set_header"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>grpc_socket_keepalive</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>grpc_socket_keepalive off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.15.6.</p>",
    "doc": "<p>Configures the “TCP keepalive” behavior for outgoing connections to a gRPC server. By default, the operating system’s settings are in effect for the socket. If the directive is set to the value “<code>on</code>”, the <code>SO_KEEPALIVE</code> socket option is turned on for the socket.</p>",
    "module": "ngx_http_grpc_module",
    "link": "http/ngx_http_grpc_module.html#grpc_socket_keepalive",
    "name": "grpc_socket_keepalive"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>grpc_ssl_certificate</strong> <code><i>file</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Specifies a <code><i>file</i></code> with the certificate in the PEM format used for authentication to a gRPC SSL server.</p><p>Since version 1.21.0, variables can be used in the <code><i>file</i></code> name.</p>",
    "module": "ngx_http_grpc_module",
    "link": "http/ngx_http_grpc_module.html#grpc_ssl_certificate",
    "name": "grpc_ssl_certificate"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>grpc_ssl_certificate_key</strong> <code><i>file</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Specifies a <code><i>file</i></code> with the secret key in the PEM format used for authentication to a gRPC SSL server.</p><p>The value <code>engine</code>:<code><i>name</i></code>:<code><i>id</i></code> can be specified instead of the <code><i>file</i></code>, which loads a secret key with a specified <code><i>id</i></code> from the OpenSSL engine <code><i>name</i></code>.</p><p>Since version 1.21.0, variables can be used in the <code><i>file</i></code> name.</p>",
    "module": "ngx_http_grpc_module",
    "link": "http/ngx_http_grpc_module.html#grpc_ssl_certificate_key",
    "name": "grpc_ssl_certificate_key"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>grpc_ssl_ciphers</strong> <code><i>ciphers</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>grpc_ssl_ciphers DEFAULT;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Specifies the enabled ciphers for requests to a gRPC SSL server. The ciphers are specified in the format understood by the OpenSSL library.</p><p>The full list can be viewed using the “<code>openssl ciphers</code>” command.</p>",
    "module": "ngx_http_grpc_module",
    "link": "http/ngx_http_grpc_module.html#grpc_ssl_ciphers",
    "name": "grpc_ssl_ciphers"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>grpc_ssl_conf_command</strong> <code><i>name</i></code> <code><i>value</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.19.4.</p>",
    "doc": "<p>Sets arbitrary OpenSSL configuration <a href=\"https://www.openssl.org/docs/man1.1.1/man3/SSL_CONF_cmd.html\">commands</a> when establishing a connection with the gRPC SSL server.</p><blockquote class=\"note\">The directive is supported when using OpenSSL 1.0.2 or higher.</blockquote><p>Several <code>grpc_ssl_conf_command</code> directives can be specified on the same level. These directives are inherited from the previous configuration level if and only if there are no <code>grpc_ssl_conf_command</code> directives defined on the current level.</p><blockquote class=\"note\">Note that configuring OpenSSL directly might result in unexpected behavior.</blockquote>",
    "module": "ngx_http_grpc_module",
    "link": "http/ngx_http_grpc_module.html#grpc_ssl_conf_command",
    "name": "grpc_ssl_conf_command"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>grpc_ssl_crl</strong> <code><i>file</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Specifies a <code><i>file</i></code> with revoked certificates (CRL) in the PEM format used to <a href=\"https://nginx.org/en/docs/http/ngx_http_grpc_module.html#grpc_ssl_verify\">verify</a> the certificate of the gRPC SSL server.</p>",
    "module": "ngx_http_grpc_module",
    "link": "http/ngx_http_grpc_module.html#grpc_ssl_crl",
    "name": "grpc_ssl_crl"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>grpc_ssl_name</strong> <code><i>name</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>grpc_ssl_name host from grpc_pass;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Allows overriding the server name used to <a href=\"https://nginx.org/en/docs/http/ngx_http_grpc_module.html#grpc_ssl_verify\">verify</a> the certificate of the gRPC SSL server and to be <a href=\"https://nginx.org/en/docs/http/ngx_http_grpc_module.html#grpc_ssl_server_name\">passed through SNI</a> when establishing a connection with the gRPC SSL server.</p><p>By default, the host part from <a href=\"https://nginx.org/en/docs/http/ngx_http_grpc_module.html#grpc_pass\">grpc_pass</a> is used.</p>",
    "module": "ngx_http_grpc_module",
    "link": "http/ngx_http_grpc_module.html#grpc_ssl_name",
    "name": "grpc_ssl_name"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>grpc_ssl_password_file</strong> <code><i>file</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Specifies a <code><i>file</i></code> with passphrases for <a href=\"https://nginx.org/en/docs/http/ngx_http_grpc_module.html#grpc_ssl_certificate_key\">secret keys</a> where each passphrase is specified on a separate line. Passphrases are tried in turn when loading the key.</p>",
    "module": "ngx_http_grpc_module",
    "link": "http/ngx_http_grpc_module.html#grpc_ssl_password_file",
    "name": "grpc_ssl_password_file"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>grpc_ssl_protocols</strong> [<code>SSLv2</code>] [<code>SSLv3</code>] [<code>TLSv1</code>] [<code>TLSv1.1</code>] [<code>TLSv1.2</code>] [<code>TLSv1.3</code>];</code><br></td></tr><tr><th>Default:</th><td><pre>grpc_ssl_protocols TLSv1 TLSv1.1 TLSv1.2;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Enables the specified protocols for requests to a gRPC SSL server.</p>",
    "module": "ngx_http_grpc_module",
    "link": "http/ngx_http_grpc_module.html#grpc_ssl_protocols",
    "name": "grpc_ssl_protocols"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>grpc_ssl_server_name</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>grpc_ssl_server_name off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Enables or disables passing of the server name through <a href=\"http://en.wikipedia.org/wiki/Server_Name_Indication\">TLS Server Name Indication extension</a> (SNI, RFC 6066) when establishing a connection with the gRPC SSL server.</p>",
    "module": "ngx_http_grpc_module",
    "link": "http/ngx_http_grpc_module.html#grpc_ssl_server_name",
    "name": "grpc_ssl_server_name"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>grpc_ssl_session_reuse</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>grpc_ssl_session_reuse on;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Determines whether SSL sessions can be reused when working with the gRPC server. If the errors “<code>SSL3_GET_FINISHED:digest check failed</code>” appear in the logs, try disabling session reuse.</p>",
    "module": "ngx_http_grpc_module",
    "link": "http/ngx_http_grpc_module.html#grpc_ssl_session_reuse",
    "name": "grpc_ssl_session_reuse"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>grpc_ssl_trusted_certificate</strong> <code><i>file</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Specifies a <code><i>file</i></code> with trusted CA certificates in the PEM format used to <a href=\"https://nginx.org/en/docs/http/ngx_http_grpc_module.html#grpc_ssl_verify\">verify</a> the certificate of the gRPC SSL server.</p>",
    "module": "ngx_http_grpc_module",
    "link": "http/ngx_http_grpc_module.html#grpc_ssl_trusted_certificate",
    "name": "grpc_ssl_trusted_certificate"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>grpc_ssl_verify</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>grpc_ssl_verify off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Enables or disables verification of the gRPC SSL server certificate.</p>",
    "module": "ngx_http_grpc_module",
    "link": "http/ngx_http_grpc_module.html#grpc_ssl_verify",
    "name": "grpc_ssl_verify"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>grpc_ssl_verify_depth</strong> <code><i>number</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>grpc_ssl_verify_depth 1;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets the verification depth in the gRPC SSL server certificates chain.</p>",
    "module": "ngx_http_grpc_module",
    "link": "http/ngx_http_grpc_module.html#grpc_ssl_verify_depth",
    "name": "grpc_ssl_verify_depth"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>gunzip</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>gunzip off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Enables or disables decompression of gzipped responses for clients that lack gzip support. If enabled, the following directives are also taken into account when determining if clients support gzip: <a href=\"https://nginx.org/en/docs/http/ngx_http_gzip_module.html#gzip_http_version\">gzip_http_version</a>, <a href=\"https://nginx.org/en/docs/http/ngx_http_gzip_module.html#gzip_proxied\">gzip_proxied</a>, and <a href=\"https://nginx.org/en/docs/http/ngx_http_gzip_module.html#gzip_disable\">gzip_disable</a>. See also the <a href=\"https://nginx.org/en/docs/http/ngx_http_gzip_module.html#gzip_vary\">gzip_vary</a> directive.</p>",
    "module": "ngx_http_gunzip_module",
    "link": "http/ngx_http_gunzip_module.html#gunzip",
    "name": "gunzip"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>gunzip_buffers</strong> <code><i>number</i></code> <code><i>size</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>gunzip_buffers 32 4k|16 8k;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets the <code><i>number</i></code> and <code><i>size</i></code> of buffers used to decompress a response. By default, the buffer size is equal to one memory page. This is either 4K or 8K, depending on a platform.</p>",
    "module": "ngx_http_gunzip_module",
    "link": "http/ngx_http_gunzip_module.html#gunzip_buffers",
    "name": "gunzip_buffers"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>gzip</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>gzip off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code>, <code>if in location</code><br></td></tr></tbody></table>",
    "doc": "<p>Enables or disables gzipping of responses.</p>",
    "module": "ngx_http_gzip_module",
    "link": "http/ngx_http_gzip_module.html#gzip",
    "name": "gzip"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>gzip_buffers</strong> <code><i>number</i></code> <code><i>size</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>gzip_buffers 32 4k|16 8k;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets the <code><i>number</i></code> and <code><i>size</i></code> of buffers used to compress a response. By default, the buffer size is equal to one memory page. This is either 4K or 8K, depending on a platform.</p><blockquote class=\"note\">Until version 0.7.28, four 4K or 8K buffers were used by default.</blockquote>",
    "module": "ngx_http_gzip_module",
    "link": "http/ngx_http_gzip_module.html#gzip_buffers",
    "name": "gzip_buffers"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>gzip_comp_level</strong> <code><i>level</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>gzip_comp_level 1;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets a gzip compression <code><i>level</i></code> of a response. Acceptable values are in the range from 1 to 9.</p>",
    "module": "ngx_http_gzip_module",
    "link": "http/ngx_http_gzip_module.html#gzip_comp_level",
    "name": "gzip_comp_level"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>gzip_disable</strong> <code><i>regex</i></code> ...;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 0.6.23.</p>",
    "doc": "<p>Disables gzipping of responses for requests with “User-Agent” header fields matching any of the specified regular expressions.</p><p>The special mask “<code>msie6</code>” (0.7.12) corresponds to the regular expression “<code>MSIE [4-6]\\.</code>”, but works faster. Starting from version 0.8.11, “<code>MSIE 6.0; ... SV1</code>” is excluded from this mask.</p>",
    "module": "ngx_http_gzip_module",
    "link": "http/ngx_http_gzip_module.html#gzip_disable",
    "name": "gzip_disable"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>gzip_http_version</strong> <code>1.0</code> | <code>1.1</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>gzip_http_version 1.1;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets the minimum HTTP version of a request required to compress a response.</p>",
    "module": "ngx_http_gzip_module",
    "link": "http/ngx_http_gzip_module.html#gzip_http_version",
    "name": "gzip_http_version"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>gzip_min_length</strong> <code><i>length</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>gzip_min_length 20;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets the minimum length of a response that will be gzipped. The length is determined only from the “Content-Length” response header field.</p>",
    "module": "ngx_http_gzip_module",
    "link": "http/ngx_http_gzip_module.html#gzip_min_length",
    "name": "gzip_min_length"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>gzip_proxied</strong> <code>off</code> | <code>expired</code> | <code>no-cache</code> | <code>no-store</code> | <code>private</code> | <code>no_last_modified</code> | <code>no_etag</code> | <code>auth</code> | <code>any</code> ...;</code><br></td></tr><tr><th>Default:</th><td><pre>gzip_proxied off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Enables or disables gzipping of responses for proxied requests depending on the request and response. The fact that the request is proxied is determined by the presence of the “Via” request header field. The directive accepts multiple parameters:</p><dl class=\"compact\"><dt><code>off</code></dt><dd>disables compression for all proxied requests, ignoring other parameters;</dd><dt><code>expired</code></dt><dd>enables compression if a response header includes the “Expires” field with a value that disables caching;</dd><dt><code>no-cache</code></dt><dd>enables compression if a response header includes the “Cache-Control” field with the “<code>no-cache</code>” parameter;</dd><dt><code>no-store</code></dt><dd>enables compression if a response header includes the “Cache-Control” field with the “<code>no-store</code>” parameter;</dd><dt><code>private</code></dt><dd>enables compression if a response header includes the “Cache-Control” field with the “<code>private</code>” parameter;</dd><dt><code>no_last_modified</code></dt><dd>enables compression if a response header does not include the “Last-Modified” field;</dd><dt><code>no_etag</code></dt><dd>enables compression if a response header does not include the “ETag” field;</dd><dt><code>auth</code></dt><dd>enables compression if a request header includes the “Authorization” field;</dd><dt><code>any</code></dt><dd>enables compression for all proxied requests.</dd></dl>",
    "module": "ngx_http_gzip_module",
    "link": "http/ngx_http_gzip_module.html#gzip_proxied",
    "name": "gzip_proxied"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>gzip_types</strong> <code><i>mime-type</i></code> ...;</code><br></td></tr><tr><th>Default:</th><td><pre>gzip_types text/html;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Enables gzipping of responses for the specified MIME types in addition to “<code>text/html</code>”. The special value “<code>*</code>” matches any MIME type (0.8.29). Responses with the “<code>text/html</code>” type are always compressed.</p>",
    "module": "ngx_http_gzip_module",
    "link": "http/ngx_http_gzip_module.html#gzip_types",
    "name": "gzip_types"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>gzip_vary</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>gzip_vary off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Enables or disables inserting the “Vary: Accept-Encoding” response header field if the directives <a href=\"https://nginx.org/en/docs/http/ngx_http_gzip_module.html#gzip\">gzip</a>, <a href=\"https://nginx.org/en/docs/http/ngx_http_gzip_static_module.html#gzip_static\">gzip_static</a>, or <a href=\"https://nginx.org/en/docs/http/ngx_http_gunzip_module.html#gunzip\">gunzip</a> are active.</p>",
    "module": "ngx_http_gzip_module",
    "link": "http/ngx_http_gzip_module.html#gzip_vary",
    "name": "gzip_vary"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>gzip_static</strong> <code>on</code> | <code>off</code> | <code>always</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>gzip_static off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Enables (“<code>on</code>”) or disables (“<code>off</code>”) checking the existence of precompressed files. The following directives are also taken into account: <a href=\"https://nginx.org/en/docs/http/ngx_http_gzip_module.html#gzip_http_version\">gzip_http_version</a>, <a href=\"https://nginx.org/en/docs/http/ngx_http_gzip_module.html#gzip_proxied\">gzip_proxied</a>, <a href=\"https://nginx.org/en/docs/http/ngx_http_gzip_module.html#gzip_disable\">gzip_disable</a>, and <a href=\"https://nginx.org/en/docs/http/ngx_http_gzip_module.html#gzip_vary\">gzip_vary</a>.</p><p>With the “<code>always</code>” value (1.3.6), gzipped file is used in all cases, without checking if the client supports it. It is useful if there are no uncompressed files on the disk anyway or the <a href=\"https://nginx.org/en/docs/http/ngx_http_gunzip_module.html\">ngx_http_gunzip_module</a> is used.</p><p>The files can be compressed using the <code>gzip</code> command, or any other compatible one. It is recommended that the modification date and time of original and compressed files be the same.</p>",
    "module": "ngx_http_gzip_static_module",
    "link": "http/ngx_http_gzip_static_module.html#gzip_static",
    "name": "gzip_static"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>add_header</strong> <code><i>name</i></code> <code><i>value</i></code> [<code>always</code>];</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code>, <code>if in location</code><br></td></tr></tbody></table>",
    "doc": "<p>Adds the specified field to a response header provided that the response code equals 200, 201 (1.3.10), 204, 206, 301, 302, 303, 304, 307 (1.1.16, 1.0.13), or 308 (1.13.0). Parameter value can contain variables.</p><p>There could be several <code>add_header</code> directives. These directives are inherited from the previous configuration level if and only if there are no <code>add_header</code> directives defined on the current level.</p><p>If the <code>always</code> parameter is specified (1.7.5), the header field will be added regardless of the response code.</p>",
    "module": "ngx_http_headers_module",
    "link": "http/ngx_http_headers_module.html#add_header",
    "name": "add_header"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>add_trailer</strong> <code><i>name</i></code> <code><i>value</i></code> [<code>always</code>];</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code>, <code>if in location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.13.2.</p>",
    "doc": "<p>Adds the specified field to the end of a response provided that the response code equals 200, 201, 206, 301, 302, 303, 307, or 308. Parameter value can contain variables.</p><p>There could be several <code>add_trailer</code> directives. These directives are inherited from the previous configuration level if and only if there are no <code>add_trailer</code> directives defined on the current level.</p><p>If the <code>always</code> parameter is specified the specified field will be added regardless of the response code.</p>",
    "module": "ngx_http_headers_module",
    "link": "http/ngx_http_headers_module.html#add_trailer",
    "name": "add_trailer"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>expires</strong> [<code>modified</code>] <code><i>time</i></code>;</code><br><code><strong>expires</strong> <code>epoch</code> | <code>max</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>expires off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code>, <code>if in location</code><br></td></tr></tbody></table>",
    "doc": "<p>Enables or disables adding or modifying the “Expires” and “Cache-Control” response header fields provided that the response code equals 200, 201 (1.3.10), 204, 206, 301, 302, 303, 304, 307 (1.1.16, 1.0.13), or 308 (1.13.0). The parameter can be a positive or negative <a href=\"https://nginx.org/en/docs/syntax.html\">time</a>.</p><p>The time in the “Expires” field is computed as a sum of the current time and <code><i>time</i></code> specified in the directive. If the <code>modified</code> parameter is used (0.7.0, 0.6.32) then the time is computed as a sum of the file’s modification time and the <code><i>time</i></code> specified in the directive.</p><p>In addition, it is possible to specify a time of day using the “<code>@</code>” prefix (0.7.9, 0.6.34):</p><blockquote class=\"example\"><pre>expires @15h30m;\n</pre></blockquote><p>The contents of the “Cache-Control” field depends on the sign of the specified time:</p>",
    "module": "ngx_http_headers_module",
    "link": "http/ngx_http_headers_module.html#expires",
    "name": "expires"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>hls</strong>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Turns on HLS streaming in the surrounding location.</p>",
    "module": "ngx_http_hls_module",
    "link": "http/ngx_http_hls_module.html#hls",
    "name": "hls"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>hls_buffers</strong> <code><i>number</i></code> <code><i>size</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>hls_buffers 8 2m;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets the maximum <code><i>number</i></code> and <code><i>size</i></code> of buffers that are used for reading and writing data frames.</p>",
    "module": "ngx_http_hls_module",
    "link": "http/ngx_http_hls_module.html#hls_buffers",
    "name": "hls_buffers"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>hls_forward_args</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>hls_forward_args off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.5.12.</p>",
    "doc": "<p>Adds arguments from a playlist request to URIs of fragments. This may be useful for performing client authorization at the moment of requesting a fragment, or when protecting an HLS stream with the <a href=\"https://nginx.org/en/docs/http/ngx_http_secure_link_module.html\">ngx_http_secure_link_module</a> module.</p><p>For example, if a client requests a playlist <code>http://example.com/hls/test.mp4.m3u8?a=1&amp;b=2</code>, the arguments <code>a=1</code> and <code>b=2</code> will be added to URIs of fragments after the arguments <code>start</code> and <code>end</code>:</p><blockquote class=\"example\"><pre>#EXTM3U\n#EXT-X-VERSION:3\n#EXT-X-TARGETDURATION:15\n#EXT-X-PLAYLIST-TYPE:VOD\n\n#EXTINF:9.333,\ntest.mp4.ts?start=0.000&amp;end=9.333&amp;a=1&amp;b=2\n#EXTINF:7.167,\ntest.mp4.ts?start=9.333&amp;end=16.500&amp;a=1&amp;b=2\n#EXTINF:5.416,\ntest.mp4.ts?start=16.500&amp;end=21.916&amp;a=1&amp;b=2\n#EXTINF:5.500,\ntest.mp4.ts?start=21.916&amp;end=27.416&amp;a=1&amp;b=2\n#EXTINF:15.167,\ntest.mp4.ts?start=27.416&amp;end=42.583&amp;a=1&amp;b=2\n#EXTINF:9.626,\ntest.mp4.ts?start=42.583&amp;end=52.209&amp;a=1&amp;b=2\n\n#EXT-X-ENDLIST\n</pre></blockquote><p>If an HLS stream is protected with the <a href=\"https://nginx.org/en/docs/http/ngx_http_secure_link_module.html\">ngx_http_secure_link_module</a> module, <code>$uri</code> should not be used in the <a href=\"https://nginx.org/en/docs/http/ngx_http_secure_link_module.html#secure_link_md5\">secure_link_md5</a> expression because this will cause errors when requesting the fragments. <a href=\"https://nginx.org/en/docs/http/ngx_http_map_module.html#map\">Base URI</a> should be used instead of <code>$uri</code> (<code>$hls_uri</code> in the example):</p><blockquote class=\"example\"><pre>http {\n    ...\n\n    map $uri $hls_uri {\n        ~^(?&lt;base_uri&gt;.*).m3u8$ $base_uri;\n        ~^(?&lt;base_uri&gt;.*).ts$   $base_uri;\n        default                 $uri;\n    }\n\n    server {\n        ...\n\n        location /hls/ {\n            hls;\n            hls_forward_args on;\n\n            alias /var/videos/;\n\n            secure_link $arg_md5,$arg_expires;\n            secure_link_md5 \"$secure_link_expires$hls_uri$remote_addr secret\";\n\n            if ($secure_link = \"\") {\n                return 403;\n            }\n\n            if ($secure_link = \"0\") {\n                return 410;\n            }\n        }\n    }\n}\n</pre></blockquote>",
    "module": "ngx_http_hls_module",
    "link": "http/ngx_http_hls_module.html#hls_forward_args",
    "name": "hls_forward_args"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>hls_fragment</strong> <code><i>time</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>hls_fragment 5s;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Defines the default fragment length for playlist URIs requested without the “<code>len</code>” argument.</p>",
    "module": "ngx_http_hls_module",
    "link": "http/ngx_http_hls_module.html#hls_fragment",
    "name": "hls_fragment"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>hls_mp4_buffer_size</strong> <code><i>size</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>hls_mp4_buffer_size 512k;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets the initial <code><i>size</i></code> of the buffer used for processing MP4 and MOV files.</p>",
    "module": "ngx_http_hls_module",
    "link": "http/ngx_http_hls_module.html#hls_mp4_buffer_size",
    "name": "hls_mp4_buffer_size"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>hls_mp4_max_buffer_size</strong> <code><i>size</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>hls_mp4_max_buffer_size 10m;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>During metadata processing, a larger buffer may become necessary. Its size cannot exceed the specified <code><i>size</i></code>, or else nginx will return the server error 500 (Internal Server Error), and log the following message:</p><blockquote class=\"example\"><pre>\"/some/movie/file.mp4\" mp4 moov atom is too large:\n12583268, you may want to increase hls_mp4_max_buffer_size\n</pre></blockquote>",
    "module": "ngx_http_hls_module",
    "link": "http/ngx_http_hls_module.html#hls_mp4_max_buffer_size",
    "name": "hls_mp4_max_buffer_size"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>image_filter</strong> <code>off</code>;</code><br><code><strong>image_filter</strong> <code>test</code>;</code><br><code><strong>image_filter</strong> <code>size</code>;</code><br><code><strong>image_filter</strong> <code>rotate</code> <code>90</code> | <code>180</code> | <code>270</code>;</code><br><code><strong>image_filter</strong> <code>resize</code> <code><i>width</i></code> <code><i>height</i></code>;</code><br><code><strong>image_filter</strong> <code>crop</code> <code><i>width</i></code> <code><i>height</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>image_filter off;</pre></td></tr><tr><th>Context:</th><td><code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets the type of transformation to perform on images:</p><dl class=\"compact\"><dt><code>off</code></dt><dd>turns off module processing in a surrounding location.</dd><dt><code>test</code></dt><dd>ensures that responses are images in either JPEG, GIF, PNG, or WebP format. Otherwise, the 415 (Unsupported Media Type) error is returned.</dd><dt><code>size</code></dt><dd>outputs information about images in a JSON format, e.g.:<blockquote class=\"example\"><pre>{ \"img\" : { \"width\": 100, \"height\": 100, \"type\": \"gif\" } }\n</pre></blockquote>In case of an error, the output is as follows:<blockquote class=\"example\"><pre>{}\n</pre></blockquote></dd><dt><code>rotate</code> <code>90</code>|<code>180</code>|<code>270</code></dt><dd>rotates images counter-clockwise by the specified number of degrees. Parameter value can contain variables. This mode can be used either alone or along with the <code>resize</code> and <code>crop</code> transformations.</dd><dt><code>resize</code> <code><i>width</i></code> <code><i>height</i></code></dt><dd>proportionally reduces an image to the specified sizes. To reduce by only one dimension, another dimension can be specified as “<code>-</code>”. In case of an error, the server will return code 415 (Unsupported Media Type). Parameter values can contain variables. When used along with the <code>rotate</code> parameter, the rotation happens <strong>after</strong> reduction.</dd><dt><code>crop</code> <code><i>width</i></code> <code><i>height</i></code></dt><dd>proportionally reduces an image to the larger side size and crops extraneous edges by another side. To reduce by only one dimension, another dimension can be specified as “<code>-</code>”. In case of an error, the server will return code 415 (Unsupported Media Type). Parameter values can contain variables. When used along with the <code>rotate</code> parameter, the rotation happens <strong>before</strong> reduction.</dd></dl>",
    "module": "ngx_http_image_filter_module",
    "link": "http/ngx_http_image_filter_module.html#image_filter",
    "name": "image_filter"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>image_filter_buffer</strong> <code><i>size</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>image_filter_buffer 1M;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets the maximum size of the buffer used for reading images. When the size is exceeded the server returns error 415 (Unsupported Media Type).</p>",
    "module": "ngx_http_image_filter_module",
    "link": "http/ngx_http_image_filter_module.html#image_filter_buffer",
    "name": "image_filter_buffer"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>image_filter_interlace</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>image_filter_interlace off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.3.15.</p>",
    "doc": "<p>If enabled, final images will be interlaced. For JPEG, final images will be in “progressive JPEG” format.</p>",
    "module": "ngx_http_image_filter_module",
    "link": "http/ngx_http_image_filter_module.html#image_filter_interlace",
    "name": "image_filter_interlace"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>image_filter_jpeg_quality</strong> <code><i>quality</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>image_filter_jpeg_quality 75;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets the desired <code><i>quality</i></code> of the transformed JPEG images. Acceptable values are in the range from 1 to 100. Lesser values usually imply both lower image quality and less data to transfer. The maximum recommended value is 95. Parameter value can contain variables.</p>",
    "module": "ngx_http_image_filter_module",
    "link": "http/ngx_http_image_filter_module.html#image_filter_jpeg_quality",
    "name": "image_filter_jpeg_quality"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>image_filter_sharpen</strong> <code><i>percent</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>image_filter_sharpen 0;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Increases sharpness of the final image. The sharpness percentage can exceed 100. The zero value disables sharpening. Parameter value can contain variables.</p>",
    "module": "ngx_http_image_filter_module",
    "link": "http/ngx_http_image_filter_module.html#image_filter_sharpen",
    "name": "image_filter_sharpen"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>image_filter_transparency</strong> <code>on</code>|<code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>image_filter_transparency on;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Defines whether transparency should be preserved when transforming GIF images or PNG images with colors specified by a palette. The loss of transparency results in images of a better quality. The alpha channel transparency in PNG is always preserved.</p>",
    "module": "ngx_http_image_filter_module",
    "link": "http/ngx_http_image_filter_module.html#image_filter_transparency",
    "name": "image_filter_transparency"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>image_filter_webp_quality</strong> <code><i>quality</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>image_filter_webp_quality 80;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.11.6.</p>",
    "doc": "<p>Sets the desired <code><i>quality</i></code> of the transformed WebP images. Acceptable values are in the range from 1 to 100. Lesser values usually imply both lower image quality and less data to transfer. Parameter value can contain variables.</p>",
    "module": "ngx_http_image_filter_module",
    "link": "http/ngx_http_image_filter_module.html#image_filter_webp_quality",
    "name": "image_filter_webp_quality"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>index</strong> <code><i>file</i></code> ...;</code><br></td></tr><tr><th>Default:</th><td><pre>index index.html;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Defines files that will be used as an index. The <code><i>file</i></code> name can contain variables. Files are checked in the specified order. The last element of the list can be a file with an absolute path. Example:</p><blockquote class=\"example\"><pre>index index.$geo.html index.0.html /index.html;\n</pre></blockquote><p>It should be noted that using an index file causes an internal redirect, and the request can be processed in a different location. For example, with the following configuration:</p><blockquote class=\"example\"><pre>location = / {\n    index index.html;\n}\n\nlocation / {\n    ...\n}\n</pre></blockquote><p>a “<code>/</code>” request will actually be processed in the second location as “<code>/index.html</code>”.</p>",
    "module": "ngx_http_index_module",
    "link": "http/ngx_http_index_module.html#index",
    "name": "index"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>js_body_filter</strong> <code><i>function</i></code> | <code><i>module.function</i></code> [<code><i>buffer_type</i></code>=<code><i>string</i></code> | <code><i>buffer</i></code>];</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>location</code>, <code>if in location</code>, <code>limit_except</code><br></td></tr></tbody></table><p>This directive appeared in version 0.5.2.</p>",
    "doc": "<p>Sets an njs function as a response body filter. The filter function is called for each data chunk of a response body with the following arguments:</p><dl class=\"compact\"><dt><code>r</code></dt><dd>the <a href=\"https://nginx.org/en/docs/njs/reference.html#http\">HTTP request</a> object</dd><dt><code>data</code></dt><dd>the incoming data chunk, may be a string or Buffer depending on the <code>buffer_type</code> value, by default is a string.</dd><dt><code>flags</code></dt><dd>an object with the following properties:<dl class=\"compact\"><dt><code>last</code></dt><dd>a boolean value, true if data is a last buffer.</dd></dl></dd></dl><p>The filter function can pass its own modified version of the input data chunk to the next body filter by calling <a href=\"https://nginx.org/en/docs/njs/reference.html#r_sendbuffer\"><code>r.sendBuffer()</code></a>. For example, to transform all the lowercase letters in the response body:</p><blockquote class=\"example\"><pre>function filter(r, data, flags) {\n    r.sendBuffer(data.toLowerCase(), flags);\n}\n</pre></blockquote><p>To stop filtering (following data chunks will be passed to client without calling <code>js_body_filter</code>), <a href=\"https://nginx.org/en/docs/njs/reference.html#r_done\"><code>r.done()</code></a> can be used.</p><p>If the filter function changes the length of the response body, then it is required to clear out the “Content-Length” response header (if any) in <a href=\"https://nginx.org/en/docs/http/ngx_http_js_module.html#js_header_filter\"><code>js_header_filter</code></a> to enforce chunked transfer encoding.</p><blockquote class=\"note\">As the <code>js_body_filter</code> handler returns its result immediately, it supports only synchronous operations. Thus, asynchronous operations such as <a href=\"https://nginx.org/en/docs/njs/reference.html#r_subrequest\">r.subrequest()</a> or <a href=\"https://nginx.org/en/docs/njs/reference.html#settimeout\">setTimeout()</a> are not supported.</blockquote><blockquote class=\"note\">The directive can be specified inside the <a href=\"https://nginx.org/en/docs/http/ngx_http_rewrite_module.html#if\">if</a> block since <a href=\"https://nginx.org/en/docs/njs/changes.html#njs0.7.7\">0.7.7</a>.</blockquote>",
    "module": "ngx_http_js_module",
    "link": "http/ngx_http_js_module.html#js_body_filter",
    "name": "js_body_filter"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>js_content</strong> <code><i>function</i></code> | <code><i>module.function</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>location</code>, <code>if in location</code>, <code>limit_except</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets an njs function as a location content handler. Since <a href=\"https://nginx.org/en/docs/njs/changes.html#njs0.4.0\">0.4.0</a>, a module function can be referenced.</p><blockquote class=\"note\">The directive can be specified inside the <a href=\"https://nginx.org/en/docs/http/ngx_http_rewrite_module.html#if\">if</a> block since <a href=\"https://nginx.org/en/docs/njs/changes.html#njs0.7.7\">0.7.7</a>.</blockquote>",
    "module": "ngx_http_js_module",
    "link": "http/ngx_http_js_module.html#js_content",
    "name": "js_content"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>js_fetch_buffer_size</strong> <code><i>size</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>js_fetch_buffer_size 16k;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 0.7.4.</p>",
    "doc": "<p>Sets the <code><i>size</i></code> of the buffer used for reading and writing with <a href=\"https://nginx.org/en/docs/njs/reference.html#ngx_fetch\">Fetch API</a>.</p>",
    "module": "ngx_http_js_module",
    "link": "http/ngx_http_js_module.html#js_fetch_buffer_size",
    "name": "js_fetch_buffer_size"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>js_fetch_ciphers</strong> <code><i>ciphers</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>js_fetch_ciphers HIGH:!aNULL:!MD5;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 0.7.0.</p>",
    "doc": "<p>Specifies the enabled ciphers for HTTPS requests with <a href=\"https://nginx.org/en/docs/njs/reference.html#ngx_fetch\">Fetch API</a>. The ciphers are specified in the format understood by the OpenSSL library.</p><p>The full list can be viewed using the “<code>openssl ciphers</code>” command.</p>",
    "module": "ngx_http_js_module",
    "link": "http/ngx_http_js_module.html#js_fetch_ciphers",
    "name": "js_fetch_ciphers"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>js_fetch_max_response_buffer_size</strong> <code><i>size</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>js_fetch_max_response_buffer_size 1m;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 0.7.4.</p>",
    "doc": "<p>Sets the maximum <code><i>size</i></code> of the response received with <a href=\"https://nginx.org/en/docs/njs/reference.html#ngx_fetch\">Fetch API</a>.</p>",
    "module": "ngx_http_js_module",
    "link": "http/ngx_http_js_module.html#js_fetch_max_response_buffer_size",
    "name": "js_fetch_max_response_buffer_size"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>js_fetch_protocols</strong> [<code>TLSv1</code>] [<code>TLSv1.1</code>] [<code>TLSv1.2</code>] [<code>TLSv1.3</code>];</code><br></td></tr><tr><th>Default:</th><td><pre>js_fetch_protocols TLSv1 TLSv1.1 TLSv1.2;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 0.7.0.</p>",
    "doc": "<p>Enables the specified protocols for HTTPS requests with <a href=\"https://nginx.org/en/docs/njs/reference.html#ngx_fetch\">Fetch API</a>.</p>",
    "module": "ngx_http_js_module",
    "link": "http/ngx_http_js_module.html#js_fetch_protocols",
    "name": "js_fetch_protocols"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>js_fetch_timeout</strong> <code><i>time</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>js_fetch_timeout 60s;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 0.7.4.</p>",
    "doc": "<p>Defines a timeout for reading and writing for <a href=\"https://nginx.org/en/docs/njs/reference.html#ngx_fetch\">Fetch API</a>. The timeout is set only between two successive read/write operations, not for the whole response. If no data is transmitted within this time, the connection is closed.</p>",
    "module": "ngx_http_js_module",
    "link": "http/ngx_http_js_module.html#js_fetch_timeout",
    "name": "js_fetch_timeout"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>js_fetch_trusted_certificate</strong> <code><i>file</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 0.7.0.</p>",
    "doc": "<p>Specifies a <code><i>file</i></code> with trusted CA certificates in the PEM format used to <a href=\"https://nginx.org/en/docs/njs/reference.html#fetch_verify\">verify</a> the HTTPS certificate with <a href=\"https://nginx.org/en/docs/njs/reference.html#ngx_fetch\">Fetch API</a>.</p>",
    "module": "ngx_http_js_module",
    "link": "http/ngx_http_js_module.html#js_fetch_trusted_certificate",
    "name": "js_fetch_trusted_certificate"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>js_fetch_verify</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>js_fetch_verify on;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 0.7.4.</p>",
    "doc": "<p>Enables or disables verification of the HTTPS server certificate with <a href=\"https://nginx.org/en/docs/njs/reference.html#ngx_fetch\">Fetch API</a>.</p>",
    "module": "ngx_http_js_module",
    "link": "http/ngx_http_js_module.html#js_fetch_verify",
    "name": "js_fetch_verify"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>js_fetch_verify_depth</strong> <code><i>number</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>js_fetch_verify_depth 100;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 0.7.0.</p>",
    "doc": "<p>Sets the verification depth in the HTTPS server certificates chain with <a href=\"https://nginx.org/en/docs/njs/reference.html#ngx_fetch\">Fetch API</a>.</p>",
    "module": "ngx_http_js_module",
    "link": "http/ngx_http_js_module.html#js_fetch_verify_depth",
    "name": "js_fetch_verify_depth"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>js_header_filter</strong> <code><i>function</i></code> | <code><i>module.function</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>location</code>, <code>if in location</code>, <code>limit_except</code><br></td></tr></tbody></table><p>This directive appeared in version 0.5.1.</p>",
    "doc": "<p>Sets an njs function as a response header filter. The directive allows changing arbitrary header fields of a response header.</p><blockquote class=\"note\">As the <code>js_header_filter</code> handler returns its result immediately, it supports only synchronous operations. Thus, asynchronous operations such as <a href=\"https://nginx.org/en/docs/njs/reference.html#r_subrequest\">r.subrequest()</a> or <a href=\"https://nginx.org/en/docs/njs/reference.html#settimeout\">setTimeout()</a> are not supported.</blockquote><blockquote class=\"note\">The directive can be specified inside the <a href=\"https://nginx.org/en/docs/http/ngx_http_rewrite_module.html#if\">if</a> block since <a href=\"https://nginx.org/en/docs/njs/changes.html#njs0.7.7\">0.7.7</a>.</blockquote>",
    "module": "ngx_http_js_module",
    "link": "http/ngx_http_js_module.html#js_header_filter",
    "name": "js_header_filter"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>js_import</strong> <code><i>module.js</i></code> | <code><i>export_name from module.js</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 0.4.0.</p>",
    "doc": "<p>Imports a module that implements location and variable handlers in njs. The <code>export_name</code> is used as a namespace to access module functions. If the <code>export_name</code> is not specified, the module name will be used as a namespace.</p><blockquote class=\"example\"><pre>js_import http.js;\n</pre></blockquote><p>Here, the module name <code>http</code> is used as a namespace while accessing exports. If the imported module exports <code>foo()</code>, <code>http.foo</code> is used to refer to it.</p><p>Several <code>js_import</code> directives can be specified.</p><blockquote class=\"note\">The directive can be specified on the <code>server</code> and <code>location</code> level since <a href=\"https://nginx.org/en/docs/njs/changes.html#njs0.7.7\">0.7.7</a>.</blockquote>",
    "module": "ngx_http_js_module",
    "link": "http/ngx_http_js_module.html#js_import",
    "name": "js_import"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>js_include</strong> <code><i>file</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code><br></td></tr></tbody></table>",
    "doc": "<p>Specifies a file that implements location and variable handlers in njs:</p><blockquote class=\"example\"><pre>nginx.conf:\njs_include http.js;\nlocation   /version {\n    js_content version;\n}\n\nhttp.js:\nfunction version(r) {\n    r.return(200, njs.version);\n}\n</pre></blockquote><p>The directive was made obsolete in version <a href=\"https://nginx.org/en/docs/njs/changes.html#njs0.4.0\">0.4.0</a> and was removed in version <a href=\"https://nginx.org/en/docs/njs/changes.html#njs0.7.1\">0.7.1</a>. The <a href=\"https://nginx.org/en/docs/http/ngx_http_js_module.html#js_import\">js_import</a> directive should be used instead.</p>",
    "module": "ngx_http_js_module",
    "link": "http/ngx_http_js_module.html#js_include",
    "name": "js_include"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>js_path</strong> <code><i>path</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 0.3.0.</p>",
    "doc": "<p>Sets an additional path for njs modules.</p><blockquote class=\"note\">The directive can be specified on the <code>server</code> and <code>location</code> level since <a href=\"https://nginx.org/en/docs/njs/changes.html#njs0.7.7\">0.7.7</a>.</blockquote>",
    "module": "ngx_http_js_module",
    "link": "http/ngx_http_js_module.html#js_path",
    "name": "js_path"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>js_set</strong> <code><i>$variable</i></code> <code><i>function</i></code> | <code><i>module.function</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets an njs <code>function</code> for the specified <code>variable</code>. Since <a href=\"https://nginx.org/en/docs/njs/changes.html#njs0.4.0\">0.4.0</a>, a module function can be referenced.</p><p>The function is called when the variable is referenced for the first time for a given request. The exact moment depends on a <a href=\"https://nginx.org/en/docs/dev/development_guide.html#http_phases\">phase</a> at which the variable is referenced. This can be used to perform some logic not related to variable evaluation. For example, if the variable is referenced only in the <a href=\"https://nginx.org/en/docs/http/ngx_http_log_module.html#log_format\">log_format</a> directive, its handler will not be executed until the log phase. This handler can be used to do some cleanup right before the request is freed.</p><blockquote class=\"note\">As the <code>js_set</code> handler returns its result immediately, it supports only synchronous operations. Thus, asynchronous operations such as <a href=\"https://nginx.org/en/docs/njs/reference.html#r_subrequest\">r.subrequest()</a> or <a href=\"https://nginx.org/en/docs/njs/reference.html#settimeout\">setTimeout()</a> are not supported.</blockquote><blockquote class=\"note\">The directive can be specified on the <code>server</code> and <code>location</code> level since <a href=\"https://nginx.org/en/docs/njs/changes.html#njs0.7.7\">0.7.7</a>.</blockquote>",
    "module": "ngx_http_js_module",
    "link": "http/ngx_http_js_module.html#js_set",
    "name": "js_set"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>js_var</strong> <code><i>$variable</i></code> [<code><i>value</i></code>];</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 0.5.3.</p>",
    "doc": "<p>Declares a <a href=\"https://nginx.org/en/docs/njs/reference.html#r_variables\">writable</a> variable. The value can contain text, variables, and their combination. The variable is not overwritten after a redirect unlike variables created with the <a href=\"https://nginx.org/en/docs/http/ngx_http_rewrite_module.html#set\">set</a> directive.</p><blockquote class=\"note\">The directive can be specified on the <code>server</code> and <code>location</code> level since <a href=\"https://nginx.org/en/docs/njs/changes.html#njs0.7.7\">0.7.7</a>.</blockquote>",
    "module": "ngx_http_js_module",
    "link": "http/ngx_http_js_module.html#js_var",
    "name": "js_var"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>keyval</strong> <code><i>key</i></code> <code><i>$variable</i></code> <code>zone</code>=<code><i>name</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code><br></td></tr></tbody></table>",
    "doc": "<p>Creates a new <code><i>$variable</i></code> whose value is looked up by the <code><i>key</i></code> in the key-value database. Matching rules are defined by the <a href=\"https://nginx.org/en/docs/http/ngx_http_keyval_module.html#keyval_type\"><code>type</code></a> parameter of the <a href=\"https://nginx.org/en/docs/http/ngx_http_keyval_module.html#keyval_zone\"><code>keyval_zone</code></a> directive. The database is stored in a shared memory zone specified by the <code>zone</code> parameter.</p>",
    "module": "ngx_http_keyval_module",
    "link": "http/ngx_http_keyval_module.html#keyval",
    "name": "keyval"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>keyval_zone</strong> <code>zone</code>=<code><i>name</i></code>:<code><i>size</i></code> [<code>state</code>=<code><i>file</i></code>] [<code>timeout</code>=<code><i>time</i></code>] [<code>type</code>=<code>string</code>|<code>ip</code>|<code>prefix</code>] [<code>sync</code>];</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets the <code><i>name</i></code> and <code><i>size</i></code> of the shared memory zone that keeps the key-value database. Key-value pairs are managed by the <a href=\"https://nginx.org/en/docs/http/ngx_http_api_module.html#http_keyvals_\">API</a>.</p>",
    "module": "ngx_http_keyval_module",
    "link": "http/ngx_http_keyval_module.html#keyval_zone",
    "name": "keyval_zone"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>limit_conn</strong> <code><i>zone</i></code> <code><i>number</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets the shared memory zone and the maximum allowed number of connections for a given key value. When this limit is exceeded, the server will return the <a href=\"https://nginx.org/en/docs/http/ngx_http_limit_conn_module.html#limit_conn_status\">error</a> in reply to a request. For example, the directives</p><blockquote class=\"example\"><pre>limit_conn_zone $binary_remote_addr zone=addr:10m;\n\nserver {\n    location /download/ {\n        limit_conn addr 1;\n    }\n</pre></blockquote><p>allow only one connection per an IP address at a time.</p><blockquote class=\"note\">In HTTP/2 and SPDY, each concurrent request is considered a separate connection.</blockquote><p>There could be several <code>limit_conn</code> directives. For example, the following configuration will limit the number of connections to the server per a client IP and, at the same time, the total number of connections to the virtual server:</p><blockquote class=\"example\"><pre>limit_conn_zone $binary_remote_addr zone=perip:10m;\nlimit_conn_zone $server_name zone=perserver:10m;\n\nserver {\n    ...\n    limit_conn perip 10;\n    limit_conn perserver 100;\n}\n</pre></blockquote><p>These directives are inherited from the previous configuration level if and only if there are no <code>limit_conn</code> directives defined on the current level.</p>",
    "module": "ngx_http_limit_conn_module",
    "link": "http/ngx_http_limit_conn_module.html#limit_conn",
    "name": "limit_conn"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>limit_conn_dry_run</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>limit_conn_dry_run off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.17.6.</p>",
    "doc": "<p>Enables the dry run mode. In this mode, the number of connections is not limited, however, in the shared memory zone, the number of excessive connections is accounted as usual.</p>",
    "module": "ngx_http_limit_conn_module",
    "link": "http/ngx_http_limit_conn_module.html#limit_conn_dry_run",
    "name": "limit_conn_dry_run"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>limit_conn_log_level</strong> <code>info</code> | <code>notice</code> | <code>warn</code> | <code>error</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>limit_conn_log_level error;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 0.8.18.</p>",
    "doc": "<p>Sets the desired logging level for cases when the server limits the number of connections.</p>",
    "module": "ngx_http_limit_conn_module",
    "link": "http/ngx_http_limit_conn_module.html#limit_conn_log_level",
    "name": "limit_conn_log_level"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>limit_conn_status</strong> <code><i>code</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>limit_conn_status 503;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.3.15.</p>",
    "doc": "<p>Sets the status code to return in response to rejected requests.</p>",
    "module": "ngx_http_limit_conn_module",
    "link": "http/ngx_http_limit_conn_module.html#limit_conn_status",
    "name": "limit_conn_status"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>limit_conn_zone</strong> <code><i>key</i></code> <code>zone</code>=<code><i>name</i></code>:<code><i>size</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets parameters for a shared memory zone that will keep states for various keys. In particular, the state includes the current number of connections. The <code><i>key</i></code> can contain text, variables, and their combination. Requests with an empty key value are not accounted.</p><blockquote class=\"note\">Prior to version 1.7.6, a <code><i>key</i></code> could contain exactly one variable.</blockquote><p>Usage example:</p><blockquote class=\"example\"><pre>limit_conn_zone $binary_remote_addr zone=addr:10m;\n</pre></blockquote><p>Here, a client IP address serves as a key. Note that instead of <code>$remote_addr</code>, the <code>$binary_remote_addr</code> variable is used here. The <code>$remote_addr</code> variable’s size can vary from 7 to 15 bytes. The stored state occupies either 32 or 64 bytes of memory on 32-bit platforms and always 64 bytes on 64-bit platforms. The <code>$binary_remote_addr</code> variable’s size is always 4 bytes for IPv4 addresses or 16 bytes for IPv6 addresses. The stored state always occupies 32 or 64 bytes on 32-bit platforms and 64 bytes on 64-bit platforms. One megabyte zone can keep about 32 thousand 32-byte states or about 16 thousand 64-byte states. If the zone storage is exhausted, the server will return the <a href=\"https://nginx.org/en/docs/http/ngx_http_limit_conn_module.html#limit_conn_status\">error</a> to all further requests.</p><blockquote class=\"note\">Additionally, as part of our <a href=\"http://nginx.com/products/\">commercial subscription</a>, the <a href=\"https://nginx.org/en/docs/http/ngx_http_api_module.html#http_limit_conns_\">status information</a> for each such shared memory zone can be <a href=\"https://nginx.org/en/docs/http/ngx_http_api_module.html#getHttpLimitConnZone\">obtained</a> or <a href=\"https://nginx.org/en/docs/http/ngx_http_api_module.html#deleteHttpLimitConnZoneStat\">reset</a> with the <a href=\"https://nginx.org/en/docs/http/ngx_http_api_module.html\">API</a> since 1.17.7.</blockquote>",
    "module": "ngx_http_limit_conn_module",
    "link": "http/ngx_http_limit_conn_module.html#limit_conn_zone",
    "name": "limit_conn_zone"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>limit_zone</strong> <code><i>name</i></code> <code><i>$variable</i></code> <code><i>size</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code><br></td></tr></tbody></table>",
    "doc": "<p>This directive was made obsolete in version 1.1.8 and was removed in version 1.7.6. An equivalent <a href=\"https://nginx.org/en/docs/http/ngx_http_limit_conn_module.html#limit_conn_zone\">limit_conn_zone</a> directive with a changed syntax should be used instead:</p><blockquote class=\"note\"><code>limit_conn_zone</code> <code><i>$variable</i></code> <code>zone</code>=<code><i>name</i></code>:<code><i>size</i></code>;</blockquote>",
    "module": "ngx_http_limit_conn_module",
    "link": "http/ngx_http_limit_conn_module.html#limit_zone",
    "name": "limit_zone"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>limit_req</strong> <code>zone</code>=<code><i>name</i></code> [<code>burst</code>=<code><i>number</i></code>] [<code>nodelay</code> | <code>delay</code>=<code><i>number</i></code>];</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets the shared memory zone and the maximum burst size of requests. If the requests rate exceeds the rate configured for a zone, their processing is delayed such that requests are processed at a defined rate. Excessive requests are delayed until their number exceeds the maximum burst size in which case the request is terminated with an <a href=\"https://nginx.org/en/docs/http/ngx_http_limit_req_module.html#limit_req_status\">error</a>. By default, the maximum burst size is equal to zero. For example, the directives</p><blockquote class=\"example\"><pre>limit_req_zone $binary_remote_addr zone=one:10m rate=1r/s;\n\nserver {\n    location /search/ {\n        limit_req zone=one burst=5;\n    }\n</pre></blockquote><p>allow not more than 1 request per second at an average, with bursts not exceeding 5 requests.</p><p>If delaying of excessive requests while requests are being limited is not desired, the parameter <code>nodelay</code> should be used:</p><blockquote class=\"example\"><pre>limit_req zone=one burst=5 nodelay;\n</pre></blockquote>",
    "module": "ngx_http_limit_req_module",
    "link": "http/ngx_http_limit_req_module.html#limit_req",
    "name": "limit_req"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>limit_req_dry_run</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>limit_req_dry_run off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.17.1.</p>",
    "doc": "<p>Enables the dry run mode. In this mode, requests processing rate is not limited, however, in the shared memory zone, the number of excessive requests is accounted as usual.</p>",
    "module": "ngx_http_limit_req_module",
    "link": "http/ngx_http_limit_req_module.html#limit_req_dry_run",
    "name": "limit_req_dry_run"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>limit_req_log_level</strong> <code>info</code> | <code>notice</code> | <code>warn</code> | <code>error</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>limit_req_log_level error;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 0.8.18.</p>",
    "doc": "<p>Sets the desired logging level for cases when the server refuses to process requests due to rate exceeding, or delays request processing. Logging level for delays is one point less than for refusals; for example, if “<code>limit_req_log_level notice</code>” is specified, delays are logged with the <code>info</code> level.</p>",
    "module": "ngx_http_limit_req_module",
    "link": "http/ngx_http_limit_req_module.html#limit_req_log_level",
    "name": "limit_req_log_level"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>limit_req_status</strong> <code><i>code</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>limit_req_status 503;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.3.15.</p>",
    "doc": "<p>Sets the status code to return in response to rejected requests.</p>",
    "module": "ngx_http_limit_req_module",
    "link": "http/ngx_http_limit_req_module.html#limit_req_status",
    "name": "limit_req_status"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>limit_req_zone</strong> <code><i>key</i></code> <code>zone</code>=<code><i>name</i></code>:<code><i>size</i></code> <code>rate</code>=<code><i>rate</i></code> [<code>sync</code>];</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets parameters for a shared memory zone that will keep states for various keys. In particular, the state stores the current number of excessive requests. The <code><i>key</i></code> can contain text, variables, and their combination. Requests with an empty key value are not accounted.</p><blockquote class=\"note\">Prior to version 1.7.6, a <code><i>key</i></code> could contain exactly one variable.</blockquote><p>Usage example:</p><blockquote class=\"example\"><pre>limit_req_zone $binary_remote_addr zone=one:10m rate=1r/s;\n</pre></blockquote><p>Here, the states are kept in a 10 megabyte zone “one”, and an average request processing rate for this zone cannot exceed 1 request per second.</p><p>A client IP address serves as a key. Note that instead of <code>$remote_addr</code>, the <code>$binary_remote_addr</code> variable is used here. The <code>$binary_remote_addr</code> variable’s size is always 4 bytes for IPv4 addresses or 16 bytes for IPv6 addresses. The stored state always occupies 64 bytes on 32-bit platforms and 128 bytes on 64-bit platforms. One megabyte zone can keep about 16 thousand 64-byte states or about 8 thousand 128-byte states.</p><p>If the zone storage is exhausted, the least recently used state is removed. If even after that a new state cannot be created, the request is terminated with an <a href=\"https://nginx.org/en/docs/http/ngx_http_limit_req_module.html#limit_req_status\">error</a>.</p><p>The rate is specified in requests per second (r/s). If a rate of less than one request per second is desired, it is specified in request per minute (r/m). For example, half-request per second is 30r/m.</p>",
    "module": "ngx_http_limit_req_module",
    "link": "http/ngx_http_limit_req_module.html#limit_req_zone",
    "name": "limit_req_zone"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>access_log</strong> <code><i>path</i></code> [<code><i>format</i></code> [<code>buffer</code>=<code><i>size</i></code>] [<code>gzip[=<code><i>level</i></code>]</code>] [<code>flush</code>=<code><i>time</i></code>] [<code>if</code>=<code><i>condition</i></code>]];</code><br><code><strong>access_log</strong> <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>access_log logs/access.log combined;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code>, <code>if in location</code>, <code>limit_except</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets the path, format, and configuration for a buffered log write. Several logs can be specified on the same configuration level. Logging to <a href=\"https://nginx.org/en/docs/syslog.html\">syslog</a> can be configured by specifying the “<code>syslog:</code>” prefix in the first parameter. The special value <code>off</code> cancels all <code>access_log</code> directives on the current level. If the format is not specified then the predefined “<code>combined</code>” format is used.</p><p>If either the <code>buffer</code> or <code>gzip</code> (1.3.10, 1.2.7) parameter is used, writes to log will be buffered.</p><blockquote class=\"note\">The buffer size must not exceed the size of an atomic write to a disk file. For FreeBSD this size is unlimited.</blockquote><p>When buffering is enabled, the data will be written to the file:</p>",
    "module": "ngx_http_log_module",
    "link": "http/ngx_http_log_module.html#access_log",
    "name": "access_log"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>log_format</strong> <code><i>name</i></code> [<code>escape</code>=<code>default</code>|<code>json</code>|<code>none</code>] <code><i>string</i></code> ...;</code><br></td></tr><tr><th>Default:</th><td><pre>log_format combined \"...\";</pre></td></tr><tr><th>Context:</th><td><code>http</code><br></td></tr></tbody></table>",
    "doc": "<p>Specifies log format.</p>",
    "module": "ngx_http_log_module",
    "link": "http/ngx_http_log_module.html#log_format",
    "name": "log_format"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>open_log_file_cache</strong> <code>max</code>=<code><i>N</i></code> [<code>inactive</code>=<code><i>time</i></code>] [<code>min_uses</code>=<code><i>N</i></code>] [<code>valid</code>=<code><i>time</i></code>];</code><br><code><strong>open_log_file_cache</strong> <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>open_log_file_cache off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Defines a cache that stores the file descriptors of frequently used logs whose names contain variables. The directive has the following parameters:</p><dl class=\"compact\"><dt><code>max</code></dt><dd>sets the maximum number of descriptors in a cache; if the cache becomes full the least recently used (LRU) descriptors are closed</dd><dt><code>inactive</code></dt><dd>sets the time after which the cached descriptor is closed if there were no access during this time; by default, 10 seconds</dd><dt><code>min_uses</code></dt><dd>sets the minimum number of file uses during the time defined by the <code>inactive</code> parameter to let the descriptor stay open in a cache; by default, 1</dd><dt><code>valid</code></dt><dd>sets the time after which it should be checked that the file still exists with the same name; by default, 60 seconds</dd><dt><code>off</code></dt><dd>disables caching</dd></dl><p>Usage example:</p><blockquote class=\"example\"><pre>open_log_file_cache max=1000 inactive=20s valid=1m min_uses=2;\n</pre></blockquote>",
    "module": "ngx_http_log_module",
    "link": "http/ngx_http_log_module.html#open_log_file_cache",
    "name": "open_log_file_cache"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>map</strong> <code><i>string</i></code> <code><i>$variable</i></code> { ... }</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code><br></td></tr></tbody></table>",
    "doc": "<p>Creates a new variable whose value depends on values of one or more of the source variables specified in the first parameter.</p><blockquote class=\"note\">Before version 0.9.0 only a single variable could be specified in the first parameter.</blockquote><blockquote class=\"note\">Since variables are evaluated only when they are used, the mere declaration even of a large number of “<code>map</code>” variables does not add any extra costs to request processing.</blockquote><p>Parameters inside the <code>map</code> block specify a mapping between source and resulting values.</p><p>Source values are specified as strings or regular expressions (0.9.6).</p><p>Strings are matched ignoring the case.</p><p>A regular expression should either start from the “<code>~</code>” symbol for a case-sensitive matching, or from the “<code>~*</code>” symbols (1.0.4) for case-insensitive matching. A regular expression can contain named and positional captures that can later be used in other directives along with the resulting variable.</p><p>If a source value matches one of the names of special parameters described below, it should be prefixed with the “<code>\\</code>” symbol.</p><p>The resulting value can contain text, variable (0.9.0), and their combination (1.11.0).</p><p>The following special parameters are also supported:</p><dl class=\"compact\"><dt><code>default</code> <code><i>value</i></code></dt><dd>sets the resulting value if the source value matches none of the specified variants. When <code>default</code> is not specified, the default resulting value will be an empty string.</dd><dt><code>hostnames</code></dt><dd>indicates that source values can be hostnames with a prefix or suffix mask:<blockquote class=\"example\"><pre>*.example.com 1;\nexample.*     1;\n</pre></blockquote>The following two records<blockquote class=\"example\"><pre>example.com   1;\n*.example.com 1;\n</pre></blockquote>can be combined:<blockquote class=\"example\"><pre>.example.com  1;\n</pre></blockquote>This parameter should be specified before the list of values.</dd><dt><code>include</code> <code><i>file</i></code></dt><dd>includes a file with values. There can be several inclusions.</dd><dt id=\"volatile\"><code>volatile</code></dt><dd>indicates that the variable is not cacheable (1.11.7).</dd></dl><p>If the source value matches more than one of the specified variants, e.g. both a mask and a regular expression match, the first matching variant will be chosen, in the following order of priority:</p>",
    "module": "ngx_http_map_module",
    "link": "http/ngx_http_map_module.html#map",
    "name": "map"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>map_hash_bucket_size</strong> <code><i>size</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>map_hash_bucket_size 32|64|128;</pre></td></tr><tr><th>Context:</th><td><code>http</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets the bucket size for the <a href=\"https://nginx.org/en/docs/http/ngx_http_map_module.html#map\">map</a> variables hash tables. Default value depends on the processor’s cache line size. The details of setting up hash tables are provided in a separate <a href=\"https://nginx.org/en/docs/hash.html\">document</a>.</p>",
    "module": "ngx_http_map_module",
    "link": "http/ngx_http_map_module.html#map_hash_bucket_size",
    "name": "map_hash_bucket_size"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>map_hash_max_size</strong> <code><i>size</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>map_hash_max_size 2048;</pre></td></tr><tr><th>Context:</th><td><code>http</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets the maximum <code><i>size</i></code> of the <a href=\"https://nginx.org/en/docs/http/ngx_http_map_module.html#map\">map</a> variables hash tables. The details of setting up hash tables are provided in a separate <a href=\"https://nginx.org/en/docs/hash.html\">document</a>.</p>",
    "module": "ngx_http_map_module",
    "link": "http/ngx_http_map_module.html#map_hash_max_size",
    "name": "map_hash_max_size"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>memcached_bind</strong> <code><i>address</i></code> [<code>transparent</code>] | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 0.8.22.</p>",
    "doc": "<p>Makes outgoing connections to a memcached server originate from the specified local IP address with an optional port (1.11.2). Parameter value can contain variables (1.3.12). The special value <code>off</code> (1.3.12) cancels the effect of the <code>memcached_bind</code> directive inherited from the previous configuration level, which allows the system to auto-assign the local IP address and port.</p>",
    "module": "ngx_http_memcached_module",
    "link": "http/ngx_http_memcached_module.html#memcached_bind",
    "name": "memcached_bind"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>memcached_buffer_size</strong> <code><i>size</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>memcached_buffer_size 4k|8k;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets the <code><i>size</i></code> of the buffer used for reading the response received from the memcached server. The response is passed to the client synchronously, as soon as it is received.</p>",
    "module": "ngx_http_memcached_module",
    "link": "http/ngx_http_memcached_module.html#memcached_buffer_size",
    "name": "memcached_buffer_size"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>memcached_connect_timeout</strong> <code><i>time</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>memcached_connect_timeout 60s;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Defines a timeout for establishing a connection with a memcached server. It should be noted that this timeout cannot usually exceed 75 seconds.</p>",
    "module": "ngx_http_memcached_module",
    "link": "http/ngx_http_memcached_module.html#memcached_connect_timeout",
    "name": "memcached_connect_timeout"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>memcached_gzip_flag</strong> <code><i>flag</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.3.6.</p>",
    "doc": "<p>Enables the test for the <code><i>flag</i></code> presence in the memcached server response and sets the “<code>Content-Encoding</code>” response header field to “<code>gzip</code>” if the flag is set.</p>",
    "module": "ngx_http_memcached_module",
    "link": "http/ngx_http_memcached_module.html#memcached_gzip_flag",
    "name": "memcached_gzip_flag"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>memcached_next_upstream</strong> <code>error</code> | <code>timeout</code> | <code>invalid_response</code> | <code>not_found</code> | <code>off</code> ...;</code><br></td></tr><tr><th>Default:</th><td><pre>memcached_next_upstream error timeout;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Specifies in which cases a request should be passed to the next server:</p><dl class=\"compact\"><dt><code>error</code></dt><dd>an error occurred while establishing a connection with the server, passing a request to it, or reading the response header;</dd><dt><code>timeout</code></dt><dd>a timeout has occurred while establishing a connection with the server, passing a request to it, or reading the response header;</dd><dt><code>invalid_response</code></dt><dd>a server returned an empty or invalid response;</dd><dt><code>not_found</code></dt><dd>a response was not found on the server;</dd><dt><code>off</code></dt><dd>disables passing a request to the next server.</dd></dl><p>One should bear in mind that passing a request to the next server is only possible if nothing has been sent to a client yet. That is, if an error or timeout occurs in the middle of the transferring of a response, fixing this is impossible.</p><p>The directive also defines what is considered an <a href=\"https://nginx.org/en/docs/http/ngx_http_upstream_module.html#max_fails\">unsuccessful attempt</a> of communication with a server. The cases of <code>error</code>, <code>timeout</code> and <code>invalid_response</code> are always considered unsuccessful attempts, even if they are not specified in the directive. The case of <code>not_found</code> is never considered an unsuccessful attempt.</p><p>Passing a request to the next server can be limited by <a href=\"https://nginx.org/en/docs/http/ngx_http_memcached_module.html#memcached_next_upstream_tries\">the number of tries</a> and by <a href=\"https://nginx.org/en/docs/http/ngx_http_memcached_module.html#memcached_next_upstream_timeout\">time</a>.</p>",
    "module": "ngx_http_memcached_module",
    "link": "http/ngx_http_memcached_module.html#memcached_next_upstream",
    "name": "memcached_next_upstream"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>memcached_next_upstream_timeout</strong> <code><i>time</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>memcached_next_upstream_timeout 0;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.7.5.</p>",
    "doc": "<p>Limits the time during which a request can be passed to the <a href=\"https://nginx.org/en/docs/http/ngx_http_memcached_module.html#memcached_next_upstream\">next server</a>. The <code>0</code> value turns off this limitation.</p>",
    "module": "ngx_http_memcached_module",
    "link": "http/ngx_http_memcached_module.html#memcached_next_upstream_timeout",
    "name": "memcached_next_upstream_timeout"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>memcached_next_upstream_tries</strong> <code><i>number</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>memcached_next_upstream_tries 0;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.7.5.</p>",
    "doc": "<p>Limits the number of possible tries for passing a request to the <a href=\"https://nginx.org/en/docs/http/ngx_http_memcached_module.html#memcached_next_upstream\">next server</a>. The <code>0</code> value turns off this limitation.</p>",
    "module": "ngx_http_memcached_module",
    "link": "http/ngx_http_memcached_module.html#memcached_next_upstream_tries",
    "name": "memcached_next_upstream_tries"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>memcached_pass</strong> <code><i>address</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>location</code>, <code>if in location</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets the memcached server address. The address can be specified as a domain name or IP address, and a port:</p><blockquote class=\"example\"><pre>memcached_pass localhost:11211;\n</pre></blockquote><p>or as a UNIX-domain socket path:</p><blockquote class=\"example\"><pre>memcached_pass unix:/tmp/memcached.socket;\n</pre></blockquote><p>If a domain name resolves to several addresses, all of them will be used in a round-robin fashion. In addition, an address can be specified as a <a href=\"https://nginx.org/en/docs/http/ngx_http_upstream_module.html\">server group</a>.</p>",
    "module": "ngx_http_memcached_module",
    "link": "http/ngx_http_memcached_module.html#memcached_pass",
    "name": "memcached_pass"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>memcached_read_timeout</strong> <code><i>time</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>memcached_read_timeout 60s;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Defines a timeout for reading a response from the memcached server. The timeout is set only between two successive read operations, not for the transmission of the whole response. If the memcached server does not transmit anything within this time, the connection is closed.</p>",
    "module": "ngx_http_memcached_module",
    "link": "http/ngx_http_memcached_module.html#memcached_read_timeout",
    "name": "memcached_read_timeout"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>memcached_send_timeout</strong> <code><i>time</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>memcached_send_timeout 60s;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets a timeout for transmitting a request to the memcached server. The timeout is set only between two successive write operations, not for the transmission of the whole request. If the memcached server does not receive anything within this time, the connection is closed.</p>",
    "module": "ngx_http_memcached_module",
    "link": "http/ngx_http_memcached_module.html#memcached_send_timeout",
    "name": "memcached_send_timeout"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>memcached_socket_keepalive</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>memcached_socket_keepalive off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.15.6.</p>",
    "doc": "<p>Configures the “TCP keepalive” behavior for outgoing connections to a memcached server. By default, the operating system’s settings are in effect for the socket. If the directive is set to the value “<code>on</code>”, the <code>SO_KEEPALIVE</code> socket option is turned on for the socket.</p>",
    "module": "ngx_http_memcached_module",
    "link": "http/ngx_http_memcached_module.html#memcached_socket_keepalive",
    "name": "memcached_socket_keepalive"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>mirror</strong> <code><i>uri</i></code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>mirror off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets the URI to which an original request will be mirrored. Several mirrors can be specified on the same configuration level.</p>",
    "module": "ngx_http_mirror_module",
    "link": "http/ngx_http_mirror_module.html#mirror",
    "name": "mirror"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>mirror_request_body</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>mirror_request_body on;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Indicates whether the client request body is mirrored. When enabled, the client request body will be read prior to creating mirror subrequests. In this case, unbuffered client request body proxying set by the <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_request_buffering\">proxy_request_buffering</a>, <a href=\"https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_request_buffering\">fastcgi_request_buffering</a>, <a href=\"https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_request_buffering\">scgi_request_buffering</a>, and <a href=\"https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_request_buffering\">uwsgi_request_buffering</a> directives will be disabled.</p><blockquote class=\"example\"><pre>location / {\n    mirror /mirror;\n    mirror_request_body off;\n    proxy_pass http://backend;\n}\n\nlocation = /mirror {\n    internal;\n    proxy_pass http://log_backend;\n    proxy_pass_request_body off;\n    proxy_set_header Content-Length \"\";\n    proxy_set_header X-Original-URI $request_uri;\n}\n</pre></blockquote>",
    "module": "ngx_http_mirror_module",
    "link": "http/ngx_http_mirror_module.html#mirror_request_body",
    "name": "mirror_request_body"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>mp4</strong>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Turns on module processing in a surrounding location.</p>",
    "module": "ngx_http_mp4_module",
    "link": "http/ngx_http_mp4_module.html#mp4",
    "name": "mp4"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>mp4_buffer_size</strong> <code><i>size</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>mp4_buffer_size 512K;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets the initial <code><i>size</i></code> of the buffer used for processing MP4 files.</p>",
    "module": "ngx_http_mp4_module",
    "link": "http/ngx_http_mp4_module.html#mp4_buffer_size",
    "name": "mp4_buffer_size"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>mp4_max_buffer_size</strong> <code><i>size</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>mp4_max_buffer_size 10M;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>During metadata processing, a larger buffer may become necessary. Its size cannot exceed the specified <code><i>size</i></code>, or else nginx will return the 500 (Internal Server Error) server error, and log the following message:</p><blockquote class=\"example\"><pre>\"/some/movie/file.mp4\" mp4 moov atom is too large:\n12583268, you may want to increase mp4_max_buffer_size\n</pre></blockquote>",
    "module": "ngx_http_mp4_module",
    "link": "http/ngx_http_mp4_module.html#mp4_max_buffer_size",
    "name": "mp4_max_buffer_size"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>mp4_limit_rate</strong> <code>on</code> | <code>off</code> | <code><i>factor</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>mp4_limit_rate off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Limits the rate of response transmission to a client. The rate is limited based on the average bitrate of the MP4 file served. To calculate the rate, the bitrate is multiplied by the specified <code><i>factor</i></code>. The special value “<code>on</code>” corresponds to the factor of 1.1. The special value “<code>off</code>” disables rate limiting. The limit is set per a request, and so if a client simultaneously opens two connections, the overall rate will be twice as much as the specified limit.</p><blockquote class=\"note\">This directive is available as part of our <a href=\"http://nginx.com/products/\">commercial subscription</a>.</blockquote>",
    "module": "ngx_http_mp4_module",
    "link": "http/ngx_http_mp4_module.html#mp4_limit_rate",
    "name": "mp4_limit_rate"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>mp4_limit_rate_after</strong> <code><i>time</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>mp4_limit_rate_after 60s;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets the initial amount of media data (measured in playback time) after which the further transmission of the response to a client will be rate limited.</p><blockquote class=\"note\">This directive is available as part of our <a href=\"http://nginx.com/products/\">commercial subscription</a>.</blockquote>",
    "module": "ngx_http_mp4_module",
    "link": "http/ngx_http_mp4_module.html#mp4_limit_rate_after",
    "name": "mp4_limit_rate_after"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>mp4_start_key_frame</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>mp4_start_key_frame off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.21.4.</p>",
    "doc": "<p>Forces output video to always start with a key video frame. If the <code>start</code> argument does not point to a key frame, initial frames are hidden using an mp4 edit list. Edit lists are supported by major players and browsers such as Chrome, Safari, QuickTime and ffmpeg, partially supported by Firefox.</p>",
    "module": "ngx_http_mp4_module",
    "link": "http/ngx_http_mp4_module.html#mp4_start_key_frame",
    "name": "mp4_start_key_frame"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>perl</strong> <code><i>module</i></code>::<code><i>function</i></code>|'sub { ... }';</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>location</code>, <code>limit_except</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets a Perl handler for the given location.</p>",
    "module": "ngx_http_perl_module",
    "link": "http/ngx_http_perl_module.html#perl",
    "name": "perl"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>perl_modules</strong> <code><i>path</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets an additional path for Perl modules.</p>",
    "module": "ngx_http_perl_module",
    "link": "http/ngx_http_perl_module.html#perl_modules",
    "name": "perl_modules"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>perl_require</strong> <code><i>module</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code><br></td></tr></tbody></table>",
    "doc": "<p>Defines the name of a module that will be loaded during each reconfiguration. Several <code>perl_require</code> directives can be present.</p>",
    "module": "ngx_http_perl_module",
    "link": "http/ngx_http_perl_module.html#perl_require",
    "name": "perl_require"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>perl_set</strong> <code><i>$variable</i></code> <code><i>module</i></code>::<code><i>function</i></code>|'sub { ... }';</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code><br></td></tr></tbody></table>",
    "doc": "<p>Installs a Perl handler for the specified variable.</p>",
    "module": "ngx_http_perl_module",
    "link": "http/ngx_http_perl_module.html#perl_set",
    "name": "perl_set"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_bind</strong> <code><i>address</i></code> [<code>transparent</code>] | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 0.8.22.</p>",
    "doc": "<p>Makes outgoing connections to a proxied server originate from the specified local IP address with an optional port (1.11.2). Parameter value can contain variables (1.3.12). The special value <code>off</code> (1.3.12) cancels the effect of the <code>proxy_bind</code> directive inherited from the previous configuration level, which allows the system to auto-assign the local IP address and port.</p>",
    "module": "ngx_http_proxy_module",
    "link": "http/ngx_http_proxy_module.html#proxy_bind",
    "name": "proxy_bind"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_buffer_size</strong> <code><i>size</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>proxy_buffer_size 4k|8k;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets the <code><i>size</i></code> of the buffer used for reading the first part of the response received from the proxied server. This part usually contains a small response header. By default, the buffer size is equal to one memory page. This is either 4K or 8K, depending on a platform. It can be made smaller, however.</p>",
    "module": "ngx_http_proxy_module",
    "link": "http/ngx_http_proxy_module.html#proxy_buffer_size",
    "name": "proxy_buffer_size"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_buffering</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>proxy_buffering on;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Enables or disables buffering of responses from the proxied server.</p><p>When buffering is enabled, nginx receives a response from the proxied server as soon as possible, saving it into the buffers set by the <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_buffer_size\">proxy_buffer_size</a> and <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_buffers\">proxy_buffers</a> directives. If the whole response does not fit into memory, a part of it can be saved to a <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_temp_path\">temporary file</a> on the disk. Writing to temporary files is controlled by the <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_max_temp_file_size\">proxy_max_temp_file_size</a> and <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_temp_file_write_size\">proxy_temp_file_write_size</a> directives.</p><p>When buffering is disabled, the response is passed to a client synchronously, immediately as it is received. nginx will not try to read the whole response from the proxied server. The maximum size of the data that nginx can receive from the server at a time is set by the <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_buffer_size\">proxy_buffer_size</a> directive.</p><p>Buffering can also be enabled or disabled by passing “<code>yes</code>” or “<code>no</code>” in the “X-Accel-Buffering” response header field. This capability can be disabled using the <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_ignore_headers\">proxy_ignore_headers</a> directive.</p>",
    "module": "ngx_http_proxy_module",
    "link": "http/ngx_http_proxy_module.html#proxy_buffering",
    "name": "proxy_buffering"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_buffers</strong> <code><i>number</i></code> <code><i>size</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>proxy_buffers 8 4k|8k;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets the <code><i>number</i></code> and <code><i>size</i></code> of the buffers used for reading a response from the proxied server, for a single connection. By default, the buffer size is equal to one memory page. This is either 4K or 8K, depending on a platform.</p>",
    "module": "ngx_http_proxy_module",
    "link": "http/ngx_http_proxy_module.html#proxy_buffers",
    "name": "proxy_buffers"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_busy_buffers_size</strong> <code><i>size</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>proxy_busy_buffers_size 8k|16k;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>When <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_buffering\">buffering</a> of responses from the proxied server is enabled, limits the total <code><i>size</i></code> of buffers that can be busy sending a response to the client while the response is not yet fully read. In the meantime, the rest of the buffers can be used for reading the response and, if needed, buffering part of the response to a temporary file. By default, <code><i>size</i></code> is limited by the size of two buffers set by the <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_buffer_size\">proxy_buffer_size</a> and <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_buffers\">proxy_buffers</a> directives.</p>",
    "module": "ngx_http_proxy_module",
    "link": "http/ngx_http_proxy_module.html#proxy_busy_buffers_size",
    "name": "proxy_busy_buffers_size"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_cache</strong> <code><i>zone</i></code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>proxy_cache off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Defines a shared memory zone used for caching. The same zone can be used in several places. Parameter value can contain variables (1.7.9). The <code>off</code> parameter disables caching inherited from the previous configuration level.</p>",
    "module": "ngx_http_proxy_module",
    "link": "http/ngx_http_proxy_module.html#proxy_cache",
    "name": "proxy_cache"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_cache_background_update</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>proxy_cache_background_update off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.11.10.</p>",
    "doc": "<p>Allows starting a background subrequest to update an expired cache item, while a stale cached response is returned to the client. Note that it is necessary to <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_cache_use_stale_updating\">allow</a> the usage of a stale cached response when it is being updated.</p>",
    "module": "ngx_http_proxy_module",
    "link": "http/ngx_http_proxy_module.html#proxy_cache_background_update",
    "name": "proxy_cache_background_update"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_cache_bypass</strong> <code><i>string</i></code> ...;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Defines conditions under which the response will not be taken from a cache. If at least one value of the string parameters is not empty and is not equal to “0” then the response will not be taken from the cache:</p><blockquote class=\"example\"><pre>proxy_cache_bypass $cookie_nocache $arg_nocache$arg_comment;\nproxy_cache_bypass $http_pragma    $http_authorization;\n</pre></blockquote><p>Can be used along with the <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_no_cache\">proxy_no_cache</a> directive.</p>",
    "module": "ngx_http_proxy_module",
    "link": "http/ngx_http_proxy_module.html#proxy_cache_bypass",
    "name": "proxy_cache_bypass"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_cache_convert_head</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>proxy_cache_convert_head on;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.9.7.</p>",
    "doc": "<p>Enables or disables the conversion of the “<code>HEAD</code>” method to “<code>GET</code>” for caching. When the conversion is disabled, the <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_cache_key\">cache key</a> should be configured to include the <code>$request_method</code>.</p>",
    "module": "ngx_http_proxy_module",
    "link": "http/ngx_http_proxy_module.html#proxy_cache_convert_head",
    "name": "proxy_cache_convert_head"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_cache_key</strong> <code><i>string</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>proxy_cache_key $scheme$proxy_host$request_uri;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Defines a key for caching, for example</p><blockquote class=\"example\"><pre>proxy_cache_key \"$host$request_uri $cookie_user\";\n</pre></blockquote><p>By default, the directive’s value is close to the string</p><blockquote class=\"example\"><pre>proxy_cache_key $scheme$proxy_host$uri$is_args$args;\n</pre></blockquote>",
    "module": "ngx_http_proxy_module",
    "link": "http/ngx_http_proxy_module.html#proxy_cache_key",
    "name": "proxy_cache_key"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_cache_lock</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>proxy_cache_lock off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.1.12.</p>",
    "doc": "<p>When enabled, only one request at a time will be allowed to populate a new cache element identified according to the <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_cache_key\">proxy_cache_key</a> directive by passing a request to a proxied server. Other requests of the same cache element will either wait for a response to appear in the cache or the cache lock for this element to be released, up to the time set by the <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_cache_lock_timeout\">proxy_cache_lock_timeout</a> directive.</p>",
    "module": "ngx_http_proxy_module",
    "link": "http/ngx_http_proxy_module.html#proxy_cache_lock",
    "name": "proxy_cache_lock"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_cache_lock_age</strong> <code><i>time</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>proxy_cache_lock_age 5s;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.7.8.</p>",
    "doc": "<p>If the last request passed to the proxied server for populating a new cache element has not completed for the specified <code><i>time</i></code>, one more request may be passed to the proxied server.</p>",
    "module": "ngx_http_proxy_module",
    "link": "http/ngx_http_proxy_module.html#proxy_cache_lock_age",
    "name": "proxy_cache_lock_age"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_cache_lock_timeout</strong> <code><i>time</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>proxy_cache_lock_timeout 5s;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.1.12.</p>",
    "doc": "<p>Sets a timeout for <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_cache_lock\">proxy_cache_lock</a>. When the <code><i>time</i></code> expires, the request will be passed to the proxied server, however, the response will not be cached.</p><blockquote class=\"note\">Before 1.7.8, the response could be cached.</blockquote>",
    "module": "ngx_http_proxy_module",
    "link": "http/ngx_http_proxy_module.html#proxy_cache_lock_timeout",
    "name": "proxy_cache_lock_timeout"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_cache_max_range_offset</strong> <code><i>number</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.11.6.</p>",
    "doc": "<p>Sets an offset in bytes for byte-range requests. If the range is beyond the offset, the range request will be passed to the proxied server and the response will not be cached.</p>",
    "module": "ngx_http_proxy_module",
    "link": "http/ngx_http_proxy_module.html#proxy_cache_max_range_offset",
    "name": "proxy_cache_max_range_offset"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_cache_methods</strong> <code>GET</code> | <code>HEAD</code> | <code>POST</code> ...;</code><br></td></tr><tr><th>Default:</th><td><pre>proxy_cache_methods GET HEAD;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 0.7.59.</p>",
    "doc": "<p>If the client request method is listed in this directive then the response will be cached. “<code>GET</code>” and “<code>HEAD</code>” methods are always added to the list, though it is recommended to specify them explicitly. See also the <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_no_cache\">proxy_no_cache</a> directive.</p>",
    "module": "ngx_http_proxy_module",
    "link": "http/ngx_http_proxy_module.html#proxy_cache_methods",
    "name": "proxy_cache_methods"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_cache_min_uses</strong> <code><i>number</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>proxy_cache_min_uses 1;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets the <code><i>number</i></code> of requests after which the response will be cached.</p>",
    "module": "ngx_http_proxy_module",
    "link": "http/ngx_http_proxy_module.html#proxy_cache_min_uses",
    "name": "proxy_cache_min_uses"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_cache_path</strong> <code><i>path</i></code> [<code>levels</code>=<code><i>levels</i></code>] [<code>use_temp_path</code>=<code>on</code>|<code>off</code>] <code>keys_zone</code>=<code><i>name</i></code>:<code><i>size</i></code> [<code>inactive</code>=<code><i>time</i></code>] [<code>max_size</code>=<code><i>size</i></code>] [<code>min_free</code>=<code><i>size</i></code>] [<code>manager_files</code>=<code><i>number</i></code>] [<code>manager_sleep</code>=<code><i>time</i></code>] [<code>manager_threshold</code>=<code><i>time</i></code>] [<code>loader_files</code>=<code><i>number</i></code>] [<code>loader_sleep</code>=<code><i>time</i></code>] [<code>loader_threshold</code>=<code><i>time</i></code>] [<code>purger</code>=<code>on</code>|<code>off</code>] [<code>purger_files</code>=<code><i>number</i></code>] [<code>purger_sleep</code>=<code><i>time</i></code>] [<code>purger_threshold</code>=<code><i>time</i></code>];</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets the path and other parameters of a cache. Cache data are stored in files. The file name in a cache is a result of applying the MD5 function to the <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_cache_key\">cache key</a>. The <code>levels</code> parameter defines hierarchy levels of a cache: from 1 to 3, each level accepts values 1 or 2. For example, in the following configuration</p><blockquote class=\"example\"><pre>proxy_cache_path /data/nginx/cache levels=1:2 keys_zone=one:10m;\n</pre></blockquote><p>file names in a cache will look like this:</p><blockquote class=\"example\"><pre>/data/nginx/cache/<strong>c</strong>/<strong>29</strong>/b7f54b2df7773722d382f4809d650<strong>29c</strong>\n</pre></blockquote><p>A cached response is first written to a temporary file, and then the file is renamed. Starting from version 0.8.9, temporary files and the cache can be put on different file systems. However, be aware that in this case a file is copied across two file systems instead of the cheap renaming operation. It is thus recommended that for any given location both cache and a directory holding temporary files are put on the same file system. The directory for temporary files is set based on the <code>use_temp_path</code> parameter (1.7.10). If this parameter is omitted or set to the value <code>on</code>, the directory set by the <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_temp_path\">proxy_temp_path</a> directive for the given location will be used. If the value is set to <code>off</code>, temporary files will be put directly in the cache directory.</p><p>In addition, all active keys and information about data are stored in a shared memory zone, whose <code><i>name</i></code> and <code><i>size</i></code> are configured by the <code>keys_zone</code> parameter. One megabyte zone can store about 8 thousand keys.</p><blockquote class=\"note\">As part of <a href=\"http://nginx.com/products/\">commercial subscription</a>, the shared memory zone also stores extended cache <a href=\"https://nginx.org/en/docs/http/ngx_http_api_module.html#http_caches_\">information</a>, thus, it is required to specify a larger zone size for the same number of keys. For example, one megabyte zone can store about 4 thousand keys.</blockquote><p>Cached data that are not accessed during the time specified by the <code>inactive</code> parameter get removed from the cache regardless of their freshness. By default, <code>inactive</code> is set to 10 minutes.</p>",
    "module": "ngx_http_proxy_module",
    "link": "http/ngx_http_proxy_module.html#proxy_cache_path",
    "name": "proxy_cache_path"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_cache_purge</strong> string ...;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.5.7.</p>",
    "doc": "<p>Defines conditions under which the request will be considered a cache purge request. If at least one value of the string parameters is not empty and is not equal to “0” then the cache entry with a corresponding <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_cache_key\">cache key</a> is removed. The result of successful operation is indicated by returning the 204 (No Content) response.</p><p>If the <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_cache_key\">cache key</a> of a purge request ends with an asterisk (“<code>*</code>”), all cache entries matching the wildcard key will be removed from the cache. However, these entries will remain on the disk until they are deleted for either <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_cache_path\">inactivity</a>, or processed by the <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#purger\">cache purger</a> (1.7.12), or a client attempts to access them.</p><p>Example configuration:</p><blockquote class=\"example\"><pre>proxy_cache_path /data/nginx/cache keys_zone=cache_zone:10m;\n\nmap $request_method $purge_method {\n    PURGE   1;\n    default 0;\n}\n\nserver {\n    ...\n    location / {\n        proxy_pass http://backend;\n        proxy_cache cache_zone;\n        proxy_cache_key $uri;\n        proxy_cache_purge $purge_method;\n    }\n}\n</pre></blockquote><blockquote class=\"note\">This functionality is available as part of our <a href=\"http://nginx.com/products/\">commercial subscription</a>.</blockquote>",
    "module": "ngx_http_proxy_module",
    "link": "http/ngx_http_proxy_module.html#proxy_cache_purge",
    "name": "proxy_cache_purge"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_cache_revalidate</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>proxy_cache_revalidate off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.5.7.</p>",
    "doc": "<p>Enables revalidation of expired cache items using conditional requests with the “If-Modified-Since” and “If-None-Match” header fields.</p>",
    "module": "ngx_http_proxy_module",
    "link": "http/ngx_http_proxy_module.html#proxy_cache_revalidate",
    "name": "proxy_cache_revalidate"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_cache_use_stale</strong> <code>error</code> | <code>timeout</code> | <code>invalid_header</code> | <code>updating</code> | <code>http_500</code> | <code>http_502</code> | <code>http_503</code> | <code>http_504</code> | <code>http_403</code> | <code>http_404</code> | <code>http_429</code> | <code>off</code> ...;</code><br></td></tr><tr><th>Default:</th><td><pre>proxy_cache_use_stale off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Determines in which cases a stale cached response can be used during communication with the proxied server. The directive’s parameters match the parameters of the <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_next_upstream\">proxy_next_upstream</a> directive.</p><p>The <code>error</code> parameter also permits using a stale cached response if a proxied server to process a request cannot be selected.</p>",
    "module": "ngx_http_proxy_module",
    "link": "http/ngx_http_proxy_module.html#proxy_cache_use_stale",
    "name": "proxy_cache_use_stale"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_cache_valid</strong> [<code><i>code</i></code> ...] <code><i>time</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets caching time for different response codes. For example, the following directives</p><blockquote class=\"example\"><pre>proxy_cache_valid 200 302 10m;\nproxy_cache_valid 404      1m;\n</pre></blockquote><p>set 10 minutes of caching for responses with codes 200 and 302 and 1 minute for responses with code 404.</p><p>If only caching <code><i>time</i></code> is specified</p><blockquote class=\"example\"><pre>proxy_cache_valid 5m;\n</pre></blockquote><p>then only 200, 301, and 302 responses are cached.</p><p>In addition, the <code>any</code> parameter can be specified to cache any responses:</p><blockquote class=\"example\"><pre>proxy_cache_valid 200 302 10m;\nproxy_cache_valid 301      1h;\nproxy_cache_valid any      1m;\n</pre></blockquote><p>Parameters of caching can also be set directly in the response header. This has higher priority than setting of caching time using the directive.</p>",
    "module": "ngx_http_proxy_module",
    "link": "http/ngx_http_proxy_module.html#proxy_cache_valid",
    "name": "proxy_cache_valid"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_connect_timeout</strong> <code><i>time</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>proxy_connect_timeout 60s;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Defines a timeout for establishing a connection with a proxied server. It should be noted that this timeout cannot usually exceed 75 seconds.</p>",
    "module": "ngx_http_proxy_module",
    "link": "http/ngx_http_proxy_module.html#proxy_connect_timeout",
    "name": "proxy_connect_timeout"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_cookie_domain</strong> <code>off</code>;</code><br><code><strong>proxy_cookie_domain</strong> <code><i>domain</i></code> <code><i>replacement</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>proxy_cookie_domain off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.1.15.</p>",
    "doc": "<p>Sets a text that should be changed in the <code>domain</code> attribute of the “Set-Cookie” header fields of a proxied server response. Suppose a proxied server returned the “Set-Cookie” header field with the attribute “<code>domain=localhost</code>”. The directive</p><blockquote class=\"example\"><pre>proxy_cookie_domain localhost example.org;\n</pre></blockquote><p>will rewrite this attribute to “<code>domain=example.org</code>”.</p><p>A dot at the beginning of the <code><i>domain</i></code> and <code><i>replacement</i></code> strings and the <code>domain</code> attribute is ignored. Matching is case-insensitive.</p><p>The <code><i>domain</i></code> and <code><i>replacement</i></code> strings can contain variables:</p><blockquote class=\"example\"><pre>proxy_cookie_domain www.$host $host;\n</pre></blockquote><p>The directive can also be specified using regular expressions. In this case, <code><i>domain</i></code> should start from the “<code>~</code>” symbol. A regular expression can contain named and positional captures, and <code><i>replacement</i></code> can reference them:</p><blockquote class=\"example\"><pre>proxy_cookie_domain ~\\.(?P&lt;sl_domain&gt;[-0-9a-z]+\\.[a-z]+)$ $sl_domain;\n</pre></blockquote><p>Several <code>proxy_cookie_domain</code> directives can be specified on the same level:</p><blockquote class=\"example\"><pre>proxy_cookie_domain localhost example.org;\nproxy_cookie_domain ~\\.([a-z]+\\.[a-z]+)$ $1;\n</pre></blockquote><p>If several directives can be applied to the cookie, the first matching directive will be chosen.</p><p>The <code>off</code> parameter cancels the effect of the <code>proxy_cookie_domain</code> directives inherited from the previous configuration level.</p>",
    "module": "ngx_http_proxy_module",
    "link": "http/ngx_http_proxy_module.html#proxy_cookie_domain",
    "name": "proxy_cookie_domain"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_cookie_flags</strong> <code>off</code> | <code><i>cookie</i></code> [<code><i>flag</i></code> ...];</code><br></td></tr><tr><th>Default:</th><td><pre>proxy_cookie_flags off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.19.3.</p>",
    "doc": "<p>Sets one or more flags for the cookie. The <code><i>cookie</i></code> can contain text, variables, and their combinations. The <code><i>flag</i></code> can contain text, variables, and their combinations (1.19.8). The <code>secure</code>, <code>httponly</code>, <code>samesite=strict</code>, <code>samesite=lax</code>, <code>samesite=none</code> parameters add the corresponding flags. The <code>nosecure</code>, <code>nohttponly</code>, <code>nosamesite</code> parameters remove the corresponding flags.</p><p>The cookie can also be specified using regular expressions. In this case, <code><i>cookie</i></code> should start from the “<code>~</code>” symbol.</p><p>Several <code>proxy_cookie_flags</code> directives can be specified on the same configuration level:</p><blockquote class=\"example\"><pre>proxy_cookie_flags one httponly;\nproxy_cookie_flags ~ nosecure samesite=strict;\n</pre></blockquote><p>If several directives can be applied to the cookie, the first matching directive will be chosen. In the example, the <code>httponly</code> flag is added to the cookie <code>one</code>, for all other cookies the <code>samesite=strict</code> flag is added and the <code>secure</code> flag is deleted.</p><p>The <code>off</code> parameter cancels the effect of the <code>proxy_cookie_flags</code> directives inherited from the previous configuration level.</p>",
    "module": "ngx_http_proxy_module",
    "link": "http/ngx_http_proxy_module.html#proxy_cookie_flags",
    "name": "proxy_cookie_flags"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_cookie_path</strong> <code>off</code>;</code><br><code><strong>proxy_cookie_path</strong> <code><i>path</i></code> <code><i>replacement</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>proxy_cookie_path off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.1.15.</p>",
    "doc": "<p>Sets a text that should be changed in the <code>path</code> attribute of the “Set-Cookie” header fields of a proxied server response. Suppose a proxied server returned the “Set-Cookie” header field with the attribute “<code>path=/two/some/uri/</code>”. The directive</p><blockquote class=\"example\"><pre>proxy_cookie_path /two/ /;\n</pre></blockquote><p>will rewrite this attribute to “<code>path=/some/uri/</code>”.</p><p>The <code><i>path</i></code> and <code><i>replacement</i></code> strings can contain variables:</p><blockquote class=\"example\"><pre>proxy_cookie_path $uri /some$uri;\n</pre></blockquote><p>The directive can also be specified using regular expressions. In this case, <code><i>path</i></code> should either start from the “<code>~</code>” symbol for a case-sensitive matching, or from the “<code>~*</code>” symbols for case-insensitive matching. The regular expression can contain named and positional captures, and <code><i>replacement</i></code> can reference them:</p><blockquote class=\"example\"><pre>proxy_cookie_path ~*^/user/([^/]+) /u/$1;\n</pre></blockquote><p>Several <code>proxy_cookie_path</code> directives can be specified on the same level:</p><blockquote class=\"example\"><pre>proxy_cookie_path /one/ /;\nproxy_cookie_path / /two/;\n</pre></blockquote><p>If several directives can be applied to the cookie, the first matching directive will be chosen.</p><p>The <code>off</code> parameter cancels the effect of the <code>proxy_cookie_path</code> directives inherited from the previous configuration level.</p>",
    "module": "ngx_http_proxy_module",
    "link": "http/ngx_http_proxy_module.html#proxy_cookie_path",
    "name": "proxy_cookie_path"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_force_ranges</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>proxy_force_ranges off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.7.7.</p>",
    "doc": "<p>Enables byte-range support for both cached and uncached responses from the proxied server regardless of the “Accept-Ranges” field in these responses.</p>",
    "module": "ngx_http_proxy_module",
    "link": "http/ngx_http_proxy_module.html#proxy_force_ranges",
    "name": "proxy_force_ranges"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_headers_hash_bucket_size</strong> <code><i>size</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>proxy_headers_hash_bucket_size 64;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets the bucket <code><i>size</i></code> for hash tables used by the <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_hide_header\">proxy_hide_header</a> and <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_set_header\">proxy_set_header</a> directives. The details of setting up hash tables are provided in a separate <a href=\"https://nginx.org/en/docs/hash.html\">document</a>.</p>",
    "module": "ngx_http_proxy_module",
    "link": "http/ngx_http_proxy_module.html#proxy_headers_hash_bucket_size",
    "name": "proxy_headers_hash_bucket_size"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_headers_hash_max_size</strong> <code><i>size</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>proxy_headers_hash_max_size 512;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets the maximum <code><i>size</i></code> of hash tables used by the <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_hide_header\">proxy_hide_header</a> and <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_set_header\">proxy_set_header</a> directives. The details of setting up hash tables are provided in a separate <a href=\"https://nginx.org/en/docs/hash.html\">document</a>.</p>",
    "module": "ngx_http_proxy_module",
    "link": "http/ngx_http_proxy_module.html#proxy_headers_hash_max_size",
    "name": "proxy_headers_hash_max_size"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_hide_header</strong> <code><i>field</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>By default, nginx does not pass the header fields “Date”, “Server”, “X-Pad”, and “X-Accel-...” from the response of a proxied server to a client. The <code>proxy_hide_header</code> directive sets additional fields that will not be passed. If, on the contrary, the passing of fields needs to be permitted, the <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_pass_header\">proxy_pass_header</a> directive can be used.</p>",
    "module": "ngx_http_proxy_module",
    "link": "http/ngx_http_proxy_module.html#proxy_hide_header",
    "name": "proxy_hide_header"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_http_version</strong> <code>1.0</code> | <code>1.1</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>proxy_http_version 1.0;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.1.4.</p>",
    "doc": "<p>Sets the HTTP protocol version for proxying. By default, version 1.0 is used. Version 1.1 is recommended for use with <a href=\"https://nginx.org/en/docs/http/ngx_http_upstream_module.html#keepalive\">keepalive</a> connections and <a href=\"https://nginx.org/en/docs/http/ngx_http_upstream_module.html#ntlm\">NTLM authentication</a>.</p>",
    "module": "ngx_http_proxy_module",
    "link": "http/ngx_http_proxy_module.html#proxy_http_version",
    "name": "proxy_http_version"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_ignore_client_abort</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>proxy_ignore_client_abort off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Determines whether the connection with a proxied server should be closed when a client closes the connection without waiting for a response.</p>",
    "module": "ngx_http_proxy_module",
    "link": "http/ngx_http_proxy_module.html#proxy_ignore_client_abort",
    "name": "proxy_ignore_client_abort"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_ignore_headers</strong> <code><i>field</i></code> ...;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Disables processing of certain response header fields from the proxied server. The following fields can be ignored: “X-Accel-Redirect”, “X-Accel-Expires”, “X-Accel-Limit-Rate” (1.1.6), “X-Accel-Buffering” (1.1.6), “X-Accel-Charset” (1.1.6), “Expires”, “Cache-Control”, “Set-Cookie” (0.8.44), and “Vary” (1.7.7).</p><p>If not disabled, processing of these header fields has the following effect:</p>",
    "module": "ngx_http_proxy_module",
    "link": "http/ngx_http_proxy_module.html#proxy_ignore_headers",
    "name": "proxy_ignore_headers"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_intercept_errors</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>proxy_intercept_errors off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Determines whether proxied responses with codes greater than or equal to 300 should be passed to a client or be intercepted and redirected to nginx for processing with the <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#error_page\">error_page</a> directive.</p>",
    "module": "ngx_http_proxy_module",
    "link": "http/ngx_http_proxy_module.html#proxy_intercept_errors",
    "name": "proxy_intercept_errors"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_limit_rate</strong> <code><i>rate</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>proxy_limit_rate 0;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.7.7.</p>",
    "doc": "<p>Limits the speed of reading the response from the proxied server. The <code><i>rate</i></code> is specified in bytes per second. The zero value disables rate limiting. The limit is set per a request, and so if nginx simultaneously opens two connections to the proxied server, the overall rate will be twice as much as the specified limit. The limitation works only if <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_buffering\">buffering</a> of responses from the proxied server is enabled.</p>",
    "module": "ngx_http_proxy_module",
    "link": "http/ngx_http_proxy_module.html#proxy_limit_rate",
    "name": "proxy_limit_rate"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_max_temp_file_size</strong> <code><i>size</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>proxy_max_temp_file_size 1024m;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>When <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_buffering\">buffering</a> of responses from the proxied server is enabled, and the whole response does not fit into the buffers set by the <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_buffer_size\">proxy_buffer_size</a> and <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_buffers\">proxy_buffers</a> directives, a part of the response can be saved to a temporary file. This directive sets the maximum <code><i>size</i></code> of the temporary file. The size of data written to the temporary file at a time is set by the <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_temp_file_write_size\">proxy_temp_file_write_size</a> directive.</p><p>The zero value disables buffering of responses to temporary files.</p><blockquote class=\"note\">This restriction does not apply to responses that will be <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_cache\">cached</a> or <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_store\">stored</a> on disk.</blockquote>",
    "module": "ngx_http_proxy_module",
    "link": "http/ngx_http_proxy_module.html#proxy_max_temp_file_size",
    "name": "proxy_max_temp_file_size"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_method</strong> <code><i>method</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Specifies the HTTP <code><i>method</i></code> to use in requests forwarded to the proxied server instead of the method from the client request. Parameter value can contain variables (1.11.6).</p>",
    "module": "ngx_http_proxy_module",
    "link": "http/ngx_http_proxy_module.html#proxy_method",
    "name": "proxy_method"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_next_upstream</strong> <code>error</code> | <code>timeout</code> | <code>invalid_header</code> | <code>http_500</code> | <code>http_502</code> | <code>http_503</code> | <code>http_504</code> | <code>http_403</code> | <code>http_404</code> | <code>http_429</code> | <code>non_idempotent</code> | <code>off</code> ...;</code><br></td></tr><tr><th>Default:</th><td><pre>proxy_next_upstream error timeout;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Specifies in which cases a request should be passed to the next server:</p><dl class=\"compact\"><dt><code>error</code></dt><dd>an error occurred while establishing a connection with the server, passing a request to it, or reading the response header;</dd><dt><code>timeout</code></dt><dd>a timeout has occurred while establishing a connection with the server, passing a request to it, or reading the response header;</dd><dt><code>invalid_header</code></dt><dd>a server returned an empty or invalid response;</dd><dt><code>http_500</code></dt><dd>a server returned a response with the code 500;</dd><dt><code>http_502</code></dt><dd>a server returned a response with the code 502;</dd><dt><code>http_503</code></dt><dd>a server returned a response with the code 503;</dd><dt><code>http_504</code></dt><dd>a server returned a response with the code 504;</dd><dt><code>http_403</code></dt><dd>a server returned a response with the code 403;</dd><dt><code>http_404</code></dt><dd>a server returned a response with the code 404;</dd><dt><code>http_429</code></dt><dd>a server returned a response with the code 429 (1.11.13);</dd><dt id=\"non_idempotent\"><code>non_idempotent</code></dt><dd>normally, requests with a <a href=\"https://datatracker.ietf.org/doc/html/rfc7231#section-4.2.2\">non-idempotent</a> method (<code>POST</code>, <code>LOCK</code>, <code>PATCH</code>) are not passed to the next server if a request has been sent to an upstream server (1.9.13); enabling this option explicitly allows retrying such requests;</dd><dt><code>off</code></dt><dd>disables passing a request to the next server.</dd></dl><p>One should bear in mind that passing a request to the next server is only possible if nothing has been sent to a client yet. That is, if an error or timeout occurs in the middle of the transferring of a response, fixing this is impossible.</p><p>The directive also defines what is considered an <a href=\"https://nginx.org/en/docs/http/ngx_http_upstream_module.html#max_fails\">unsuccessful attempt</a> of communication with a server. The cases of <code>error</code>, <code>timeout</code> and <code>invalid_header</code> are always considered unsuccessful attempts, even if they are not specified in the directive. The cases of <code>http_500</code>, <code>http_502</code>, <code>http_503</code>, <code>http_504</code>, and <code>http_429</code> are considered unsuccessful attempts only if they are specified in the directive. The cases of <code>http_403</code> and <code>http_404</code> are never considered unsuccessful attempts.</p><p>Passing a request to the next server can be limited by <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_next_upstream_tries\">the number of tries</a> and by <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_next_upstream_timeout\">time</a>.</p>",
    "module": "ngx_http_proxy_module",
    "link": "http/ngx_http_proxy_module.html#proxy_next_upstream",
    "name": "proxy_next_upstream"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_next_upstream_timeout</strong> <code><i>time</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>proxy_next_upstream_timeout 0;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.7.5.</p>",
    "doc": "<p>Limits the time during which a request can be passed to the <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_next_upstream\">next server</a>. The <code>0</code> value turns off this limitation.</p>",
    "module": "ngx_http_proxy_module",
    "link": "http/ngx_http_proxy_module.html#proxy_next_upstream_timeout",
    "name": "proxy_next_upstream_timeout"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_next_upstream_tries</strong> <code><i>number</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>proxy_next_upstream_tries 0;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.7.5.</p>",
    "doc": "<p>Limits the number of possible tries for passing a request to the <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_next_upstream\">next server</a>. The <code>0</code> value turns off this limitation.</p>",
    "module": "ngx_http_proxy_module",
    "link": "http/ngx_http_proxy_module.html#proxy_next_upstream_tries",
    "name": "proxy_next_upstream_tries"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_no_cache</strong> <code><i>string</i></code> ...;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Defines conditions under which the response will not be saved to a cache. If at least one value of the string parameters is not empty and is not equal to “0” then the response will not be saved:</p><blockquote class=\"example\"><pre>proxy_no_cache $cookie_nocache $arg_nocache$arg_comment;\nproxy_no_cache $http_pragma    $http_authorization;\n</pre></blockquote><p>Can be used along with the <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_cache_bypass\">proxy_cache_bypass</a> directive.</p>",
    "module": "ngx_http_proxy_module",
    "link": "http/ngx_http_proxy_module.html#proxy_no_cache",
    "name": "proxy_no_cache"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_pass</strong> <code><i>URL</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>location</code>, <code>if in location</code>, <code>limit_except</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets the protocol and address of a proxied server and an optional URI to which a location should be mapped. As a protocol, “<code>http</code>” or “<code>https</code>” can be specified. The address can be specified as a domain name or IP address, and an optional port:</p><blockquote class=\"example\"><pre>proxy_pass http://localhost:8000/uri/;\n</pre></blockquote><p>or as a UNIX-domain socket path specified after the word “<code>unix</code>” and enclosed in colons:</p><blockquote class=\"example\"><pre>proxy_pass http://unix:/tmp/backend.socket:/uri/;\n</pre></blockquote><p>If a domain name resolves to several addresses, all of them will be used in a round-robin fashion. In addition, an address can be specified as a <a href=\"https://nginx.org/en/docs/http/ngx_http_upstream_module.html\">server group</a>.</p><p>Parameter value can contain variables. In this case, if an address is specified as a domain name, the name is searched among the described server groups, and, if not found, is determined using a <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#resolver\">resolver</a>.</p><p>A request URI is passed to the server as follows:</p>",
    "module": "ngx_http_proxy_module",
    "link": "http/ngx_http_proxy_module.html#proxy_pass",
    "name": "proxy_pass"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_pass_header</strong> <code><i>field</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Permits passing <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_hide_header\">otherwise disabled</a> header fields from a proxied server to a client.</p>",
    "module": "ngx_http_proxy_module",
    "link": "http/ngx_http_proxy_module.html#proxy_pass_header",
    "name": "proxy_pass_header"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_pass_request_body</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>proxy_pass_request_body on;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Indicates whether the original request body is passed to the proxied server.</p><blockquote class=\"example\"><pre>location /x-accel-redirect-here/ {\n    proxy_method GET;\n    proxy_pass_request_body off;\n    proxy_set_header Content-Length \"\";\n\n    proxy_pass ...\n}\n</pre></blockquote><p>See also the <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_set_header\">proxy_set_header</a> and <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_pass_request_headers\">proxy_pass_request_headers</a> directives.</p>",
    "module": "ngx_http_proxy_module",
    "link": "http/ngx_http_proxy_module.html#proxy_pass_request_body",
    "name": "proxy_pass_request_body"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_pass_request_headers</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>proxy_pass_request_headers on;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Indicates whether the header fields of the original request are passed to the proxied server.</p><blockquote class=\"example\"><pre>location /x-accel-redirect-here/ {\n    proxy_method GET;\n    proxy_pass_request_headers off;\n    proxy_pass_request_body off;\n\n    proxy_pass ...\n}\n</pre></blockquote><p>See also the <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_set_header\">proxy_set_header</a> and <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_pass_request_body\">proxy_pass_request_body</a> directives.</p>",
    "module": "ngx_http_proxy_module",
    "link": "http/ngx_http_proxy_module.html#proxy_pass_request_headers",
    "name": "proxy_pass_request_headers"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_read_timeout</strong> <code><i>time</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>proxy_read_timeout 60s;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Defines a timeout for reading a response from the proxied server. The timeout is set only between two successive read operations, not for the transmission of the whole response. If the proxied server does not transmit anything within this time, the connection is closed.</p>",
    "module": "ngx_http_proxy_module",
    "link": "http/ngx_http_proxy_module.html#proxy_read_timeout",
    "name": "proxy_read_timeout"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_redirect</strong> <code>default</code>;</code><br><code><strong>proxy_redirect</strong> <code>off</code>;</code><br><code><strong>proxy_redirect</strong> <code><i>redirect</i></code> <code><i>replacement</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>proxy_redirect default;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets the text that should be changed in the “Location” and “Refresh” header fields of a proxied server response. Suppose a proxied server returned the header field “<code>Location: http://localhost:8000/two/some/uri/</code>”. The directive</p><blockquote class=\"example\"><pre>proxy_redirect http://localhost:8000/two/ http://frontend/one/;\n</pre></blockquote><p>will rewrite this string to “<code>Location: http://frontend/one/some/uri/</code>”.</p><p>A server name may be omitted in the <code><i>replacement</i></code> string:</p><blockquote class=\"example\"><pre>proxy_redirect http://localhost:8000/two/ /;\n</pre></blockquote><p>then the primary server’s name and port, if different from 80, will be inserted.</p><p>The default replacement specified by the <code>default</code> parameter uses the parameters of the <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#location\">location</a> and <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_pass\">proxy_pass</a> directives. Hence, the two configurations below are equivalent:</p><blockquote class=\"example\"><pre>location /one/ {\n    proxy_pass     http://upstream:port/two/;\n    proxy_redirect default;\n</pre></blockquote><blockquote class=\"example\"><pre>location /one/ {\n    proxy_pass     http://upstream:port/two/;\n    proxy_redirect http://upstream:port/two/ /one/;\n</pre></blockquote><p>The <code>default</code> parameter is not permitted if <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_pass\">proxy_pass</a> is specified using variables.</p><p>A <code><i>replacement</i></code> string can contain variables:</p><blockquote class=\"example\"><pre>proxy_redirect http://localhost:8000/ http://$host:$server_port/;\n</pre></blockquote><p>A <code><i>redirect</i></code> can also contain (1.1.11) variables:</p><blockquote class=\"example\"><pre>proxy_redirect http://$proxy_host:8000/ /;\n</pre></blockquote><p>The directive can be specified (1.1.11) using regular expressions. In this case, <code><i>redirect</i></code> should either start with the “<code>~</code>” symbol for a case-sensitive matching, or with the “<code>~*</code>” symbols for case-insensitive matching. The regular expression can contain named and positional captures, and <code><i>replacement</i></code> can reference them:</p><blockquote class=\"example\"><pre>proxy_redirect ~^(http://[^:]+):\\d+(/.+)$ $1$2;\nproxy_redirect ~*/user/([^/]+)/(.+)$      http://$1.example.com/$2;\n</pre></blockquote><p>Several <code>proxy_redirect</code> directives can be specified on the same level:</p><blockquote class=\"example\"><pre>proxy_redirect default;\nproxy_redirect http://localhost:8000/  /;\nproxy_redirect http://www.example.com/ /;\n</pre></blockquote><p>If several directives can be applied to the header fields of a proxied server response, the first matching directive will be chosen.</p><p>The <code>off</code> parameter cancels the effect of the <code>proxy_redirect</code> directives inherited from the previous configuration level.</p><p>Using this directive, it is also possible to add host names to relative redirects issued by a proxied server:</p><blockquote class=\"example\"><pre>proxy_redirect / /;\n</pre></blockquote>",
    "module": "ngx_http_proxy_module",
    "link": "http/ngx_http_proxy_module.html#proxy_redirect",
    "name": "proxy_redirect"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_request_buffering</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>proxy_request_buffering on;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.7.11.</p>",
    "doc": "<p>Enables or disables buffering of a client request body.</p><p>When buffering is enabled, the entire request body is <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#client_body_buffer_size\">read</a> from the client before sending the request to a proxied server.</p><p>When buffering is disabled, the request body is sent to the proxied server immediately as it is received. In this case, the request cannot be passed to the <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_next_upstream\">next server</a> if nginx already started sending the request body.</p><p>When HTTP/1.1 chunked transfer encoding is used to send the original request body, the request body will be buffered regardless of the directive value unless HTTP/1.1 is <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_http_version\">enabled</a> for proxying.</p>",
    "module": "ngx_http_proxy_module",
    "link": "http/ngx_http_proxy_module.html#proxy_request_buffering",
    "name": "proxy_request_buffering"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_send_lowat</strong> <code><i>size</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>proxy_send_lowat 0;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>If the directive is set to a non-zero value, nginx will try to minimize the number of send operations on outgoing connections to a proxied server by using either <code>NOTE_LOWAT</code> flag of the <a href=\"https://nginx.org/en/docs/events.html#kqueue\">kqueue</a> method, or the <code>SO_SNDLOWAT</code> socket option, with the specified <code><i>size</i></code>.</p><p>This directive is ignored on Linux, Solaris, and Windows.</p>",
    "module": "ngx_http_proxy_module",
    "link": "http/ngx_http_proxy_module.html#proxy_send_lowat",
    "name": "proxy_send_lowat"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_send_timeout</strong> <code><i>time</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>proxy_send_timeout 60s;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets a timeout for transmitting a request to the proxied server. The timeout is set only between two successive write operations, not for the transmission of the whole request. If the proxied server does not receive anything within this time, the connection is closed.</p>",
    "module": "ngx_http_proxy_module",
    "link": "http/ngx_http_proxy_module.html#proxy_send_timeout",
    "name": "proxy_send_timeout"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_set_body</strong> <code><i>value</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Allows redefining the request body passed to the proxied server. The <code><i>value</i></code> can contain text, variables, and their combination.</p>",
    "module": "ngx_http_proxy_module",
    "link": "http/ngx_http_proxy_module.html#proxy_set_body",
    "name": "proxy_set_body"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_set_header</strong> <code><i>field</i></code> <code><i>value</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>proxy_set_header Host $proxy_host;</pre><pre>proxy_set_header Connection close;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Allows redefining or appending fields to the request header <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_pass_request_headers\">passed</a> to the proxied server. The <code><i>value</i></code> can contain text, variables, and their combinations. These directives are inherited from the previous configuration level if and only if there are no <code>proxy_set_header</code> directives defined on the current level. By default, only two fields are redefined:</p><blockquote class=\"example\"><pre>proxy_set_header Host       $proxy_host;\nproxy_set_header Connection close;\n</pre></blockquote><p>If caching is enabled, the header fields “If-Modified-Since”, “If-Unmodified-Since”, “If-None-Match”, “If-Match”, “Range”, and “If-Range” from the original request are not passed to the proxied server.</p><p>An unchanged “Host” request header field can be passed like this:</p><blockquote class=\"example\"><pre>proxy_set_header Host       $http_host;\n</pre></blockquote><p>However, if this field is not present in a client request header then nothing will be passed. In such a case it is better to use the <code>$host</code> variable&nbsp;- its value equals the server name in the “Host” request header field or the primary server name if this field is not present:</p><blockquote class=\"example\"><pre>proxy_set_header Host       $host;\n</pre></blockquote><p>In addition, the server name can be passed together with the port of the proxied server:</p><blockquote class=\"example\"><pre>proxy_set_header Host       $host:$proxy_port;\n</pre></blockquote><p>If the value of a header field is an empty string then this field will not be passed to a proxied server:</p><blockquote class=\"example\"><pre>proxy_set_header Accept-Encoding \"\";\n</pre></blockquote>",
    "module": "ngx_http_proxy_module",
    "link": "http/ngx_http_proxy_module.html#proxy_set_header",
    "name": "proxy_set_header"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_socket_keepalive</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>proxy_socket_keepalive off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.15.6.</p>",
    "doc": "<p>Configures the “TCP keepalive” behavior for outgoing connections to a proxied server. By default, the operating system’s settings are in effect for the socket. If the directive is set to the value “<code>on</code>”, the <code>SO_KEEPALIVE</code> socket option is turned on for the socket.</p>",
    "module": "ngx_http_proxy_module",
    "link": "http/ngx_http_proxy_module.html#proxy_socket_keepalive",
    "name": "proxy_socket_keepalive"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_ssl_certificate</strong> <code><i>file</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.7.8.</p>",
    "doc": "<p>Specifies a <code><i>file</i></code> with the certificate in the PEM format used for authentication to a proxied HTTPS server.</p><p>Since version 1.21.0, variables can be used in the <code><i>file</i></code> name.</p>",
    "module": "ngx_http_proxy_module",
    "link": "http/ngx_http_proxy_module.html#proxy_ssl_certificate",
    "name": "proxy_ssl_certificate"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_ssl_certificate_key</strong> <code><i>file</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.7.8.</p>",
    "doc": "<p>Specifies a <code><i>file</i></code> with the secret key in the PEM format used for authentication to a proxied HTTPS server.</p><p>The value <code>engine</code>:<code><i>name</i></code>:<code><i>id</i></code> can be specified instead of the <code><i>file</i></code> (1.7.9), which loads a secret key with a specified <code><i>id</i></code> from the OpenSSL engine <code><i>name</i></code>.</p><p>Since version 1.21.0, variables can be used in the <code><i>file</i></code> name.</p>",
    "module": "ngx_http_proxy_module",
    "link": "http/ngx_http_proxy_module.html#proxy_ssl_certificate_key",
    "name": "proxy_ssl_certificate_key"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_ssl_ciphers</strong> <code><i>ciphers</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>proxy_ssl_ciphers DEFAULT;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.5.6.</p>",
    "doc": "<p>Specifies the enabled ciphers for requests to a proxied HTTPS server. The ciphers are specified in the format understood by the OpenSSL library.</p><p>The full list can be viewed using the “<code>openssl ciphers</code>” command.</p>",
    "module": "ngx_http_proxy_module",
    "link": "http/ngx_http_proxy_module.html#proxy_ssl_ciphers",
    "name": "proxy_ssl_ciphers"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_ssl_conf_command</strong> <code><i>name</i></code> <code><i>value</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.19.4.</p>",
    "doc": "<p>Sets arbitrary OpenSSL configuration <a href=\"https://www.openssl.org/docs/man1.1.1/man3/SSL_CONF_cmd.html\">commands</a> when establishing a connection with the proxied HTTPS server.</p><blockquote class=\"note\">The directive is supported when using OpenSSL 1.0.2 or higher.</blockquote><p>Several <code>proxy_ssl_conf_command</code> directives can be specified on the same level. These directives are inherited from the previous configuration level if and only if there are no <code>proxy_ssl_conf_command</code> directives defined on the current level.</p><blockquote class=\"note\">Note that configuring OpenSSL directly might result in unexpected behavior.</blockquote>",
    "module": "ngx_http_proxy_module",
    "link": "http/ngx_http_proxy_module.html#proxy_ssl_conf_command",
    "name": "proxy_ssl_conf_command"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_ssl_crl</strong> <code><i>file</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.7.0.</p>",
    "doc": "<p>Specifies a <code><i>file</i></code> with revoked certificates (CRL) in the PEM format used to <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_ssl_verify\">verify</a> the certificate of the proxied HTTPS server.</p>",
    "module": "ngx_http_proxy_module",
    "link": "http/ngx_http_proxy_module.html#proxy_ssl_crl",
    "name": "proxy_ssl_crl"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_ssl_name</strong> <code><i>name</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>proxy_ssl_name $proxy_host;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.7.0.</p>",
    "doc": "<p>Allows overriding the server name used to <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_ssl_verify\">verify</a> the certificate of the proxied HTTPS server and to be <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_ssl_server_name\">passed through SNI</a> when establishing a connection with the proxied HTTPS server.</p><p>By default, the host part of the <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_pass\">proxy_pass</a> URL is used.</p>",
    "module": "ngx_http_proxy_module",
    "link": "http/ngx_http_proxy_module.html#proxy_ssl_name",
    "name": "proxy_ssl_name"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_ssl_password_file</strong> <code><i>file</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.7.8.</p>",
    "doc": "<p>Specifies a <code><i>file</i></code> with passphrases for <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_ssl_certificate_key\">secret keys</a> where each passphrase is specified on a separate line. Passphrases are tried in turn when loading the key.</p>",
    "module": "ngx_http_proxy_module",
    "link": "http/ngx_http_proxy_module.html#proxy_ssl_password_file",
    "name": "proxy_ssl_password_file"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_ssl_protocols</strong> [<code>SSLv2</code>] [<code>SSLv3</code>] [<code>TLSv1</code>] [<code>TLSv1.1</code>] [<code>TLSv1.2</code>] [<code>TLSv1.3</code>];</code><br></td></tr><tr><th>Default:</th><td><pre>proxy_ssl_protocols TLSv1 TLSv1.1 TLSv1.2;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.5.6.</p>",
    "doc": "<p>Enables the specified protocols for requests to a proxied HTTPS server.</p>",
    "module": "ngx_http_proxy_module",
    "link": "http/ngx_http_proxy_module.html#proxy_ssl_protocols",
    "name": "proxy_ssl_protocols"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_ssl_server_name</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>proxy_ssl_server_name off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.7.0.</p>",
    "doc": "<p>Enables or disables passing of the server name through <a href=\"http://en.wikipedia.org/wiki/Server_Name_Indication\">TLS Server Name Indication extension</a> (SNI, RFC 6066) when establishing a connection with the proxied HTTPS server.</p>",
    "module": "ngx_http_proxy_module",
    "link": "http/ngx_http_proxy_module.html#proxy_ssl_server_name",
    "name": "proxy_ssl_server_name"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_ssl_session_reuse</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>proxy_ssl_session_reuse on;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Determines whether SSL sessions can be reused when working with the proxied server. If the errors “<code>SSL3_GET_FINISHED:digest check failed</code>” appear in the logs, try disabling session reuse.</p>",
    "module": "ngx_http_proxy_module",
    "link": "http/ngx_http_proxy_module.html#proxy_ssl_session_reuse",
    "name": "proxy_ssl_session_reuse"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_ssl_trusted_certificate</strong> <code><i>file</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.7.0.</p>",
    "doc": "<p>Specifies a <code><i>file</i></code> with trusted CA certificates in the PEM format used to <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_ssl_verify\">verify</a> the certificate of the proxied HTTPS server.</p>",
    "module": "ngx_http_proxy_module",
    "link": "http/ngx_http_proxy_module.html#proxy_ssl_trusted_certificate",
    "name": "proxy_ssl_trusted_certificate"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_ssl_verify</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>proxy_ssl_verify off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.7.0.</p>",
    "doc": "<p>Enables or disables verification of the proxied HTTPS server certificate.</p>",
    "module": "ngx_http_proxy_module",
    "link": "http/ngx_http_proxy_module.html#proxy_ssl_verify",
    "name": "proxy_ssl_verify"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_ssl_verify_depth</strong> <code><i>number</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>proxy_ssl_verify_depth 1;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.7.0.</p>",
    "doc": "<p>Sets the verification depth in the proxied HTTPS server certificates chain.</p>",
    "module": "ngx_http_proxy_module",
    "link": "http/ngx_http_proxy_module.html#proxy_ssl_verify_depth",
    "name": "proxy_ssl_verify_depth"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_store</strong> <code>on</code> | <code>off</code> | <code><i>string</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>proxy_store off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Enables saving of files to a disk. The <code>on</code> parameter saves files with paths corresponding to the directives <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#alias\">alias</a> or <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#root\">root</a>. The <code>off</code> parameter disables saving of files. In addition, the file name can be set explicitly using the <code><i>string</i></code> with variables:</p><blockquote class=\"example\"><pre>proxy_store /data/www$original_uri;\n</pre></blockquote><p>The modification time of files is set according to the received “Last-Modified” response header field. The response is first written to a temporary file, and then the file is renamed. Starting from version 0.8.9, temporary files and the persistent store can be put on different file systems. However, be aware that in this case a file is copied across two file systems instead of the cheap renaming operation. It is thus recommended that for any given location both saved files and a directory holding temporary files, set by the <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_temp_path\">proxy_temp_path</a> directive, are put on the same file system.</p><p>This directive can be used to create local copies of static unchangeable files, e.g.:</p><blockquote class=\"example\"><pre>location /images/ {\n    root               /data/www;\n    error_page         404 = /fetch$uri;\n}\n\nlocation /fetch/ {\n    internal;\n\n    proxy_pass         http://backend/;\n    proxy_store        on;\n    proxy_store_access user:rw group:rw all:r;\n    proxy_temp_path    /data/temp;\n\n    alias              /data/www/;\n}\n</pre></blockquote><p>or like this:</p><blockquote class=\"example\"><pre>location /images/ {\n    root               /data/www;\n    error_page         404 = @fetch;\n}\n\nlocation @fetch {\n    internal;\n\n    proxy_pass         http://backend;\n    proxy_store        on;\n    proxy_store_access user:rw group:rw all:r;\n    proxy_temp_path    /data/temp;\n\n    root               /data/www;\n}\n</pre></blockquote>",
    "module": "ngx_http_proxy_module",
    "link": "http/ngx_http_proxy_module.html#proxy_store",
    "name": "proxy_store"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_store_access</strong> <code><i>users</i></code>:<code><i>permissions</i></code> ...;</code><br></td></tr><tr><th>Default:</th><td><pre>proxy_store_access user:rw;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets access permissions for newly created files and directories, e.g.:</p><blockquote class=\"example\"><pre>proxy_store_access user:rw group:rw all:r;\n</pre></blockquote><p>If any <code>group</code> or <code>all</code> access permissions are specified then <code>user</code> permissions may be omitted:</p><blockquote class=\"example\"><pre>proxy_store_access group:rw all:r;\n</pre></blockquote>",
    "module": "ngx_http_proxy_module",
    "link": "http/ngx_http_proxy_module.html#proxy_store_access",
    "name": "proxy_store_access"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_temp_file_write_size</strong> <code><i>size</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>proxy_temp_file_write_size 8k|16k;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Limits the <code><i>size</i></code> of data written to a temporary file at a time, when buffering of responses from the proxied server to temporary files is enabled. By default, <code><i>size</i></code> is limited by two buffers set by the <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_buffer_size\">proxy_buffer_size</a> and <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_buffers\">proxy_buffers</a> directives. The maximum size of a temporary file is set by the <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_max_temp_file_size\">proxy_max_temp_file_size</a> directive.</p>",
    "module": "ngx_http_proxy_module",
    "link": "http/ngx_http_proxy_module.html#proxy_temp_file_write_size",
    "name": "proxy_temp_file_write_size"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_temp_path</strong> <code><i>path</i></code> [<code><i>level1</i></code> [<code><i>level2</i></code> [<code><i>level3</i></code>]]];</code><br></td></tr><tr><th>Default:</th><td><pre>proxy_temp_path proxy_temp;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Defines a directory for storing temporary files with data received from proxied servers. Up to three-level subdirectory hierarchy can be used underneath the specified directory. For example, in the following configuration</p><blockquote class=\"example\"><pre>proxy_temp_path /spool/nginx/proxy_temp 1 2;\n</pre></blockquote><p>a temporary file might look like this:</p><blockquote class=\"example\"><pre>/spool/nginx/proxy_temp/<strong>7</strong>/<strong>45</strong>/00000123<strong>457</strong>\n</pre></blockquote><p>See also the <code>use_temp_path</code> parameter of the <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_cache_path\">proxy_cache_path</a> directive.</p>",
    "module": "ngx_http_proxy_module",
    "link": "http/ngx_http_proxy_module.html#proxy_temp_path",
    "name": "proxy_temp_path"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>random_index</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>random_index off;</pre></td></tr><tr><th>Context:</th><td><code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Enables or disables module processing in a surrounding location.</p>",
    "module": "ngx_http_random_index_module",
    "link": "http/ngx_http_random_index_module.html#random_index",
    "name": "random_index"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>set_real_ip_from</strong> <code><i>address</i></code> | <code><i>CIDR</i></code> | <code>unix:</code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Defines trusted addresses that are known to send correct replacement addresses. If the special value <code>unix:</code> is specified, all UNIX-domain sockets will be trusted. Trusted addresses may also be specified using a hostname (1.13.1).</p><blockquote class=\"note\">IPv6 addresses are supported starting from versions 1.3.0 and 1.2.1.</blockquote>",
    "module": "ngx_http_realip_module",
    "link": "http/ngx_http_realip_module.html#set_real_ip_from",
    "name": "set_real_ip_from"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>real_ip_header</strong> <code><i>field</i></code> | <code>X-Real-IP</code> | <code>X-Forwarded-For</code> | <code>proxy_protocol</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>real_ip_header X-Real-IP;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Defines the request header field whose value will be used to replace the client address.</p><p>The request header field value that contains an optional port is also used to replace the client port (1.11.0). The address and port should be specified according to <a href=\"https://datatracker.ietf.org/doc/html/rfc3986\">RFC 3986</a>.</p><p>The <code>proxy_protocol</code> parameter (1.5.12) changes the client address to the one from the PROXY protocol header. The PROXY protocol must be previously enabled by setting the <code>proxy_protocol</code> parameter in the <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#listen\">listen</a> directive.</p>",
    "module": "ngx_http_realip_module",
    "link": "http/ngx_http_realip_module.html#real_ip_header",
    "name": "real_ip_header"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>real_ip_recursive</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>real_ip_recursive off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in versions 1.3.0 and 1.2.1.</p>",
    "doc": "<p>If recursive search is disabled, the original client address that matches one of the trusted addresses is replaced by the last address sent in the request header field defined by the <a href=\"https://nginx.org/en/docs/http/ngx_http_realip_module.html#real_ip_header\">real_ip_header</a> directive. If recursive search is enabled, the original client address that matches one of the trusted addresses is replaced by the last non-trusted address sent in the request header field.</p>",
    "module": "ngx_http_realip_module",
    "link": "http/ngx_http_realip_module.html#real_ip_recursive",
    "name": "real_ip_recursive"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>referer_hash_bucket_size</strong> <code><i>size</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>referer_hash_bucket_size 64;</pre></td></tr><tr><th>Context:</th><td><code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.0.5.</p>",
    "doc": "<p>Sets the bucket size for the valid referers hash tables. The details of setting up hash tables are provided in a separate <a href=\"https://nginx.org/en/docs/hash.html\">document</a>.</p>",
    "module": "ngx_http_referer_module",
    "link": "http/ngx_http_referer_module.html#referer_hash_bucket_size",
    "name": "referer_hash_bucket_size"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>referer_hash_max_size</strong> <code><i>size</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>referer_hash_max_size 2048;</pre></td></tr><tr><th>Context:</th><td><code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.0.5.</p>",
    "doc": "<p>Sets the maximum <code><i>size</i></code> of the valid referers hash tables. The details of setting up hash tables are provided in a separate <a href=\"https://nginx.org/en/docs/hash.html\">document</a>.</p>",
    "module": "ngx_http_referer_module",
    "link": "http/ngx_http_referer_module.html#referer_hash_max_size",
    "name": "referer_hash_max_size"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>valid_referers</strong> <code>none</code> | <code>blocked</code> | <code>server_names</code> | <code><i>string</i></code> ...;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Specifies the “Referer” request header field values that will cause the embedded <code>$invalid_referer</code> variable to be set to an empty string. Otherwise, the variable will be set to “<code>1</code>”. Search for a match is case-insensitive.</p><p>Parameters can be as follows:</p><dl class=\"compact\"><dt><code>none</code></dt><dd>the “Referer” field is missing in the request header;</dd><dt><code>blocked</code></dt><dd>the “Referer” field is present in the request header, but its value has been deleted by a firewall or proxy server; such values are strings that do not start with “<code>http://</code>” or “<code>https://</code>”;</dd><dt><code>server_names</code></dt><dd>the “Referer” request header field contains one of the server names;</dd><dt>arbitrary string</dt><dd>defines a server name and an optional URI prefix. A server name can have an “<code>*</code>” at the beginning or end. During the checking, the server’s port in the “Referer” field is ignored;</dd><dt>regular expression</dt><dd>the first symbol should be a “<code>~</code>”. It should be noted that an expression will be matched against the text starting after the “<code>http://</code>” or “<code>https://</code>”.</dd></dl><p>Example:</p><blockquote class=\"example\"><pre>valid_referers none blocked server_names\n               *.example.com example.* www.example.org/galleries/\n               ~\\.google\\.;\n</pre></blockquote>",
    "module": "ngx_http_referer_module",
    "link": "http/ngx_http_referer_module.html#valid_referers",
    "name": "valid_referers"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>break</strong>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>server</code>, <code>location</code>, <code>if</code><br></td></tr></tbody></table>",
    "doc": "<p>Stops processing the current set of <code>ngx_http_rewrite_module</code> directives.</p><p>If a directive is specified inside the <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#location\">location</a>, further processing of the request continues in this location.</p><p>Example:</p><blockquote class=\"example\"><pre>if ($slow) {\n    limit_rate 10k;\n    break;\n}\n</pre></blockquote>",
    "module": "ngx_http_rewrite_module",
    "link": "http/ngx_http_rewrite_module.html#break",
    "name": "break"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>if</strong> (<code><i>condition</i></code>) { ... }</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>The specified <code><i>condition</i></code> is evaluated. If true, this module directives specified inside the braces are executed, and the request is assigned the configuration inside the <code>if</code> directive. Configurations inside the <code>if</code> directives are inherited from the previous configuration level.</p><p>A condition may be any of the following:</p>",
    "module": "ngx_http_rewrite_module",
    "link": "http/ngx_http_rewrite_module.html#if",
    "name": "if"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>return</strong> <code><i>code</i></code> [<code><i>text</i></code>];</code><br><code><strong>return</strong> <code><i>code</i></code> <code><i>URL</i></code>;</code><br><code><strong>return</strong> <code><i>URL</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>server</code>, <code>location</code>, <code>if</code><br></td></tr></tbody></table>",
    "doc": "<p>Stops processing and returns the specified <code><i>code</i></code> to a client. The non-standard code 444 closes a connection without sending a response header.</p><p>Starting from version 0.8.42, it is possible to specify either a redirect URL (for codes 301, 302, 303, 307, and 308) or the response body <code><i>text</i></code> (for other codes). A response body text and redirect URL can contain variables. As a special case, a redirect URL can be specified as a URI local to this server, in which case the full redirect URL is formed according to the request scheme (<code>$scheme</code>) and the <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#server_name_in_redirect\">server_name_in_redirect</a> and <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#port_in_redirect\">port_in_redirect</a> directives.</p><p>In addition, a <code><i>URL</i></code> for temporary redirect with the code 302 can be specified as the sole parameter. Such a parameter should start with the “<code>http://</code>”, “<code>https://</code>”, or “<code>$scheme</code>” string. A <code><i>URL</i></code> can contain variables.</p><blockquote class=\"note\">Only the following codes could be returned before version 0.7.51: 204, 400, 402&nbsp;— 406, 408, 410, 411, 413, 416, and 500&nbsp;— 504.</blockquote><blockquote class=\"note\">The code 307 was not treated as a redirect until versions 1.1.16 and 1.0.13.</blockquote><blockquote class=\"note\">The code 308 was not treated as a redirect until version 1.13.0.</blockquote><p>See also the <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#error_page\">error_page</a> directive.</p>",
    "module": "ngx_http_rewrite_module",
    "link": "http/ngx_http_rewrite_module.html#return",
    "name": "return"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>rewrite</strong> <code><i>regex</i></code> <code><i>replacement</i></code> [<code><i>flag</i></code>];</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>server</code>, <code>location</code>, <code>if</code><br></td></tr></tbody></table>",
    "doc": "<p>If the specified regular expression matches a request URI, URI is changed as specified in the <code><i>replacement</i></code> string. The <code>rewrite</code> directives are executed sequentially in order of their appearance in the configuration file. It is possible to terminate further processing of the directives using flags. If a replacement string starts with “<code>http://</code>”, “<code>https://</code>”, or “<code>$scheme</code>”, the processing stops and the redirect is returned to a client.</p><p>An optional <code><i>flag</i></code> parameter can be one of:</p><dl class=\"compact\"><dt><code>last</code></dt><dd>stops processing the current set of <code>ngx_http_rewrite_module</code> directives and starts a search for a new location matching the changed URI;</dd><dt><code>break</code></dt><dd>stops processing the current set of <code>ngx_http_rewrite_module</code> directives as with the <a href=\"https://nginx.org/en/docs/http/ngx_http_rewrite_module.html#break\">break</a> directive;</dd><dt><code>redirect</code></dt><dd>returns a temporary redirect with the 302 code; used if a replacement string does not start with “<code>http://</code>”, “<code>https://</code>”, or “<code>$scheme</code>”;</dd><dt><code>permanent</code></dt><dd>returns a permanent redirect with the 301 code.</dd></dl><p>The full redirect URL is formed according to the request scheme (<code>$scheme</code>) and the <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#server_name_in_redirect\">server_name_in_redirect</a> and <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#port_in_redirect\">port_in_redirect</a> directives.</p><p>Example:</p><blockquote class=\"example\"><pre>server {\n    ...\n    rewrite ^(/download/.*)/media/(.*)\\..*$ $1/mp3/$2.mp3 last;\n    rewrite ^(/download/.*)/audio/(.*)\\..*$ $1/mp3/$2.ra  last;\n    return  403;\n    ...\n}\n</pre></blockquote><p>But if these directives are put inside the “<code>/download/</code>” location, the <code>last</code> flag should be replaced by <code>break</code>, or otherwise nginx will make 10 cycles and return the 500 error:</p><blockquote class=\"example\"><pre>location /download/ {\n    rewrite ^(/download/.*)/media/(.*)\\..*$ $1/mp3/$2.mp3 break;\n    rewrite ^(/download/.*)/audio/(.*)\\..*$ $1/mp3/$2.ra  break;\n    return  403;\n}\n</pre></blockquote><p>If a <code><i>replacement</i></code> string includes the new request arguments, the previous request arguments are appended after them. If this is undesired, putting a question mark at the end of a replacement string avoids having them appended, for example:</p><blockquote class=\"example\"><pre>rewrite ^/users/(.*)$ /show?user=$1? last;\n</pre></blockquote><p>If a regular expression includes the “<code>}</code>” or “<code>;</code>” characters, the whole expressions should be enclosed in single or double quotes.</p>",
    "module": "ngx_http_rewrite_module",
    "link": "http/ngx_http_rewrite_module.html#rewrite",
    "name": "rewrite"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>rewrite_log</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>rewrite_log off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code>, <code>if</code><br></td></tr></tbody></table>",
    "doc": "<p>Enables or disables logging of <code>ngx_http_rewrite_module</code> module directives processing results into the <a href=\"https://nginx.org/en/docs/ngx_core_module.html#error_log\">error_log</a> at the <code>notice</code> level.</p>",
    "module": "ngx_http_rewrite_module",
    "link": "http/ngx_http_rewrite_module.html#rewrite_log",
    "name": "rewrite_log"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>set</strong> <code><i>$variable</i></code> <code><i>value</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>server</code>, <code>location</code>, <code>if</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets a <code><i>value</i></code> for the specified <code><i>variable</i></code>. The <code><i>value</i></code> can contain text, variables, and their combination.</p>",
    "module": "ngx_http_rewrite_module",
    "link": "http/ngx_http_rewrite_module.html#set",
    "name": "set"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>uninitialized_variable_warn</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>uninitialized_variable_warn on;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code>, <code>if</code><br></td></tr></tbody></table>",
    "doc": "<p>Controls whether warnings about uninitialized variables are logged.</p>",
    "module": "ngx_http_rewrite_module",
    "link": "http/ngx_http_rewrite_module.html#uninitialized_variable_warn",
    "name": "uninitialized_variable_warn"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>scgi_bind</strong> <code><i>address</i></code> [<code>transparent</code>] | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Makes outgoing connections to an SCGI server originate from the specified local IP address with an optional port (1.11.2). Parameter value can contain variables (1.3.12). The special value <code>off</code> (1.3.12) cancels the effect of the <code>scgi_bind</code> directive inherited from the previous configuration level, which allows the system to auto-assign the local IP address and port.</p>",
    "module": "ngx_http_scgi_module",
    "link": "http/ngx_http_scgi_module.html#scgi_bind",
    "name": "scgi_bind"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>scgi_buffer_size</strong> <code><i>size</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>scgi_buffer_size 4k|8k;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets the <code><i>size</i></code> of the buffer used for reading the first part of the response received from the SCGI server. This part usually contains a small response header. By default, the buffer size is equal to one memory page. This is either 4K or 8K, depending on a platform. It can be made smaller, however.</p>",
    "module": "ngx_http_scgi_module",
    "link": "http/ngx_http_scgi_module.html#scgi_buffer_size",
    "name": "scgi_buffer_size"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>scgi_buffering</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>scgi_buffering on;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Enables or disables buffering of responses from the SCGI server.</p><p>When buffering is enabled, nginx receives a response from the SCGI server as soon as possible, saving it into the buffers set by the <a href=\"https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_buffer_size\">scgi_buffer_size</a> and <a href=\"https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_buffers\">scgi_buffers</a> directives. If the whole response does not fit into memory, a part of it can be saved to a <a href=\"https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_temp_path\">temporary file</a> on the disk. Writing to temporary files is controlled by the <a href=\"https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_max_temp_file_size\">scgi_max_temp_file_size</a> and <a href=\"https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_temp_file_write_size\">scgi_temp_file_write_size</a> directives.</p><p>When buffering is disabled, the response is passed to a client synchronously, immediately as it is received. nginx will not try to read the whole response from the SCGI server. The maximum size of the data that nginx can receive from the server at a time is set by the <a href=\"https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_buffer_size\">scgi_buffer_size</a> directive.</p><p>Buffering can also be enabled or disabled by passing “<code>yes</code>” or “<code>no</code>” in the “X-Accel-Buffering” response header field. This capability can be disabled using the <a href=\"https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_ignore_headers\">scgi_ignore_headers</a> directive.</p>",
    "module": "ngx_http_scgi_module",
    "link": "http/ngx_http_scgi_module.html#scgi_buffering",
    "name": "scgi_buffering"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>scgi_buffers</strong> <code><i>number</i></code> <code><i>size</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>scgi_buffers 8 4k|8k;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets the <code><i>number</i></code> and <code><i>size</i></code> of the buffers used for reading a response from the SCGI server, for a single connection. By default, the buffer size is equal to one memory page. This is either 4K or 8K, depending on a platform.</p>",
    "module": "ngx_http_scgi_module",
    "link": "http/ngx_http_scgi_module.html#scgi_buffers",
    "name": "scgi_buffers"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>scgi_busy_buffers_size</strong> <code><i>size</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>scgi_busy_buffers_size 8k|16k;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>When <a href=\"https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_buffering\">buffering</a> of responses from the SCGI server is enabled, limits the total <code><i>size</i></code> of buffers that can be busy sending a response to the client while the response is not yet fully read. In the meantime, the rest of the buffers can be used for reading the response and, if needed, buffering part of the response to a temporary file. By default, <code><i>size</i></code> is limited by the size of two buffers set by the <a href=\"https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_buffer_size\">scgi_buffer_size</a> and <a href=\"https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_buffers\">scgi_buffers</a> directives.</p>",
    "module": "ngx_http_scgi_module",
    "link": "http/ngx_http_scgi_module.html#scgi_busy_buffers_size",
    "name": "scgi_busy_buffers_size"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>scgi_cache</strong> <code><i>zone</i></code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>scgi_cache off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Defines a shared memory zone used for caching. The same zone can be used in several places. Parameter value can contain variables (1.7.9). The <code>off</code> parameter disables caching inherited from the previous configuration level.</p>",
    "module": "ngx_http_scgi_module",
    "link": "http/ngx_http_scgi_module.html#scgi_cache",
    "name": "scgi_cache"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>scgi_cache_background_update</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>scgi_cache_background_update off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.11.10.</p>",
    "doc": "<p>Allows starting a background subrequest to update an expired cache item, while a stale cached response is returned to the client. Note that it is necessary to <a href=\"https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_cache_use_stale_updating\">allow</a> the usage of a stale cached response when it is being updated.</p>",
    "module": "ngx_http_scgi_module",
    "link": "http/ngx_http_scgi_module.html#scgi_cache_background_update",
    "name": "scgi_cache_background_update"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>scgi_cache_bypass</strong> <code><i>string</i></code> ...;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Defines conditions under which the response will not be taken from a cache. If at least one value of the string parameters is not empty and is not equal to “0” then the response will not be taken from the cache:</p><blockquote class=\"example\"><pre>scgi_cache_bypass $cookie_nocache $arg_nocache$arg_comment;\nscgi_cache_bypass $http_pragma    $http_authorization;\n</pre></blockquote><p>Can be used along with the <a href=\"https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_no_cache\">scgi_no_cache</a> directive.</p>",
    "module": "ngx_http_scgi_module",
    "link": "http/ngx_http_scgi_module.html#scgi_cache_bypass",
    "name": "scgi_cache_bypass"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>scgi_cache_key</strong> <code><i>string</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Defines a key for caching, for example</p><blockquote class=\"example\"><pre>scgi_cache_key localhost:9000$request_uri;\n</pre></blockquote>",
    "module": "ngx_http_scgi_module",
    "link": "http/ngx_http_scgi_module.html#scgi_cache_key",
    "name": "scgi_cache_key"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>scgi_cache_lock</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>scgi_cache_lock off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.1.12.</p>",
    "doc": "<p>When enabled, only one request at a time will be allowed to populate a new cache element identified according to the <a href=\"https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_cache_key\">scgi_cache_key</a> directive by passing a request to an SCGI server. Other requests of the same cache element will either wait for a response to appear in the cache or the cache lock for this element to be released, up to the time set by the <a href=\"https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_cache_lock_timeout\">scgi_cache_lock_timeout</a> directive.</p>",
    "module": "ngx_http_scgi_module",
    "link": "http/ngx_http_scgi_module.html#scgi_cache_lock",
    "name": "scgi_cache_lock"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>scgi_cache_lock_age</strong> <code><i>time</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>scgi_cache_lock_age 5s;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.7.8.</p>",
    "doc": "<p>If the last request passed to the SCGI server for populating a new cache element has not completed for the specified <code><i>time</i></code>, one more request may be passed to the SCGI server.</p>",
    "module": "ngx_http_scgi_module",
    "link": "http/ngx_http_scgi_module.html#scgi_cache_lock_age",
    "name": "scgi_cache_lock_age"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>scgi_cache_lock_timeout</strong> <code><i>time</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>scgi_cache_lock_timeout 5s;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.1.12.</p>",
    "doc": "<p>Sets a timeout for <a href=\"https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_cache_lock\">scgi_cache_lock</a>. When the <code><i>time</i></code> expires, the request will be passed to the SCGI server, however, the response will not be cached.</p><blockquote class=\"note\">Before 1.7.8, the response could be cached.</blockquote>",
    "module": "ngx_http_scgi_module",
    "link": "http/ngx_http_scgi_module.html#scgi_cache_lock_timeout",
    "name": "scgi_cache_lock_timeout"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>scgi_cache_max_range_offset</strong> <code><i>number</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.11.6.</p>",
    "doc": "<p>Sets an offset in bytes for byte-range requests. If the range is beyond the offset, the range request will be passed to the SCGI server and the response will not be cached.</p>",
    "module": "ngx_http_scgi_module",
    "link": "http/ngx_http_scgi_module.html#scgi_cache_max_range_offset",
    "name": "scgi_cache_max_range_offset"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>scgi_cache_methods</strong> <code>GET</code> | <code>HEAD</code> | <code>POST</code> ...;</code><br></td></tr><tr><th>Default:</th><td><pre>scgi_cache_methods GET HEAD;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>If the client request method is listed in this directive then the response will be cached. “<code>GET</code>” and “<code>HEAD</code>” methods are always added to the list, though it is recommended to specify them explicitly. See also the <a href=\"https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_no_cache\">scgi_no_cache</a> directive.</p>",
    "module": "ngx_http_scgi_module",
    "link": "http/ngx_http_scgi_module.html#scgi_cache_methods",
    "name": "scgi_cache_methods"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>scgi_cache_min_uses</strong> <code><i>number</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>scgi_cache_min_uses 1;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets the <code><i>number</i></code> of requests after which the response will be cached.</p>",
    "module": "ngx_http_scgi_module",
    "link": "http/ngx_http_scgi_module.html#scgi_cache_min_uses",
    "name": "scgi_cache_min_uses"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>scgi_cache_path</strong> <code><i>path</i></code> [<code>levels</code>=<code><i>levels</i></code>] [<code>use_temp_path</code>=<code>on</code>|<code>off</code>] <code>keys_zone</code>=<code><i>name</i></code>:<code><i>size</i></code> [<code>inactive</code>=<code><i>time</i></code>] [<code>max_size</code>=<code><i>size</i></code>] [<code>min_free</code>=<code><i>size</i></code>] [<code>manager_files</code>=<code><i>number</i></code>] [<code>manager_sleep</code>=<code><i>time</i></code>] [<code>manager_threshold</code>=<code><i>time</i></code>] [<code>loader_files</code>=<code><i>number</i></code>] [<code>loader_sleep</code>=<code><i>time</i></code>] [<code>loader_threshold</code>=<code><i>time</i></code>] [<code>purger</code>=<code>on</code>|<code>off</code>] [<code>purger_files</code>=<code><i>number</i></code>] [<code>purger_sleep</code>=<code><i>time</i></code>] [<code>purger_threshold</code>=<code><i>time</i></code>];</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets the path and other parameters of a cache. Cache data are stored in files. The file name in a cache is a result of applying the MD5 function to the <a href=\"https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_cache_key\">cache key</a>. The <code>levels</code> parameter defines hierarchy levels of a cache: from 1 to 3, each level accepts values 1 or 2. For example, in the following configuration</p><blockquote class=\"example\"><pre>scgi_cache_path /data/nginx/cache levels=1:2 keys_zone=one:10m;\n</pre></blockquote><p>file names in a cache will look like this:</p><blockquote class=\"example\"><pre>/data/nginx/cache/<strong>c</strong>/<strong>29</strong>/b7f54b2df7773722d382f4809d650<strong>29c</strong>\n</pre></blockquote><p>A cached response is first written to a temporary file, and then the file is renamed. Starting from version 0.8.9, temporary files and the cache can be put on different file systems. However, be aware that in this case a file is copied across two file systems instead of the cheap renaming operation. It is thus recommended that for any given location both cache and a directory holding temporary files are put on the same file system. A directory for temporary files is set based on the <code>use_temp_path</code> parameter (1.7.10). If this parameter is omitted or set to the value <code>on</code>, the directory set by the <a href=\"https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_temp_path\">scgi_temp_path</a> directive for the given location will be used. If the value is set to <code>off</code>, temporary files will be put directly in the cache directory.</p><p>In addition, all active keys and information about data are stored in a shared memory zone, whose <code><i>name</i></code> and <code><i>size</i></code> are configured by the <code>keys_zone</code> parameter. One megabyte zone can store about 8 thousand keys.</p><blockquote class=\"note\">As part of <a href=\"http://nginx.com/products/\">commercial subscription</a>, the shared memory zone also stores extended cache <a href=\"https://nginx.org/en/docs/http/ngx_http_api_module.html#http_caches_\">information</a>, thus, it is required to specify a larger zone size for the same number of keys. For example, one megabyte zone can store about 4 thousand keys.</blockquote><p>Cached data that are not accessed during the time specified by the <code>inactive</code> parameter get removed from the cache regardless of their freshness. By default, <code>inactive</code> is set to 10 minutes.</p>",
    "module": "ngx_http_scgi_module",
    "link": "http/ngx_http_scgi_module.html#scgi_cache_path",
    "name": "scgi_cache_path"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>scgi_cache_purge</strong> string ...;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.5.7.</p>",
    "doc": "<p>Defines conditions under which the request will be considered a cache purge request. If at least one value of the string parameters is not empty and is not equal to “0” then the cache entry with a corresponding <a href=\"https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_cache_key\">cache key</a> is removed. The result of successful operation is indicated by returning the 204 (No Content) response.</p><p>If the <a href=\"https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_cache_key\">cache key</a> of a purge request ends with an asterisk (“<code>*</code>”), all cache entries matching the wildcard key will be removed from the cache. However, these entries will remain on the disk until they are deleted for either <a href=\"https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_cache_path\">inactivity</a>, or processed by the <a href=\"https://nginx.org/en/docs/http/ngx_http_scgi_module.html#purger\">cache purger</a> (1.7.12), or a client attempts to access them.</p><p>Example configuration:</p><blockquote class=\"example\"><pre>scgi_cache_path /data/nginx/cache keys_zone=cache_zone:10m;\n\nmap $request_method $purge_method {\n    PURGE   1;\n    default 0;\n}\n\nserver {\n    ...\n    location / {\n        scgi_pass        backend;\n        scgi_cache       cache_zone;\n        scgi_cache_key   $uri;\n        scgi_cache_purge $purge_method;\n    }\n}\n</pre></blockquote><blockquote class=\"note\">This functionality is available as part of our <a href=\"http://nginx.com/products/\">commercial subscription</a>.</blockquote>",
    "module": "ngx_http_scgi_module",
    "link": "http/ngx_http_scgi_module.html#scgi_cache_purge",
    "name": "scgi_cache_purge"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>scgi_cache_revalidate</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>scgi_cache_revalidate off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.5.7.</p>",
    "doc": "<p>Enables revalidation of expired cache items using conditional requests with the “If-Modified-Since” and “If-None-Match” header fields.</p>",
    "module": "ngx_http_scgi_module",
    "link": "http/ngx_http_scgi_module.html#scgi_cache_revalidate",
    "name": "scgi_cache_revalidate"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>scgi_cache_use_stale</strong> <code>error</code> | <code>timeout</code> | <code>invalid_header</code> | <code>updating</code> | <code>http_500</code> | <code>http_503</code> | <code>http_403</code> | <code>http_404</code> | <code>http_429</code> | <code>off</code> ...;</code><br></td></tr><tr><th>Default:</th><td><pre>scgi_cache_use_stale off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Determines in which cases a stale cached response can be used when an error occurs during communication with the SCGI server. The directive’s parameters match the parameters of the <a href=\"https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_next_upstream\">scgi_next_upstream</a> directive.</p><p>The <code>error</code> parameter also permits using a stale cached response if an SCGI server to process a request cannot be selected.</p>",
    "module": "ngx_http_scgi_module",
    "link": "http/ngx_http_scgi_module.html#scgi_cache_use_stale",
    "name": "scgi_cache_use_stale"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>scgi_cache_valid</strong> [<code><i>code</i></code> ...] <code><i>time</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets caching time for different response codes. For example, the following directives</p><blockquote class=\"example\"><pre>scgi_cache_valid 200 302 10m;\nscgi_cache_valid 404      1m;\n</pre></blockquote><p>set 10 minutes of caching for responses with codes 200 and 302 and 1 minute for responses with code 404.</p><p>If only caching <code><i>time</i></code> is specified</p><blockquote class=\"example\"><pre>scgi_cache_valid 5m;\n</pre></blockquote><p>then only 200, 301, and 302 responses are cached.</p><p>In addition, the <code>any</code> parameter can be specified to cache any responses:</p><blockquote class=\"example\"><pre>scgi_cache_valid 200 302 10m;\nscgi_cache_valid 301      1h;\nscgi_cache_valid any      1m;\n</pre></blockquote><p>Parameters of caching can also be set directly in the response header. This has higher priority than setting of caching time using the directive.</p>",
    "module": "ngx_http_scgi_module",
    "link": "http/ngx_http_scgi_module.html#scgi_cache_valid",
    "name": "scgi_cache_valid"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>scgi_connect_timeout</strong> <code><i>time</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>scgi_connect_timeout 60s;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Defines a timeout for establishing a connection with an SCGI server. It should be noted that this timeout cannot usually exceed 75 seconds.</p>",
    "module": "ngx_http_scgi_module",
    "link": "http/ngx_http_scgi_module.html#scgi_connect_timeout",
    "name": "scgi_connect_timeout"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>scgi_force_ranges</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>scgi_force_ranges off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.7.7.</p>",
    "doc": "<p>Enables byte-range support for both cached and uncached responses from the SCGI server regardless of the “Accept-Ranges” field in these responses.</p>",
    "module": "ngx_http_scgi_module",
    "link": "http/ngx_http_scgi_module.html#scgi_force_ranges",
    "name": "scgi_force_ranges"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>scgi_hide_header</strong> <code><i>field</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>By default, nginx does not pass the header fields “Status” and “X-Accel-...” from the response of an SCGI server to a client. The <code>scgi_hide_header</code> directive sets additional fields that will not be passed. If, on the contrary, the passing of fields needs to be permitted, the <a href=\"https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_pass_header\">scgi_pass_header</a> directive can be used.</p>",
    "module": "ngx_http_scgi_module",
    "link": "http/ngx_http_scgi_module.html#scgi_hide_header",
    "name": "scgi_hide_header"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>scgi_ignore_client_abort</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>scgi_ignore_client_abort off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Determines whether the connection with an SCGI server should be closed when a client closes the connection without waiting for a response.</p>",
    "module": "ngx_http_scgi_module",
    "link": "http/ngx_http_scgi_module.html#scgi_ignore_client_abort",
    "name": "scgi_ignore_client_abort"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>scgi_ignore_headers</strong> <code><i>field</i></code> ...;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Disables processing of certain response header fields from the SCGI server. The following fields can be ignored: “X-Accel-Redirect”, “X-Accel-Expires”, “X-Accel-Limit-Rate” (1.1.6), “X-Accel-Buffering” (1.1.6), “X-Accel-Charset” (1.1.6), “Expires”, “Cache-Control”, “Set-Cookie” (0.8.44), and “Vary” (1.7.7).</p><p>If not disabled, processing of these header fields has the following effect:</p>",
    "module": "ngx_http_scgi_module",
    "link": "http/ngx_http_scgi_module.html#scgi_ignore_headers",
    "name": "scgi_ignore_headers"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>scgi_intercept_errors</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>scgi_intercept_errors off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Determines whether an SCGI server responses with codes greater than or equal to 300 should be passed to a client or be intercepted and redirected to nginx for processing with the <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#error_page\">error_page</a> directive.</p>",
    "module": "ngx_http_scgi_module",
    "link": "http/ngx_http_scgi_module.html#scgi_intercept_errors",
    "name": "scgi_intercept_errors"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>scgi_limit_rate</strong> <code><i>rate</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>scgi_limit_rate 0;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.7.7.</p>",
    "doc": "<p>Limits the speed of reading the response from the SCGI server. The <code><i>rate</i></code> is specified in bytes per second. The zero value disables rate limiting. The limit is set per a request, and so if nginx simultaneously opens two connections to the SCGI server, the overall rate will be twice as much as the specified limit. The limitation works only if <a href=\"https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_buffering\">buffering</a> of responses from the SCGI server is enabled.</p>",
    "module": "ngx_http_scgi_module",
    "link": "http/ngx_http_scgi_module.html#scgi_limit_rate",
    "name": "scgi_limit_rate"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>scgi_max_temp_file_size</strong> <code><i>size</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>scgi_max_temp_file_size 1024m;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>When <a href=\"https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_buffering\">buffering</a> of responses from the SCGI server is enabled, and the whole response does not fit into the buffers set by the <a href=\"https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_buffer_size\">scgi_buffer_size</a> and <a href=\"https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_buffers\">scgi_buffers</a> directives, a part of the response can be saved to a temporary file. This directive sets the maximum <code><i>size</i></code> of the temporary file. The size of data written to the temporary file at a time is set by the <a href=\"https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_temp_file_write_size\">scgi_temp_file_write_size</a> directive.</p><p>The zero value disables buffering of responses to temporary files.</p><blockquote class=\"note\">This restriction does not apply to responses that will be <a href=\"https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_cache\">cached</a> or <a href=\"https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_store\">stored</a> on disk.</blockquote>",
    "module": "ngx_http_scgi_module",
    "link": "http/ngx_http_scgi_module.html#scgi_max_temp_file_size",
    "name": "scgi_max_temp_file_size"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>scgi_next_upstream</strong> <code>error</code> | <code>timeout</code> | <code>invalid_header</code> | <code>http_500</code> | <code>http_503</code> | <code>http_403</code> | <code>http_404</code> | <code>http_429</code> | <code>non_idempotent</code> | <code>off</code> ...;</code><br></td></tr><tr><th>Default:</th><td><pre>scgi_next_upstream error timeout;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Specifies in which cases a request should be passed to the next server:</p><dl class=\"compact\"><dt><code>error</code></dt><dd>an error occurred while establishing a connection with the server, passing a request to it, or reading the response header;</dd><dt><code>timeout</code></dt><dd>a timeout has occurred while establishing a connection with the server, passing a request to it, or reading the response header;</dd><dt><code>invalid_header</code></dt><dd>a server returned an empty or invalid response;</dd><dt><code>http_500</code></dt><dd>a server returned a response with the code 500;</dd><dt><code>http_503</code></dt><dd>a server returned a response with the code 503;</dd><dt><code>http_403</code></dt><dd>a server returned a response with the code 403;</dd><dt><code>http_404</code></dt><dd>a server returned a response with the code 404;</dd><dt><code>http_429</code></dt><dd>a server returned a response with the code 429 (1.11.13);</dd><dt id=\"non_idempotent\"><code>non_idempotent</code></dt><dd>normally, requests with a <a href=\"https://datatracker.ietf.org/doc/html/rfc7231#section-4.2.2\">non-idempotent</a> method (<code>POST</code>, <code>LOCK</code>, <code>PATCH</code>) are not passed to the next server if a request has been sent to an upstream server (1.9.13); enabling this option explicitly allows retrying such requests;</dd><dt><code>off</code></dt><dd>disables passing a request to the next server.</dd></dl><p>One should bear in mind that passing a request to the next server is only possible if nothing has been sent to a client yet. That is, if an error or timeout occurs in the middle of the transferring of a response, fixing this is impossible.</p><p>The directive also defines what is considered an <a href=\"https://nginx.org/en/docs/http/ngx_http_upstream_module.html#max_fails\">unsuccessful attempt</a> of communication with a server. The cases of <code>error</code>, <code>timeout</code> and <code>invalid_header</code> are always considered unsuccessful attempts, even if they are not specified in the directive. The cases of <code>http_500</code>, <code>http_503</code>, and <code>http_429</code> are considered unsuccessful attempts only if they are specified in the directive. The cases of <code>http_403</code> and <code>http_404</code> are never considered unsuccessful attempts.</p><p>Passing a request to the next server can be limited by <a href=\"https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_next_upstream_tries\">the number of tries</a> and by <a href=\"https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_next_upstream_timeout\">time</a>.</p>",
    "module": "ngx_http_scgi_module",
    "link": "http/ngx_http_scgi_module.html#scgi_next_upstream",
    "name": "scgi_next_upstream"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>scgi_next_upstream_timeout</strong> <code><i>time</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>scgi_next_upstream_timeout 0;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.7.5.</p>",
    "doc": "<p>Limits the time during which a request can be passed to the <a href=\"https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_next_upstream\">next server</a>. The <code>0</code> value turns off this limitation.</p>",
    "module": "ngx_http_scgi_module",
    "link": "http/ngx_http_scgi_module.html#scgi_next_upstream_timeout",
    "name": "scgi_next_upstream_timeout"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>scgi_next_upstream_tries</strong> <code><i>number</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>scgi_next_upstream_tries 0;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.7.5.</p>",
    "doc": "<p>Limits the number of possible tries for passing a request to the <a href=\"https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_next_upstream\">next server</a>. The <code>0</code> value turns off this limitation.</p>",
    "module": "ngx_http_scgi_module",
    "link": "http/ngx_http_scgi_module.html#scgi_next_upstream_tries",
    "name": "scgi_next_upstream_tries"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>scgi_no_cache</strong> <code><i>string</i></code> ...;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Defines conditions under which the response will not be saved to a cache. If at least one value of the string parameters is not empty and is not equal to “0” then the response will not be saved:</p><blockquote class=\"example\"><pre>scgi_no_cache $cookie_nocache $arg_nocache$arg_comment;\nscgi_no_cache $http_pragma    $http_authorization;\n</pre></blockquote><p>Can be used along with the <a href=\"https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_cache_bypass\">scgi_cache_bypass</a> directive.</p>",
    "module": "ngx_http_scgi_module",
    "link": "http/ngx_http_scgi_module.html#scgi_no_cache",
    "name": "scgi_no_cache"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>scgi_param</strong> <code><i>parameter</i></code> <code><i>value</i></code> [<code>if_not_empty</code>];</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets a <code><i>parameter</i></code> that should be passed to the SCGI server. The <code><i>value</i></code> can contain text, variables, and their combination. These directives are inherited from the previous configuration level if and only if there are no <code>scgi_param</code> directives defined on the current level.</p><p>Standard <a href=\"https://datatracker.ietf.org/doc/html/rfc3875#section-4.1\">CGI environment variables</a> should be provided as SCGI headers, see the <code>scgi_params</code> file provided in the distribution:</p><blockquote class=\"example\"><pre>location / {\n    include scgi_params;\n    ...\n}\n</pre></blockquote><p>If the directive is specified with <code>if_not_empty</code> (1.1.11) then such a parameter will be passed to the server only if its value is not empty:</p><blockquote class=\"example\"><pre>scgi_param HTTPS $https if_not_empty;\n</pre></blockquote>",
    "module": "ngx_http_scgi_module",
    "link": "http/ngx_http_scgi_module.html#scgi_param",
    "name": "scgi_param"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>scgi_pass</strong> <code><i>address</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>location</code>, <code>if in location</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets the address of an SCGI server. The address can be specified as a domain name or IP address, and a port:</p><blockquote class=\"example\"><pre>scgi_pass localhost:9000;\n</pre></blockquote><p>or as a UNIX-domain socket path:</p><blockquote class=\"example\"><pre>scgi_pass unix:/tmp/scgi.socket;\n</pre></blockquote><p>If a domain name resolves to several addresses, all of them will be used in a round-robin fashion. In addition, an address can be specified as a <a href=\"https://nginx.org/en/docs/http/ngx_http_upstream_module.html\">server group</a>.</p><p>Parameter value can contain variables. In this case, if an address is specified as a domain name, the name is searched among the described <a href=\"https://nginx.org/en/docs/http/ngx_http_upstream_module.html\">server groups</a>, and, if not found, is determined using a <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#resolver\">resolver</a>.</p>",
    "module": "ngx_http_scgi_module",
    "link": "http/ngx_http_scgi_module.html#scgi_pass",
    "name": "scgi_pass"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>scgi_pass_header</strong> <code><i>field</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Permits passing <a href=\"https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_hide_header\">otherwise disabled</a> header fields from an SCGI server to a client.</p>",
    "module": "ngx_http_scgi_module",
    "link": "http/ngx_http_scgi_module.html#scgi_pass_header",
    "name": "scgi_pass_header"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>scgi_pass_request_body</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>scgi_pass_request_body on;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Indicates whether the original request body is passed to the SCGI server. See also the <a href=\"https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_pass_request_headers\">scgi_pass_request_headers</a> directive.</p>",
    "module": "ngx_http_scgi_module",
    "link": "http/ngx_http_scgi_module.html#scgi_pass_request_body",
    "name": "scgi_pass_request_body"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>scgi_pass_request_headers</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>scgi_pass_request_headers on;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Indicates whether the header fields of the original request are passed to the SCGI server. See also the <a href=\"https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_pass_request_body\">scgi_pass_request_body</a> directive.</p>",
    "module": "ngx_http_scgi_module",
    "link": "http/ngx_http_scgi_module.html#scgi_pass_request_headers",
    "name": "scgi_pass_request_headers"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>scgi_read_timeout</strong> <code><i>time</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>scgi_read_timeout 60s;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Defines a timeout for reading a response from the SCGI server. The timeout is set only between two successive read operations, not for the transmission of the whole response. If the SCGI server does not transmit anything within this time, the connection is closed.</p>",
    "module": "ngx_http_scgi_module",
    "link": "http/ngx_http_scgi_module.html#scgi_read_timeout",
    "name": "scgi_read_timeout"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>scgi_request_buffering</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>scgi_request_buffering on;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.7.11.</p>",
    "doc": "<p>Enables or disables buffering of a client request body.</p><p>When buffering is enabled, the entire request body is <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#client_body_buffer_size\">read</a> from the client before sending the request to an SCGI server.</p><p>When buffering is disabled, the request body is sent to the SCGI server immediately as it is received. In this case, the request cannot be passed to the <a href=\"https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_next_upstream\">next server</a> if nginx already started sending the request body.</p><p>When HTTP/1.1 chunked transfer encoding is used to send the original request body, the request body will be buffered regardless of the directive value.</p>",
    "module": "ngx_http_scgi_module",
    "link": "http/ngx_http_scgi_module.html#scgi_request_buffering",
    "name": "scgi_request_buffering"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>scgi_send_timeout</strong> <code><i>time</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>scgi_send_timeout 60s;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets a timeout for transmitting a request to the SCGI server. The timeout is set only between two successive write operations, not for the transmission of the whole request. If the SCGI server does not receive anything within this time, the connection is closed.</p>",
    "module": "ngx_http_scgi_module",
    "link": "http/ngx_http_scgi_module.html#scgi_send_timeout",
    "name": "scgi_send_timeout"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>scgi_socket_keepalive</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>scgi_socket_keepalive off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.15.6.</p>",
    "doc": "<p>Configures the “TCP keepalive” behavior for outgoing connections to an SCGI server. By default, the operating system’s settings are in effect for the socket. If the directive is set to the value “<code>on</code>”, the <code>SO_KEEPALIVE</code> socket option is turned on for the socket.</p>",
    "module": "ngx_http_scgi_module",
    "link": "http/ngx_http_scgi_module.html#scgi_socket_keepalive",
    "name": "scgi_socket_keepalive"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>scgi_store</strong> <code>on</code> | <code>off</code> | <code><i>string</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>scgi_store off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Enables saving of files to a disk. The <code>on</code> parameter saves files with paths corresponding to the directives <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#alias\">alias</a> or <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#root\">root</a>. The <code>off</code> parameter disables saving of files. In addition, the file name can be set explicitly using the <code><i>string</i></code> with variables:</p><blockquote class=\"example\"><pre>scgi_store /data/www$original_uri;\n</pre></blockquote><p>The modification time of files is set according to the received “Last-Modified” response header field. The response is first written to a temporary file, and then the file is renamed. Starting from version 0.8.9, temporary files and the persistent store can be put on different file systems. However, be aware that in this case a file is copied across two file systems instead of the cheap renaming operation. It is thus recommended that for any given location both saved files and a directory holding temporary files, set by the <a href=\"https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_temp_path\">scgi_temp_path</a> directive, are put on the same file system.</p><p>This directive can be used to create local copies of static unchangeable files, e.g.:</p><blockquote class=\"example\"><pre>location /images/ {\n    root              /data/www;\n    error_page        404 = /fetch$uri;\n}\n\nlocation /fetch/ {\n    internal;\n\n    scgi_pass         backend:9000;\n    ...\n\n    scgi_store        on;\n    scgi_store_access user:rw group:rw all:r;\n    scgi_temp_path    /data/temp;\n\n    alias             /data/www/;\n}\n</pre></blockquote>",
    "module": "ngx_http_scgi_module",
    "link": "http/ngx_http_scgi_module.html#scgi_store",
    "name": "scgi_store"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>scgi_store_access</strong> <code><i>users</i></code>:<code><i>permissions</i></code> ...;</code><br></td></tr><tr><th>Default:</th><td><pre>scgi_store_access user:rw;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets access permissions for newly created files and directories, e.g.:</p><blockquote class=\"example\"><pre>scgi_store_access user:rw group:rw all:r;\n</pre></blockquote><p>If any <code>group</code> or <code>all</code> access permissions are specified then <code>user</code> permissions may be omitted:</p><blockquote class=\"example\"><pre>scgi_store_access group:rw all:r;\n</pre></blockquote>",
    "module": "ngx_http_scgi_module",
    "link": "http/ngx_http_scgi_module.html#scgi_store_access",
    "name": "scgi_store_access"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>scgi_temp_file_write_size</strong> <code><i>size</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>scgi_temp_file_write_size 8k|16k;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Limits the <code><i>size</i></code> of data written to a temporary file at a time, when buffering of responses from the SCGI server to temporary files is enabled. By default, <code><i>size</i></code> is limited by two buffers set by the <a href=\"https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_buffer_size\">scgi_buffer_size</a> and <a href=\"https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_buffers\">scgi_buffers</a> directives. The maximum size of a temporary file is set by the <a href=\"https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_max_temp_file_size\">scgi_max_temp_file_size</a> directive.</p>",
    "module": "ngx_http_scgi_module",
    "link": "http/ngx_http_scgi_module.html#scgi_temp_file_write_size",
    "name": "scgi_temp_file_write_size"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>scgi_temp_path</strong> <code><i>path</i></code> [<code><i>level1</i></code> [<code><i>level2</i></code> [<code><i>level3</i></code>]]];</code><br></td></tr><tr><th>Default:</th><td><pre>scgi_temp_path scgi_temp;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Defines a directory for storing temporary files with data received from SCGI servers. Up to three-level subdirectory hierarchy can be used underneath the specified directory. For example, in the following configuration</p><blockquote class=\"example\"><pre>scgi_temp_path /spool/nginx/scgi_temp 1 2;\n</pre></blockquote><p>a temporary file might look like this:</p><blockquote class=\"example\"><pre>/spool/nginx/scgi_temp/<strong>7</strong>/<strong>45</strong>/00000123<strong>457</strong>\n</pre></blockquote><p>See also the <code>use_temp_path</code> parameter of the <a href=\"https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_cache_path\">scgi_cache_path</a> directive.</p>",
    "module": "ngx_http_scgi_module",
    "link": "http/ngx_http_scgi_module.html#scgi_temp_path",
    "name": "scgi_temp_path"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>secure_link</strong> <code><i>expression</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Defines a string with variables from which the checksum value and lifetime of a link will be extracted.</p><p>Variables used in an <code><i>expression</i></code> are usually associated with a request; see <a href=\"https://nginx.org/en/docs/http/ngx_http_secure_link_module.html#secure_link_md5\">example</a> below.</p><p>The checksum value extracted from the string is compared with the MD5 hash value of the expression defined by the <a href=\"https://nginx.org/en/docs/http/ngx_http_secure_link_module.html#secure_link_md5\">secure_link_md5</a> directive. If the checksums are different, the <code>$secure_link</code> variable is set to an empty string. If the checksums are the same, the link lifetime is checked. If the link has a limited lifetime and the time has expired, the <code>$secure_link</code> variable is set to “<code>0</code>”. Otherwise, it is set to “<code>1</code>”. The MD5 hash value passed in a request is encoded in <a href=\"https://datatracker.ietf.org/doc/html/rfc4648#section-5\">base64url</a>.</p><p>If a link has a limited lifetime, the expiration time is set in seconds since Epoch (Thu, 01 Jan 1970 00:00:00 GMT). The value is specified in the expression after the MD5 hash, and is separated by a comma. The expiration time passed in a request is available through the <code>$secure_link_expires</code> variable for a use in the <a href=\"https://nginx.org/en/docs/http/ngx_http_secure_link_module.html#secure_link_md5\">secure_link_md5</a> directive. If the expiration time is not specified, a link has the unlimited lifetime.</p>",
    "module": "ngx_http_secure_link_module",
    "link": "http/ngx_http_secure_link_module.html#secure_link",
    "name": "secure_link"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>secure_link_md5</strong> <code><i>expression</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Defines an expression for which the MD5 hash value will be computed and compared with the value passed in a request.</p><p>The expression should contain the secured part of a link (resource) and a secret ingredient. If the link has a limited lifetime, the expression should also contain <code>$secure_link_expires</code>.</p><p>To prevent unauthorized access, the expression may contain some information about the client, such as its address and browser version.</p><p>Example:</p><blockquote class=\"example\"><pre>location /s/ {\n    secure_link $arg_md5,$arg_expires;\n    secure_link_md5 \"$secure_link_expires$uri$remote_addr secret\";\n\n    if ($secure_link = \"\") {\n        return 403;\n    }\n\n    if ($secure_link = \"0\") {\n        return 410;\n    }\n\n    ...\n}\n</pre></blockquote><p>The “<code>/s/link?md5=_e4Nc3iduzkWRm01TBBNYw&amp;expires=2147483647</code>” link restricts access to “<code>/s/link</code>” for the client with the IP address 127.0.0.1. The link also has the limited lifetime until January 19, 2038 (GMT).</p><p>On UNIX, the <code><i>md5</i></code> request argument value can be obtained as:</p><blockquote class=\"example\"><pre>echo -n '2147483647/s/link127.0.0.1 secret' | \\\n    openssl md5 -binary | openssl base64 | tr +/ -_ | tr -d =\n</pre></blockquote>",
    "module": "ngx_http_secure_link_module",
    "link": "http/ngx_http_secure_link_module.html#secure_link_md5",
    "name": "secure_link_md5"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>secure_link_secret</strong> <code><i>word</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Defines a secret <code><i>word</i></code> used to check authenticity of requested links.</p><p>The full URI of a requested link looks as follows:</p><blockquote class=\"example\"><pre>/<code><i>prefix</i></code>/<code><i>hash</i></code>/<code><i>link</i></code>\n</pre></blockquote><p>where <code><i>hash</i></code> is a hexadecimal representation of the MD5 hash computed for the concatenation of the link and secret word, and <code><i>prefix</i></code> is an arbitrary string without slashes.</p><p>If the requested link passes the authenticity check, the <code>$secure_link</code> variable is set to the link extracted from the request URI. Otherwise, the <code>$secure_link</code> variable is set to an empty string.</p><p>Example:</p><blockquote class=\"example\"><pre>location /p/ {\n    secure_link_secret secret;\n\n    if ($secure_link = \"\") {\n        return 403;\n    }\n\n    rewrite ^ /secure/$secure_link;\n}\n\nlocation /secure/ {\n    internal;\n}\n</pre></blockquote><p>A request of “<code>/p/5e814704a28d9bc1914ff19fa0c4a00a/link</code>” will be internally redirected to “<code>/secure/link</code>”.</p><p>On UNIX, the hash value for this example can be obtained as:</p><blockquote class=\"example\"><pre>echo -n 'linksecret' | openssl md5 -hex\n</pre></blockquote>",
    "module": "ngx_http_secure_link_module",
    "link": "http/ngx_http_secure_link_module.html#secure_link_secret",
    "name": "secure_link_secret"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>session_log</strong> <code><i>name</i></code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>session_log off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Enables the use of the specified session log. The special value <code>off</code> cancels the effect of the <code>session_log</code> directives inherited from the previous configuration level.</p>",
    "module": "ngx_http_session_log_module",
    "link": "http/ngx_http_session_log_module.html#session_log",
    "name": "session_log"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>session_log_format</strong> <code><i>name</i></code> <code><i>string</i></code> ...;</code><br></td></tr><tr><th>Default:</th><td><pre>session_log_format combined \"...\";</pre></td></tr><tr><th>Context:</th><td><code>http</code><br></td></tr></tbody></table>",
    "doc": "<p>Specifies the output format of a log. The value of the <code>$body_bytes_sent</code> variable is aggregated across all requests in a session. The values of all other variables available for logging correspond to the first request in a session.</p>",
    "module": "ngx_http_session_log_module",
    "link": "http/ngx_http_session_log_module.html#session_log_format",
    "name": "session_log_format"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>session_log_zone</strong> <code><i>path</i></code> <code>zone</code>=<code><i>name</i></code>:<code><i>size</i></code> [<code>format</code>=<code><i>format</i></code>] [<code>timeout</code>=<code><i>time</i></code>] [<code>id</code>=<code><i>id</i></code>] [<code>md5</code>=<code><i>md5</i></code>] ;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets the path to a log file and configures the shared memory zone that is used to store currently active sessions.</p><p>A session is considered active for as long as the time elapsed since the last request in the session does not exceed the specified <code>timeout</code> (by default, 30 seconds). Once a session is no longer active, it is written to the log.</p><p>The <code>id</code> parameter identifies the session to which a request is mapped. The <code>id</code> parameter is set to the hexadecimal representation of an MD5 hash (for example, obtained from a cookie using variables). If this parameter is not specified or does not represent the valid MD5 hash, nginx computes the MD5 hash from the value of the <code>md5</code> parameter and creates a new session using this hash. Both the <code>id</code> and <code>md5</code> parameters can contain variables.</p><p>The <code>format</code> parameter sets the custom session log format configured by the <a href=\"https://nginx.org/en/docs/http/ngx_http_session_log_module.html#session_log_format\">session_log_format</a> directive. If <code>format</code> is not specified, the predefined “<code>combined</code>” format is used.</p>",
    "module": "ngx_http_session_log_module",
    "link": "http/ngx_http_session_log_module.html#session_log_zone",
    "name": "session_log_zone"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>slice</strong> <code><i>size</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>slice 0;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets the <code><i>size</i></code> of the slice. The zero value disables splitting responses into slices. Note that a too low value may result in excessive memory usage and opening a large number of files.</p><p>In order for a subrequest to return the required range, the <code>$slice_range</code> variable should be <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_set_header\">passed</a> to the proxied server as the <code>Range</code> request header field. If <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_cache\">caching</a> is enabled, <code>$slice_range</code> should be added to the <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_cache_key\">cache key</a> and caching of responses with 206 status code should be <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_cache_valid\">enabled</a>.</p>",
    "module": "ngx_http_slice_module",
    "link": "http/ngx_http_slice_module.html#slice",
    "name": "slice"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>spdy_chunk_size</strong> <code><i>size</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>spdy_chunk_size 8k;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.5.9.</p>",
    "doc": "<p>Sets the maximum size of chunks into which the response body is <a href=\"http://www.chromium.org/spdy/spdy-protocol/spdy-protocol-draft2#TOC-Data-frames\">sliced</a>. A too low value results in higher overhead. A too high value impairs prioritization due to <a href=\"http://en.wikipedia.org/wiki/Head-of-line_blocking\">HOL blocking</a>.</p>",
    "module": "ngx_http_spdy_module",
    "link": "http/ngx_http_spdy_module.html#spdy_chunk_size",
    "name": "spdy_chunk_size"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>spdy_headers_comp</strong> <code><i>level</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>spdy_headers_comp 0;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets the header compression <code><i>level</i></code> of a response in a range from 1 (fastest, less compression) to 9 (slowest, best compression). The special value 0 turns off the header compression.</p>",
    "module": "ngx_http_spdy_module",
    "link": "http/ngx_http_spdy_module.html#spdy_headers_comp",
    "name": "spdy_headers_comp"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>split_clients</strong> <code><i>string</i></code> <code><i>$variable</i></code> { ... }</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code><br></td></tr></tbody></table>",
    "doc": "<p>Creates a variable for A/B testing, for example:</p><blockquote class=\"example\"><pre>split_clients \"${remote_addr}AAA\" $variant {\n               0.5%               .one;\n               2.0%               .two;\n               *                  \"\";\n}\n</pre></blockquote><p>The value of the original string is hashed using MurmurHash2. In the example given, hash values from 0 to 21474835 (0.5%) correspond to the value <code>\".one\"</code> of the <code>$variant</code> variable, hash values from 21474836 to 107374180 (2%) correspond to the value <code>\".two\"</code>, and hash values from 107374181 to 4294967295 correspond to the value <code>\"\"</code> (an empty string).</p>",
    "module": "ngx_http_split_clients_module",
    "link": "http/ngx_http_split_clients_module.html#split_clients",
    "name": "split_clients"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>ssi</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>ssi off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code>, <code>if in location</code><br></td></tr></tbody></table>",
    "doc": "<p>Enables or disables processing of SSI commands in responses.</p>",
    "module": "ngx_http_ssi_module",
    "link": "http/ngx_http_ssi_module.html#ssi",
    "name": "ssi"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>ssi_last_modified</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>ssi_last_modified off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.5.1.</p>",
    "doc": "<p>Allows preserving the “Last-Modified” header field from the original response during SSI processing to facilitate response caching.</p><p>By default, the header field is removed as contents of the response are modified during processing and may contain dynamically generated elements or parts that are changed independently of the original response.</p>",
    "module": "ngx_http_ssi_module",
    "link": "http/ngx_http_ssi_module.html#ssi_last_modified",
    "name": "ssi_last_modified"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>ssi_min_file_chunk</strong> <code>size</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>ssi_min_file_chunk 1k;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets the minimum <code><i>size</i></code> for parts of a response stored on disk, starting from which it makes sense to send them using <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#sendfile\">sendfile</a>.</p>",
    "module": "ngx_http_ssi_module",
    "link": "http/ngx_http_ssi_module.html#ssi_min_file_chunk",
    "name": "ssi_min_file_chunk"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>ssi_silent_errors</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>ssi_silent_errors off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>If enabled, suppresses the output of the “<code>[an error occurred while processing the directive]</code>” string if an error occurred during SSI processing.</p>",
    "module": "ngx_http_ssi_module",
    "link": "http/ngx_http_ssi_module.html#ssi_silent_errors",
    "name": "ssi_silent_errors"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>ssi_types</strong> <code><i>mime-type</i></code> ...;</code><br></td></tr><tr><th>Default:</th><td><pre>ssi_types text/html;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Enables processing of SSI commands in responses with the specified MIME types in addition to “<code>text/html</code>”. The special value “<code>*</code>” matches any MIME type (0.8.29).</p>",
    "module": "ngx_http_ssi_module",
    "link": "http/ngx_http_ssi_module.html#ssi_types",
    "name": "ssi_types"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>ssi_value_length</strong> <code><i>length</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>ssi_value_length 256;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets the maximum length of parameter values in SSI commands.</p>",
    "module": "ngx_http_ssi_module",
    "link": "http/ngx_http_ssi_module.html#ssi_value_length",
    "name": "ssi_value_length"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>ssl</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>ssl off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code><br></td></tr></tbody></table>",
    "doc": "<p>This directive was made obsolete in version 1.15.0. The <code>ssl</code> parameter of the <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#listen\">listen</a> directive should be used instead.</p>",
    "module": "ngx_http_ssl_module",
    "link": "http/ngx_http_ssl_module.html#ssl",
    "name": "ssl"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>ssl_buffer_size</strong> <code><i>size</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>ssl_buffer_size 16k;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code><br></td></tr></tbody></table><p>This directive appeared in version 1.5.9.</p>",
    "doc": "<p>Sets the size of the buffer used for sending data.</p><p>By default, the buffer size is 16k, which corresponds to minimal overhead when sending big responses. To minimize Time To First Byte it may be beneficial to use smaller values, for example:</p><blockquote class=\"example\"><pre>ssl_buffer_size 4k;\n</pre></blockquote>",
    "module": "ngx_http_ssl_module",
    "link": "http/ngx_http_ssl_module.html#ssl_buffer_size",
    "name": "ssl_buffer_size"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>ssl_certificate</strong> <code><i>file</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code><br></td></tr></tbody></table>",
    "doc": "<p>Specifies a <code><i>file</i></code> with the certificate in the PEM format for the given virtual server. If intermediate certificates should be specified in addition to a primary certificate, they should be specified in the same file in the following order: the primary certificate comes first, then the intermediate certificates. A secret key in the PEM format may be placed in the same file.</p><p>Since version 1.11.0, this directive can be specified multiple times to load certificates of different types, for example, RSA and ECDSA:</p><blockquote class=\"example\"><pre>server {\n    listen              443 ssl;\n    server_name         example.com;\n\n    ssl_certificate     example.com.rsa.crt;\n    ssl_certificate_key example.com.rsa.key;\n\n    ssl_certificate     example.com.ecdsa.crt;\n    ssl_certificate_key example.com.ecdsa.key;\n\n    ...\n}\n</pre></blockquote><blockquote class=\"note\">Only OpenSSL 1.0.2 or higher supports separate <a href=\"https://nginx.org/en/docs/http/configuring_https_servers.html#chains\">certificate chains</a> for different certificates. With older versions, only one certificate chain can be used.</blockquote><p>Since version 1.15.9, variables can be used in the <code><i>file</i></code> name when using OpenSSL 1.0.2 or higher:</p><blockquote class=\"example\"><pre>ssl_certificate     $ssl_server_name.crt;\nssl_certificate_key $ssl_server_name.key;\n</pre></blockquote><p>Note that using variables implies that a certificate will be loaded for each SSL handshake, and this may have a negative impact on performance.</p>",
    "module": "ngx_http_ssl_module",
    "link": "http/ngx_http_ssl_module.html#ssl_certificate",
    "name": "ssl_certificate"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>ssl_certificate_key</strong> <code><i>file</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code><br></td></tr></tbody></table>",
    "doc": "<p>Specifies a <code><i>file</i></code> with the secret key in the PEM format for the given virtual server.</p><p>The value <code>engine</code>:<code><i>name</i></code>:<code><i>id</i></code> can be specified instead of the <code><i>file</i></code> (1.7.9), which loads a secret key with a specified <code><i>id</i></code> from the OpenSSL engine <code><i>name</i></code>.</p>",
    "module": "ngx_http_ssl_module",
    "link": "http/ngx_http_ssl_module.html#ssl_certificate_key",
    "name": "ssl_certificate_key"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>ssl_ciphers</strong> <code><i>ciphers</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>ssl_ciphers HIGH:!aNULL:!MD5;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code><br></td></tr></tbody></table>",
    "doc": "<p>Specifies the enabled ciphers. The ciphers are specified in the format understood by the OpenSSL library, for example:</p><blockquote class=\"example\"><pre>ssl_ciphers ALL:!aNULL:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP;\n</pre></blockquote><p>The full list can be viewed using the “<code>openssl ciphers</code>” command.</p><blockquote class=\"note\">The previous versions of nginx used <a href=\"https://nginx.org/en/docs/http/configuring_https_servers.html#compatibility\">different</a> ciphers by default.</blockquote>",
    "module": "ngx_http_ssl_module",
    "link": "http/ngx_http_ssl_module.html#ssl_ciphers",
    "name": "ssl_ciphers"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>ssl_client_certificate</strong> <code><i>file</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code><br></td></tr></tbody></table>",
    "doc": "<p>Specifies a <code><i>file</i></code> with trusted CA certificates in the PEM format used to <a href=\"https://nginx.org/en/docs/http/ngx_http_ssl_module.html#ssl_verify_client\">verify</a> client certificates and OCSP responses if <a href=\"https://nginx.org/en/docs/http/ngx_http_ssl_module.html#ssl_stapling\">ssl_stapling</a> is enabled.</p><p>The list of certificates will be sent to clients. If this is not desired, the <a href=\"https://nginx.org/en/docs/http/ngx_http_ssl_module.html#ssl_trusted_certificate\">ssl_trusted_certificate</a> directive can be used.</p>",
    "module": "ngx_http_ssl_module",
    "link": "http/ngx_http_ssl_module.html#ssl_client_certificate",
    "name": "ssl_client_certificate"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>ssl_conf_command</strong> <code><i>name</i></code> <code><i>value</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code><br></td></tr></tbody></table><p>This directive appeared in version 1.19.4.</p>",
    "doc": "<p>Sets arbitrary OpenSSL configuration <a href=\"https://www.openssl.org/docs/man1.1.1/man3/SSL_CONF_cmd.html\">commands</a>.</p><blockquote class=\"note\">The directive is supported when using OpenSSL 1.0.2 or higher.</blockquote><p>Several <code>ssl_conf_command</code> directives can be specified on the same level:</p><blockquote class=\"example\"><pre>ssl_conf_command Options PrioritizeChaCha;\nssl_conf_command Ciphersuites TLS_CHACHA20_POLY1305_SHA256;\n</pre></blockquote><p>These directives are inherited from the previous configuration level if and only if there are no <code>ssl_conf_command</code> directives defined on the current level.</p><blockquote class=\"note\">Note that configuring OpenSSL directly might result in unexpected behavior.</blockquote>",
    "module": "ngx_http_ssl_module",
    "link": "http/ngx_http_ssl_module.html#ssl_conf_command",
    "name": "ssl_conf_command"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>ssl_crl</strong> <code><i>file</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code><br></td></tr></tbody></table><p>This directive appeared in version 0.8.7.</p>",
    "doc": "<p>Specifies a <code><i>file</i></code> with revoked certificates (CRL) in the PEM format used to <a href=\"https://nginx.org/en/docs/http/ngx_http_ssl_module.html#ssl_verify_client\">verify</a> client certificates.</p>",
    "module": "ngx_http_ssl_module",
    "link": "http/ngx_http_ssl_module.html#ssl_crl",
    "name": "ssl_crl"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>ssl_dhparam</strong> <code><i>file</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code><br></td></tr></tbody></table><p>This directive appeared in version 0.7.2.</p>",
    "doc": "<p>Specifies a <code><i>file</i></code> with DH parameters for DHE ciphers.</p><p>By default no parameters are set, and therefore DHE ciphers will not be used.</p><blockquote class=\"note\">Prior to version 1.11.0, builtin parameters were used by default.</blockquote>",
    "module": "ngx_http_ssl_module",
    "link": "http/ngx_http_ssl_module.html#ssl_dhparam",
    "name": "ssl_dhparam"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>ssl_early_data</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>ssl_early_data off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code><br></td></tr></tbody></table><p>This directive appeared in version 1.15.3.</p>",
    "doc": "<p>Enables or disables TLS 1.3 <a href=\"https://datatracker.ietf.org/doc/html/rfc8446#section-2.3\">early data</a>.</p><blockquote class=\"note\">Requests sent within early data are subject to <a href=\"https://datatracker.ietf.org/doc/html/rfc8470\">replay attacks</a>. To protect against such attacks at the application layer, the <a href=\"https://nginx.org/en/docs/http/ngx_http_ssl_module.html#var_ssl_early_data\">$ssl_early_data</a> variable should be used.</blockquote><blockquote class=\"example\"><pre>proxy_set_header Early-Data $ssl_early_data;\n</pre></blockquote><blockquote class=\"note\">The directive is supported when using OpenSSL 1.1.1 or higher (1.15.4) and <a href=\"https://boringssl.googlesource.com/boringssl/\">BoringSSL</a>.</blockquote>",
    "module": "ngx_http_ssl_module",
    "link": "http/ngx_http_ssl_module.html#ssl_early_data",
    "name": "ssl_early_data"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>ssl_ecdh_curve</strong> <code><i>curve</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>ssl_ecdh_curve auto;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code><br></td></tr></tbody></table><p>This directive appeared in versions 1.1.0 and 1.0.6.</p>",
    "doc": "<p>Specifies a <code><i>curve</i></code> for ECDHE ciphers.</p><p>When using OpenSSL 1.0.2 or higher, it is possible to specify multiple curves (1.11.0), for example:</p><blockquote class=\"example\"><pre>ssl_ecdh_curve prime256v1:secp384r1;\n</pre></blockquote><p>The special value <code>auto</code> (1.11.0) instructs nginx to use a list built into the OpenSSL library when using OpenSSL 1.0.2 or higher, or <code>prime256v1</code> with older versions.</p><blockquote class=\"note\">Prior to version 1.11.0, the <code>prime256v1</code> curve was used by default.</blockquote><blockquote class=\"note\">When using OpenSSL 1.0.2 or higher, this directive sets the list of curves supported by the server. Thus, in order for ECDSA certificates to work, it is important to include the curves used in the certificates.</blockquote>",
    "module": "ngx_http_ssl_module",
    "link": "http/ngx_http_ssl_module.html#ssl_ecdh_curve",
    "name": "ssl_ecdh_curve"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>ssl_ocsp</strong> <code>on</code> | <code>off</code> | <code>leaf</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>ssl_ocsp off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code><br></td></tr></tbody></table><p>This directive appeared in version 1.19.0.</p>",
    "doc": "<p>Enables OCSP validation of the client certificate chain. The <code>leaf</code> parameter enables validation of the client certificate only.</p><p>For the OCSP validation to work, the <a href=\"https://nginx.org/en/docs/http/ngx_http_ssl_module.html#ssl_verify_client\">ssl_verify_client</a> directive should be set to <code>on</code> or <code>optional</code>.</p><p>To resolve the OCSP responder hostname, the <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#resolver\">resolver</a> directive should also be specified.</p><p>Example:</p><blockquote class=\"example\"><pre>ssl_verify_client on;\nssl_ocsp          on;\nresolver          192.0.2.1;\n</pre></blockquote>",
    "module": "ngx_http_ssl_module",
    "link": "http/ngx_http_ssl_module.html#ssl_ocsp",
    "name": "ssl_ocsp"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>ssl_ocsp_cache</strong> <code>off</code> | [<code>shared</code>:<code><i>name</i></code>:<code><i>size</i></code>];</code><br></td></tr><tr><th>Default:</th><td><pre>ssl_ocsp_cache off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code><br></td></tr></tbody></table><p>This directive appeared in version 1.19.0.</p>",
    "doc": "<p>Sets <code>name</code> and <code>size</code> of the cache that stores client certificates status for OCSP validation. The cache is shared between all worker processes. A cache with the same name can be used in several virtual servers.</p><p>The <code>off</code> parameter prohibits the use of the cache.</p>",
    "module": "ngx_http_ssl_module",
    "link": "http/ngx_http_ssl_module.html#ssl_ocsp_cache",
    "name": "ssl_ocsp_cache"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>ssl_ocsp_responder</strong> <code><i>url</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code><br></td></tr></tbody></table><p>This directive appeared in version 1.19.0.</p>",
    "doc": "<p>Overrides the URL of the OCSP responder specified in the “<a href=\"https://datatracker.ietf.org/doc/html/rfc5280#section-4.2.2.1\">Authority Information Access</a>” certificate extension for <a href=\"https://nginx.org/en/docs/http/ngx_http_ssl_module.html#ssl_ocsp\">validation</a> of client certificates.</p><p>Only “<code>http://</code>” OCSP responders are supported:</p><blockquote class=\"example\"><pre>ssl_ocsp_responder http://ocsp.example.com/;\n</pre></blockquote>",
    "module": "ngx_http_ssl_module",
    "link": "http/ngx_http_ssl_module.html#ssl_ocsp_responder",
    "name": "ssl_ocsp_responder"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>ssl_password_file</strong> <code><i>file</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code><br></td></tr></tbody></table><p>This directive appeared in version 1.7.3.</p>",
    "doc": "<p>Specifies a <code><i>file</i></code> with passphrases for <a href=\"https://nginx.org/en/docs/http/ngx_http_ssl_module.html#ssl_certificate_key\">secret keys</a> where each passphrase is specified on a separate line. Passphrases are tried in turn when loading the key.</p><p>Example:</p><blockquote class=\"example\"><pre>http {\n    ssl_password_file /etc/keys/global.pass;\n    ...\n\n    server {\n        server_name www1.example.com;\n        ssl_certificate_key /etc/keys/first.key;\n    }\n\n    server {\n        server_name www2.example.com;\n\n        # named pipe can also be used instead of a file\n        ssl_password_file /etc/keys/fifo;\n        ssl_certificate_key /etc/keys/second.key;\n    }\n}\n</pre></blockquote>",
    "module": "ngx_http_ssl_module",
    "link": "http/ngx_http_ssl_module.html#ssl_password_file",
    "name": "ssl_password_file"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>ssl_prefer_server_ciphers</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>ssl_prefer_server_ciphers off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code><br></td></tr></tbody></table>",
    "doc": "<p>Specifies that server ciphers should be preferred over client ciphers when using the SSLv3 and TLS protocols.</p>",
    "module": "ngx_http_ssl_module",
    "link": "http/ngx_http_ssl_module.html#ssl_prefer_server_ciphers",
    "name": "ssl_prefer_server_ciphers"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>ssl_protocols</strong> [<code>SSLv2</code>] [<code>SSLv3</code>] [<code>TLSv1</code>] [<code>TLSv1.1</code>] [<code>TLSv1.2</code>] [<code>TLSv1.3</code>];</code><br></td></tr><tr><th>Default:</th><td><pre>ssl_protocols TLSv1 TLSv1.1 TLSv1.2;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code><br></td></tr></tbody></table>",
    "doc": "<p>Enables the specified protocols.</p><blockquote class=\"note\">The <code>TLSv1.1</code> and <code>TLSv1.2</code> parameters (1.1.13, 1.0.12) work only when OpenSSL 1.0.1 or higher is used.</blockquote><blockquote class=\"note\">The <code>TLSv1.3</code> parameter (1.13.0) works only when OpenSSL 1.1.1 or higher is used.</blockquote>",
    "module": "ngx_http_ssl_module",
    "link": "http/ngx_http_ssl_module.html#ssl_protocols",
    "name": "ssl_protocols"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>ssl_reject_handshake</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>ssl_reject_handshake off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code><br></td></tr></tbody></table><p>This directive appeared in version 1.19.4.</p>",
    "doc": "<p>If enabled, SSL handshakes in the <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#server\">server</a> block will be rejected.</p><p>For example, in the following configuration, SSL handshakes with server names other than <code>example.com</code> are rejected:</p><blockquote class=\"example\"><pre>server {\n    listen               443 ssl default_server;\n    ssl_reject_handshake on;\n}\n\nserver {\n    listen              443 ssl;\n    server_name         example.com;\n    ssl_certificate     example.com.crt;\n    ssl_certificate_key example.com.key;\n}\n</pre></blockquote>",
    "module": "ngx_http_ssl_module",
    "link": "http/ngx_http_ssl_module.html#ssl_reject_handshake",
    "name": "ssl_reject_handshake"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>ssl_session_cache</strong> <code>off</code> | <code>none</code> | [<code>builtin</code>[:<code><i>size</i></code>]] [<code>shared</code>:<code><i>name</i></code>:<code><i>size</i></code>];</code><br></td></tr><tr><th>Default:</th><td><pre>ssl_session_cache none;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets the types and sizes of caches that store session parameters. A cache can be of any of the following types:</p><dl class=\"compact\"><dt><code>off</code></dt><dd>the use of a session cache is strictly prohibited: nginx explicitly tells a client that sessions may not be reused.</dd><dt><code>none</code></dt><dd>the use of a session cache is gently disallowed: nginx tells a client that sessions may be reused, but does not actually store session parameters in the cache.</dd><dt id=\"ssl_session_cache_builtin\"><code>builtin</code></dt><dd>a cache built in OpenSSL; used by one worker process only. The cache size is specified in sessions. If size is not given, it is equal to 20480 sessions. Use of the built-in cache can cause memory fragmentation.</dd><dt id=\"ssl_session_cache_shared\"><code>shared</code></dt><dd>a cache shared between all worker processes. The cache size is specified in bytes; one megabyte can store about 4000 sessions. Each shared cache should have an arbitrary name. A cache with the same name can be used in several virtual servers.</dd></dl><p>Both cache types can be used simultaneously, for example:</p><blockquote class=\"example\"><pre>ssl_session_cache builtin:1000 shared:SSL:10m;\n</pre></blockquote><p>but using only shared cache without the built-in cache should be more efficient.</p>",
    "module": "ngx_http_ssl_module",
    "link": "http/ngx_http_ssl_module.html#ssl_session_cache",
    "name": "ssl_session_cache"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>ssl_session_ticket_key</strong> <code><i>file</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code><br></td></tr></tbody></table><p>This directive appeared in version 1.5.7.</p>",
    "doc": "<p>Sets a <code><i>file</i></code> with the secret key used to encrypt and decrypt TLS session tickets. The directive is necessary if the same key has to be shared between multiple servers. By default, a randomly generated key is used.</p><p>If several keys are specified, only the first key is used to encrypt TLS session tickets. This allows configuring key rotation, for example:</p><blockquote class=\"example\"><pre>ssl_session_ticket_key current.key;\nssl_session_ticket_key previous.key;\n</pre></blockquote><p>The <code><i>file</i></code> must contain 80 or 48 bytes of random data and can be created using the following command:</p><blockquote class=\"example\"><pre>openssl rand 80 &gt; ticket.key\n</pre></blockquote><p>Depending on the file size either AES256 (for 80-byte keys, 1.11.8) or AES128 (for 48-byte keys) is used for encryption.</p>",
    "module": "ngx_http_ssl_module",
    "link": "http/ngx_http_ssl_module.html#ssl_session_ticket_key",
    "name": "ssl_session_ticket_key"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>ssl_session_tickets</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>ssl_session_tickets on;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code><br></td></tr></tbody></table><p>This directive appeared in version 1.5.9.</p>",
    "doc": "<p>Enables or disables session resumption through <a href=\"https://datatracker.ietf.org/doc/html/rfc5077\">TLS session tickets</a>.</p>",
    "module": "ngx_http_ssl_module",
    "link": "http/ngx_http_ssl_module.html#ssl_session_tickets",
    "name": "ssl_session_tickets"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>ssl_session_timeout</strong> <code><i>time</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>ssl_session_timeout 5m;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code><br></td></tr></tbody></table>",
    "doc": "<p>Specifies a time during which a client may reuse the session parameters.</p>",
    "module": "ngx_http_ssl_module",
    "link": "http/ngx_http_ssl_module.html#ssl_session_timeout",
    "name": "ssl_session_timeout"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>ssl_stapling</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>ssl_stapling off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code><br></td></tr></tbody></table><p>This directive appeared in version 1.3.7.</p>",
    "doc": "<p>Enables or disables <a href=\"https://datatracker.ietf.org/doc/html/rfc6066#section-8\">stapling of OCSP responses</a> by the server. Example:</p><blockquote class=\"example\"><pre>ssl_stapling on;\nresolver 192.0.2.1;\n</pre></blockquote><p>For the OCSP stapling to work, the certificate of the server certificate issuer should be known. If the <a href=\"https://nginx.org/en/docs/http/ngx_http_ssl_module.html#ssl_certificate\">ssl_certificate</a> file does not contain intermediate certificates, the certificate of the server certificate issuer should be present in the <a href=\"https://nginx.org/en/docs/http/ngx_http_ssl_module.html#ssl_trusted_certificate\">ssl_trusted_certificate</a> file.</p><p>For a resolution of the OCSP responder hostname, the <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#resolver\">resolver</a> directive should also be specified.</p>",
    "module": "ngx_http_ssl_module",
    "link": "http/ngx_http_ssl_module.html#ssl_stapling",
    "name": "ssl_stapling"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>ssl_stapling_file</strong> <code><i>file</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code><br></td></tr></tbody></table><p>This directive appeared in version 1.3.7.</p>",
    "doc": "<p>When set, the stapled OCSP response will be taken from the specified <code><i>file</i></code> instead of querying the OCSP responder specified in the server certificate.</p><p>The file should be in the DER format as produced by the “<code>openssl ocsp</code>” command.</p>",
    "module": "ngx_http_ssl_module",
    "link": "http/ngx_http_ssl_module.html#ssl_stapling_file",
    "name": "ssl_stapling_file"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>ssl_stapling_responder</strong> <code><i>url</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code><br></td></tr></tbody></table><p>This directive appeared in version 1.3.7.</p>",
    "doc": "<p>Overrides the URL of the OCSP responder specified in the “<a href=\"https://datatracker.ietf.org/doc/html/rfc5280#section-4.2.2.1\">Authority Information Access</a>” certificate extension.</p><p>Only “<code>http://</code>” OCSP responders are supported:</p><blockquote class=\"example\"><pre>ssl_stapling_responder http://ocsp.example.com/;\n</pre></blockquote>",
    "module": "ngx_http_ssl_module",
    "link": "http/ngx_http_ssl_module.html#ssl_stapling_responder",
    "name": "ssl_stapling_responder"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>ssl_stapling_verify</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>ssl_stapling_verify off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code><br></td></tr></tbody></table><p>This directive appeared in version 1.3.7.</p>",
    "doc": "<p>Enables or disables verification of OCSP responses by the server.</p><p>For verification to work, the certificate of the server certificate issuer, the root certificate, and all intermediate certificates should be configured as trusted using the <a href=\"https://nginx.org/en/docs/http/ngx_http_ssl_module.html#ssl_trusted_certificate\">ssl_trusted_certificate</a> directive.</p>",
    "module": "ngx_http_ssl_module",
    "link": "http/ngx_http_ssl_module.html#ssl_stapling_verify",
    "name": "ssl_stapling_verify"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>ssl_trusted_certificate</strong> <code><i>file</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code><br></td></tr></tbody></table><p>This directive appeared in version 1.3.7.</p>",
    "doc": "<p>Specifies a <code><i>file</i></code> with trusted CA certificates in the PEM format used to <a href=\"https://nginx.org/en/docs/http/ngx_http_ssl_module.html#ssl_verify_client\">verify</a> client certificates and OCSP responses if <a href=\"https://nginx.org/en/docs/http/ngx_http_ssl_module.html#ssl_stapling\">ssl_stapling</a> is enabled.</p><p>In contrast to the certificate set by <a href=\"https://nginx.org/en/docs/http/ngx_http_ssl_module.html#ssl_client_certificate\">ssl_client_certificate</a>, the list of these certificates will not be sent to clients.</p>",
    "module": "ngx_http_ssl_module",
    "link": "http/ngx_http_ssl_module.html#ssl_trusted_certificate",
    "name": "ssl_trusted_certificate"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>ssl_verify_client</strong> <code>on</code> | <code>off</code> | <code>optional</code> | <code>optional_no_ca</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>ssl_verify_client off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code><br></td></tr></tbody></table>",
    "doc": "<p>Enables verification of client certificates. The verification result is stored in the <a href=\"https://nginx.org/en/docs/http/ngx_http_ssl_module.html#var_ssl_client_verify\">$ssl_client_verify</a> variable.</p><p>The <code>optional</code> parameter (0.8.7+) requests the client certificate and verifies it if the certificate is present.</p><p>The <code>optional_no_ca</code> parameter (1.3.8, 1.2.5) requests the client certificate but does not require it to be signed by a trusted CA certificate. This is intended for the use in cases when a service that is external to nginx performs the actual certificate verification. The contents of the certificate is accessible through the <a href=\"https://nginx.org/en/docs/http/ngx_http_ssl_module.html#var_ssl_client_cert\">$ssl_client_cert</a> variable.</p>",
    "module": "ngx_http_ssl_module",
    "link": "http/ngx_http_ssl_module.html#ssl_verify_client",
    "name": "ssl_verify_client"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>ssl_verify_depth</strong> <code><i>number</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>ssl_verify_depth 1;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets the verification depth in the client certificates chain.</p>",
    "module": "ngx_http_ssl_module",
    "link": "http/ngx_http_ssl_module.html#ssl_verify_depth",
    "name": "ssl_verify_depth"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>status</strong>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>The status information will be accessible from the surrounding location. Access to this location should be <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#satisfy\">limited</a>.</p>",
    "module": "ngx_http_status_module",
    "link": "http/ngx_http_status_module.html#status",
    "name": "status"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>status_format</strong> <code>json</code>;</code><br><code><strong>status_format</strong> <code>jsonp</code> [<code><i>callback</i></code>];</code><br></td></tr><tr><th>Default:</th><td><pre>status_format json;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>By default, status information is output in the JSON format.</p><p>Alternatively, data may be output as JSONP. The <code><i>callback</i></code> parameter specifies the name of a callback function. Parameter value can contain variables. If parameter is omitted, or the computed value is an empty string, then “<code>ngx_status_jsonp_callback</code>” is used.</p>",
    "module": "ngx_http_status_module",
    "link": "http/ngx_http_status_module.html#status_format",
    "name": "status_format"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>status_zone</strong> <code><i>zone</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>server</code><br></td></tr></tbody></table>",
    "doc": "<p>Enables collection of virtual <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#server\">http</a> or <a href=\"https://nginx.org/en/docs/stream/ngx_stream_core_module.html#server\">stream</a> (1.7.11) server status information in the specified <code><i>zone</i></code>. Several servers may share the same zone.</p>",
    "module": "ngx_http_status_module",
    "link": "http/ngx_http_status_module.html#status_zone",
    "name": "status_zone"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>stub_status</strong>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>The basic status information will be accessible from the surrounding location.</p><blockquote class=\"note\">In versions prior to 1.7.5, the directive syntax required an arbitrary argument, for example, “<code>stub_status on</code>”.</blockquote>",
    "module": "ngx_http_stub_status_module",
    "link": "http/ngx_http_stub_status_module.html#stub_status",
    "name": "stub_status"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>sub_filter</strong> <code><i>string</i></code> <code><i>replacement</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets a string to replace and a replacement string. The string to replace is matched ignoring the case. The string to replace (1.9.4) and replacement string can contain variables. Several <code>sub_filter</code> directives can be specified on the same configuration level (1.9.4). These directives are inherited from the previous configuration level if and only if there are no <code>sub_filter</code> directives defined on the current level.</p>",
    "module": "ngx_http_sub_module",
    "link": "http/ngx_http_sub_module.html#sub_filter",
    "name": "sub_filter"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>sub_filter_last_modified</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>sub_filter_last_modified off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.5.1.</p>",
    "doc": "<p>Allows preserving the “Last-Modified” header field from the original response during replacement to facilitate response caching.</p><p>By default, the header field is removed as contents of the response are modified during processing.</p>",
    "module": "ngx_http_sub_module",
    "link": "http/ngx_http_sub_module.html#sub_filter_last_modified",
    "name": "sub_filter_last_modified"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>sub_filter_once</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>sub_filter_once on;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Indicates whether to look for each string to replace once or repeatedly.</p>",
    "module": "ngx_http_sub_module",
    "link": "http/ngx_http_sub_module.html#sub_filter_once",
    "name": "sub_filter_once"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>sub_filter_types</strong> <code><i>mime-type</i></code> ...;</code><br></td></tr><tr><th>Default:</th><td><pre>sub_filter_types text/html;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Enables string replacement in responses with the specified MIME types in addition to “<code>text/html</code>”. The special value “<code>*</code>” matches any MIME type (0.8.29).</p>",
    "module": "ngx_http_sub_module",
    "link": "http/ngx_http_sub_module.html#sub_filter_types",
    "name": "sub_filter_types"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>upstream</strong> <code><i>name</i></code> { ... }</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code><br></td></tr></tbody></table>",
    "doc": "<p>Defines a group of servers. Servers can listen on different ports. In addition, servers listening on TCP and UNIX-domain sockets can be mixed.</p><p>Example:</p><blockquote class=\"example\"><pre>upstream backend {\n    server backend1.example.com weight=5;\n    server 127.0.0.1:8080       max_fails=3 fail_timeout=30s;\n    server unix:/tmp/backend3;\n\n    server backup1.example.com  backup;\n}\n</pre></blockquote><p>By default, requests are distributed between the servers using a weighted round-robin balancing method. In the above example, each 7 requests will be distributed as follows: 5 requests go to <code>backend1.example.com</code> and one request to each of the second and third servers. If an error occurs during communication with a server, the request will be passed to the next server, and so on until all of the functioning servers will be tried. If a successful response could not be obtained from any of the servers, the client will receive the result of the communication with the last server.</p>",
    "module": "ngx_http_upstream_module",
    "link": "http/ngx_http_upstream_module.html#upstream",
    "name": "upstream"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>server</strong> <code><i>address</i></code> [<code><i>parameters</i></code>];</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>upstream</code><br></td></tr></tbody></table>",
    "doc": "<p>Defines the <code><i>address</i></code> and other <code><i>parameters</i></code> of a server. The address can be specified as a domain name or IP address, with an optional port, or as a UNIX-domain socket path specified after the “<code>unix:</code>” prefix. If a port is not specified, the port 80 is used. A domain name that resolves to several IP addresses defines multiple servers at once.</p><p>The following parameters can be defined:</p><dl class=\"compact\"><dt id=\"weight\"><code>weight</code>=<code><i>number</i></code></dt><dd>sets the weight of the server, by default, 1.</dd><dt id=\"max_conns\"><code>max_conns</code>=<code><i>number</i></code></dt><dd>limits the maximum <code><i>number</i></code> of simultaneous active connections to the proxied server (1.11.5). Default value is zero, meaning there is no limit. If the server group does not reside in the <a href=\"https://nginx.org/en/docs/http/ngx_http_upstream_module.html#zone\">shared memory</a>, the limitation works per each worker process.<blockquote class=\"note\">If <a href=\"https://nginx.org/en/docs/http/ngx_http_upstream_module.html#keepalive\">idle keepalive</a> connections, multiple <a href=\"https://nginx.org/en/docs/ngx_core_module.html#worker_processes\">workers</a>, and the <a href=\"https://nginx.org/en/docs/http/ngx_http_upstream_module.html#zone\">shared memory</a> are enabled, the total number of active and idle connections to the proxied server may exceed the <code>max_conns</code> value.</blockquote><blockquote class=\"note\">Since version 1.5.9 and prior to version 1.11.5, this parameter was available as part of our <a href=\"http://nginx.com/products/\">commercial subscription</a>.</blockquote></dd><dt id=\"max_fails\"><code>max_fails</code>=<code><i>number</i></code></dt><dd>sets the number of unsuccessful attempts to communicate with the server that should happen in the duration set by the <code>fail_timeout</code> parameter to consider the server unavailable for a duration also set by the <code>fail_timeout</code> parameter. By default, the number of unsuccessful attempts is set to 1. The zero value disables the accounting of attempts. What is considered an unsuccessful attempt is defined by the <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_next_upstream\">proxy_next_upstream</a>, <a href=\"https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_next_upstream\">fastcgi_next_upstream</a>, <a href=\"https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_next_upstream\">uwsgi_next_upstream</a>, <a href=\"https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_next_upstream\">scgi_next_upstream</a>, <a href=\"https://nginx.org/en/docs/http/ngx_http_memcached_module.html#memcached_next_upstream\">memcached_next_upstream</a>, and <a href=\"https://nginx.org/en/docs/http/ngx_http_grpc_module.html#grpc_next_upstream\">grpc_next_upstream</a> directives.</dd><dt id=\"fail_timeout\"><code>fail_timeout</code>=<code><i>time</i></code></dt><dd>sets<ul class=\"compact\"><li>the time during which the specified number of unsuccessful attempts to communicate with the server should happen to consider the server unavailable;</li><li>and the period of time the server will be considered unavailable.</li></ul>By default, the parameter is set to 10 seconds.</dd><dt id=\"backup\"><code>backup</code></dt><dd>marks the server as a backup server. It will be passed requests when the primary servers are unavailable.<blockquote class=\"note\">The parameter cannot be used along with the <a href=\"https://nginx.org/en/docs/http/ngx_http_upstream_module.html#hash\">hash</a>, <a href=\"https://nginx.org/en/docs/http/ngx_http_upstream_module.html#ip_hash\">ip_hash</a>, and <a href=\"https://nginx.org/en/docs/http/ngx_http_upstream_module.html#random\">random</a> load balancing methods.</blockquote></dd><dt id=\"down\"><code>down</code></dt><dd>marks the server as permanently unavailable.</dd></dl><p>Additionally, the following parameters are available as part of our <a href=\"http://nginx.com/products/\">commercial subscription</a>:</p><dl class=\"compact\"><dt id=\"resolve\"><code>resolve</code></dt><dd>monitors changes of the IP addresses that correspond to a domain name of the server, and automatically modifies the upstream configuration without the need of restarting nginx (1.5.12). The server group must reside in the <a href=\"https://nginx.org/en/docs/http/ngx_http_upstream_module.html#zone\">shared memory</a>.<p>In order for this parameter to work, the <code>resolver</code> directive must be specified in the <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#resolver\">http</a> block or in the corresponding <a href=\"https://nginx.org/en/docs/http/ngx_http_upstream_module.html#resolver\">upstream</a> block.</p></dd><dt id=\"route\"><code>route</code>=<code><i>string</i></code></dt><dd>sets the server route name.</dd><dt id=\"service\"><code>service</code>=<code><i>name</i></code></dt><dd>enables resolving of DNS <a href=\"https://datatracker.ietf.org/doc/html/rfc2782\">SRV</a> records and sets the service <code><i>name</i></code> (1.9.13). In order for this parameter to work, it is necessary to specify the <a href=\"https://nginx.org/en/docs/http/ngx_http_upstream_module.html#resolve\">resolve</a> parameter for the server and specify a hostname without a port number.<p>If the service name does not contain a dot (“<code>.</code>”), then the <a href=\"https://datatracker.ietf.org/doc/html/rfc2782\">RFC</a>-compliant name is constructed and the TCP protocol is added to the service prefix. For example, to look up the <code>_http._tcp.backend.example.com</code> SRV record, it is necessary to specify the directive:</p><blockquote class=\"example\"><pre>server backend.example.com service=http resolve;\n</pre></blockquote><p>If the service name contains one or more dots, then the name is constructed by joining the service prefix and the server name. For example, to look up the <code>_http._tcp.backend.example.com</code> and <code>server1.backend.example.com</code> SRV records, it is necessary to specify the directives:</p><blockquote class=\"example\"><pre>server backend.example.com service=_http._tcp resolve;\nserver example.com service=server1.backend resolve;\n</pre></blockquote><p></p><p>Highest-priority SRV records (records with the same lowest-number priority value) are resolved as primary servers, the rest of SRV records are resolved as backup servers. If the <a href=\"https://nginx.org/en/docs/http/ngx_http_upstream_module.html#backup\">backup</a> parameter is specified for the server, high-priority SRV records are resolved as backup servers, the rest of SRV records are ignored.</p></dd><dt id=\"slow_start\"><code>slow_start</code>=<code><i>time</i></code></dt><dd>sets the <code><i>time</i></code> during which the server will recover its weight from zero to a nominal value, when unhealthy server becomes <a href=\"https://nginx.org/en/docs/http/ngx_http_upstream_hc_module.html#health_check\">healthy</a>, or when the server becomes available after a period of time it was considered <a href=\"https://nginx.org/en/docs/http/ngx_http_upstream_module.html#fail_timeout\">unavailable</a>. Default value is zero, i.e. slow start is disabled.<blockquote class=\"note\">The parameter cannot be used along with the <a href=\"https://nginx.org/en/docs/http/ngx_http_upstream_module.html#hash\">hash</a>, <a href=\"https://nginx.org/en/docs/http/ngx_http_upstream_module.html#ip_hash\">ip_hash</a>, and <a href=\"https://nginx.org/en/docs/http/ngx_http_upstream_module.html#random\">random</a> load balancing methods.</blockquote></dd><dt id=\"drain\"><code>drain</code></dt><dd>puts the server into the “draining” mode (1.13.6). In this mode, only requests <a href=\"https://nginx.org/en/docs/http/ngx_http_upstream_module.html#sticky\">bound</a> to the server will be proxied to it.<blockquote class=\"note\">Prior to version 1.13.6, the parameter could be changed only with the <a href=\"https://nginx.org/en/docs/http/ngx_http_api_module.html\">API</a> module.</blockquote></dd></dl><blockquote class=\"note\">If there is only a single server in a group, <code>max_fails</code>, <code>fail_timeout</code> and <code>slow_start</code> parameters are ignored, and such a server will never be considered unavailable.</blockquote>",
    "module": "ngx_http_upstream_module",
    "link": "http/ngx_http_upstream_module.html#server",
    "name": "server"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>zone</strong> <code><i>name</i></code> [<code><i>size</i></code>];</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>upstream</code><br></td></tr></tbody></table><p>This directive appeared in version 1.9.0.</p>",
    "doc": "<p>Defines the <code><i>name</i></code> and <code><i>size</i></code> of the shared memory zone that keeps the group’s configuration and run-time state that are shared between worker processes. Several groups may share the same zone. In this case, it is enough to specify the <code><i>size</i></code> only once.</p><p>Additionally, as part of our <a href=\"http://nginx.com/products/\">commercial subscription</a>, such groups allow changing the group membership or modifying the settings of a particular server without the need of restarting nginx. The configuration is accessible via the <a href=\"https://nginx.org/en/docs/http/ngx_http_api_module.html\">API</a> module (1.13.3).</p><blockquote class=\"note\">Prior to version 1.13.3, the configuration was accessible only via a special location handled by <a href=\"https://nginx.org/en/docs/http/ngx_http_upstream_conf_module.html#upstream_conf\">upstream_conf</a>.</blockquote>",
    "module": "ngx_http_upstream_module",
    "link": "http/ngx_http_upstream_module.html#zone",
    "name": "zone"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>state</strong> <code><i>file</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>upstream</code><br></td></tr></tbody></table><p>This directive appeared in version 1.9.7.</p>",
    "doc": "<p>Specifies a <code><i>file</i></code> that keeps the state of the dynamically configurable group.</p><p>Examples:</p><blockquote class=\"example\"><pre>state /var/lib/nginx/state/servers.conf; # path for Linux\nstate /var/db/nginx/state/servers.conf;  # path for FreeBSD\n</pre></blockquote><p>The state is currently limited to the list of servers with their parameters. The file is read when parsing the configuration and is updated each time the upstream configuration is <a href=\"https://nginx.org/en/docs/http/ngx_http_api_module.html#http_upstreams_http_upstream_name_servers_\">changed</a>. Changing the file content directly should be avoided. The directive cannot be used along with the <a href=\"https://nginx.org/en/docs/http/ngx_http_upstream_module.html#server\">server</a> directive.</p><blockquote class=\"note\">Changes made during <a href=\"https://nginx.org/en/docs/control.html#reconfiguration\">configuration reload</a> or <a href=\"https://nginx.org/en/docs/control.html#upgrade\">binary upgrade</a> can be lost.</blockquote><blockquote class=\"note\">This directive is available as part of our <a href=\"http://nginx.com/products/\">commercial subscription</a>.</blockquote>",
    "module": "ngx_http_upstream_module",
    "link": "http/ngx_http_upstream_module.html#state",
    "name": "state"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>hash</strong> <code><i>key</i></code> [<code>consistent</code>];</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>upstream</code><br></td></tr></tbody></table><p>This directive appeared in version 1.7.2.</p>",
    "doc": "<p>Specifies a load balancing method for a server group where the client-server mapping is based on the hashed <code><i>key</i></code> value. The <code><i>key</i></code> can contain text, variables, and their combinations. Note that adding or removing a server from the group may result in remapping most of the keys to different servers. The method is compatible with the <a href=\"https://metacpan.org/pod/Cache::Memcached\">Cache::Memcached</a> Perl library.</p><p>If the <code>consistent</code> parameter is specified, the <a href=\"https://www.metabrew.com/article/libketama-consistent-hashing-algo-memcached-clients\">ketama</a> consistent hashing method will be used instead. The method ensures that only a few keys will be remapped to different servers when a server is added to or removed from the group. This helps to achieve a higher cache hit ratio for caching servers. The method is compatible with the <a href=\"https://metacpan.org/pod/Cache::Memcached::Fast\">Cache::Memcached::Fast</a> Perl library with the <code><i>ketama_points</i></code> parameter set to 160.</p>",
    "module": "ngx_http_upstream_module",
    "link": "http/ngx_http_upstream_module.html#hash",
    "name": "hash"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>ip_hash</strong>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>upstream</code><br></td></tr></tbody></table>",
    "doc": "<p>Specifies that a group should use a load balancing method where requests are distributed between servers based on client IP addresses. The first three octets of the client IPv4 address, or the entire IPv6 address, are used as a hashing key. The method ensures that requests from the same client will always be passed to the same server except when this server is unavailable. In the latter case client requests will be passed to another server. Most probably, it will always be the same server as well.</p><blockquote class=\"note\">IPv6 addresses are supported starting from versions 1.3.2 and 1.2.2.</blockquote><p>If one of the servers needs to be temporarily removed, it should be marked with the <code>down</code> parameter in order to preserve the current hashing of client IP addresses.</p><p>Example:</p><blockquote class=\"example\"><pre>upstream backend {\n    ip_hash;\n\n    server backend1.example.com;\n    server backend2.example.com;\n    server backend3.example.com <strong>down</strong>;\n    server backend4.example.com;\n}\n</pre></blockquote><blockquote class=\"note\">Until versions 1.3.1 and 1.2.2, it was not possible to specify a weight for servers using the <code>ip_hash</code> load balancing method.</blockquote>",
    "module": "ngx_http_upstream_module",
    "link": "http/ngx_http_upstream_module.html#ip_hash",
    "name": "ip_hash"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>keepalive</strong> <code><i>connections</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>upstream</code><br></td></tr></tbody></table><p>This directive appeared in version 1.1.4.</p>",
    "doc": "<p>Activates the cache for connections to upstream servers.</p><p>The <code><i>connections</i></code> parameter sets the maximum number of idle keepalive connections to upstream servers that are preserved in the cache of each worker process. When this number is exceeded, the least recently used connections are closed.</p><blockquote class=\"note\">It should be particularly noted that the <code>keepalive</code> directive does not limit the total number of connections to upstream servers that an nginx worker process can open. The <code><i>connections</i></code> parameter should be set to a number small enough to let upstream servers process new incoming connections as well.</blockquote><blockquote class=\"note\">When using load balancing methods other than the default round-robin method, it is necessary to activate them before the <code>keepalive</code> directive.</blockquote><p>Example configuration of memcached upstream with keepalive connections:</p><blockquote class=\"example\"><pre>upstream memcached_backend {\n    server 127.0.0.1:11211;\n    server 10.0.0.2:11211;\n\n    keepalive 32;\n}\n\nserver {\n    ...\n\n    location /memcached/ {\n        set $memcached_key $uri;\n        memcached_pass memcached_backend;\n    }\n\n}\n</pre></blockquote><p>For HTTP, the <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_http_version\">proxy_http_version</a> directive should be set to “<code>1.1</code>” and the “Connection” header field should be cleared:</p><blockquote class=\"example\"><pre>upstream http_backend {\n    server 127.0.0.1:8080;\n\n    keepalive 16;\n}\n\nserver {\n    ...\n\n    location /http/ {\n        proxy_pass http://http_backend;\n        proxy_http_version 1.1;\n        proxy_set_header Connection \"\";\n        ...\n    }\n}\n</pre></blockquote><blockquote class=\"note\">Alternatively, HTTP/1.0 persistent connections can be used by passing the “Connection: Keep-Alive” header field to an upstream server, though this method is not recommended.</blockquote><p>For FastCGI servers, it is required to set <a href=\"https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_keep_conn\">fastcgi_keep_conn</a> for keepalive connections to work:</p><blockquote class=\"example\"><pre>upstream fastcgi_backend {\n    server 127.0.0.1:9000;\n\n    keepalive 8;\n}\n\nserver {\n    ...\n\n    location /fastcgi/ {\n        fastcgi_pass fastcgi_backend;\n        fastcgi_keep_conn on;\n        ...\n    }\n}\n</pre></blockquote><blockquote class=\"note\">SCGI and uwsgi protocols do not have a notion of keepalive connections.</blockquote>",
    "module": "ngx_http_upstream_module",
    "link": "http/ngx_http_upstream_module.html#keepalive",
    "name": "keepalive"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>keepalive_requests</strong> <code><i>number</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>keepalive_requests 1000;</pre></td></tr><tr><th>Context:</th><td><code>upstream</code><br></td></tr></tbody></table><p>This directive appeared in version 1.15.3.</p>",
    "doc": "<p>Sets the maximum number of requests that can be served through one keepalive connection. After the maximum number of requests is made, the connection is closed.</p><p>Closing connections periodically is necessary to free per-connection memory allocations. Therefore, using too high maximum number of requests could result in excessive memory usage and not recommended.</p><blockquote class=\"note\">Prior to version 1.19.10, the default value was 100.</blockquote>",
    "module": "ngx_http_upstream_module",
    "link": "http/ngx_http_upstream_module.html#keepalive_requests",
    "name": "keepalive_requests"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>keepalive_time</strong> <code><i>time</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>keepalive_time 1h;</pre></td></tr><tr><th>Context:</th><td><code>upstream</code><br></td></tr></tbody></table><p>This directive appeared in version 1.19.10.</p>",
    "doc": "<p>Limits the maximum time during which requests can be processed through one keepalive connection. After this time is reached, the connection is closed following the subsequent request processing.</p>",
    "module": "ngx_http_upstream_module",
    "link": "http/ngx_http_upstream_module.html#keepalive_time",
    "name": "keepalive_time"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>keepalive_timeout</strong> <code><i>timeout</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>keepalive_timeout 60s;</pre></td></tr><tr><th>Context:</th><td><code>upstream</code><br></td></tr></tbody></table><p>This directive appeared in version 1.15.3.</p>",
    "doc": "<p>Sets a timeout during which an idle keepalive connection to an upstream server will stay open.</p>",
    "module": "ngx_http_upstream_module",
    "link": "http/ngx_http_upstream_module.html#keepalive_timeout",
    "name": "keepalive_timeout"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>ntlm</strong>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>upstream</code><br></td></tr></tbody></table><p>This directive appeared in version 1.9.2.</p>",
    "doc": "<p>Allows proxying requests with <a href=\"https://en.wikipedia.org/wiki/Integrated_Windows_Authentication\">NTLM Authentication</a>. The upstream connection is bound to the client connection once the client sends a request with the “Authorization” header field value starting with “<code>Negotiate</code>” or “<code>NTLM</code>”. Further client requests will be proxied through the same upstream connection, keeping the authentication context.</p><p>In order for NTLM authentication to work, it is necessary to enable keepalive connections to upstream servers. The <a href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_http_version\">proxy_http_version</a> directive should be set to “<code>1.1</code>” and the “Connection” header field should be cleared:</p><blockquote class=\"example\"><pre>upstream http_backend {\n    server 127.0.0.1:8080;\n\n    ntlm;\n}\n\nserver {\n    ...\n\n    location /http/ {\n        proxy_pass http://http_backend;\n        proxy_http_version 1.1;\n        proxy_set_header Connection \"\";\n        ...\n    }\n}\n</pre></blockquote><blockquote class=\"note\">When using load balancer methods other than the default round-robin method, it is necessary to activate them before the <code>ntlm</code> directive.</blockquote><blockquote class=\"note\">This directive is available as part of our <a href=\"http://nginx.com/products/\">commercial subscription</a>.</blockquote>",
    "module": "ngx_http_upstream_module",
    "link": "http/ngx_http_upstream_module.html#ntlm",
    "name": "ntlm"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>least_conn</strong>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>upstream</code><br></td></tr></tbody></table><p>This directive appeared in versions 1.3.1 and 1.2.2.</p>",
    "doc": "<p>Specifies that a group should use a load balancing method where a request is passed to the server with the least number of active connections, taking into account weights of servers. If there are several such servers, they are tried in turn using a weighted round-robin balancing method.</p>",
    "module": "ngx_http_upstream_module",
    "link": "http/ngx_http_upstream_module.html#least_conn",
    "name": "least_conn"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>least_time</strong> <code>header</code> | <code>last_byte</code> [<code>inflight</code>];</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>upstream</code><br></td></tr></tbody></table><p>This directive appeared in version 1.7.10.</p>",
    "doc": "<p>Specifies that a group should use a load balancing method where a request is passed to the server with the least average response time and least number of active connections, taking into account weights of servers. If there are several such servers, they are tried in turn using a weighted round-robin balancing method.</p><p>If the <code>header</code> parameter is specified, time to receive the <a href=\"https://nginx.org/en/docs/http/ngx_http_upstream_module.html#var_upstream_header_time\">response header</a> is used. If the <code>last_byte</code> parameter is specified, time to receive the <a href=\"https://nginx.org/en/docs/http/ngx_http_upstream_module.html#var_upstream_response_time\">full response</a> is used. If the <code>inflight</code> parameter is specified (1.11.6), incomplete requests are also taken into account.</p><blockquote class=\"note\">Prior to version 1.11.6, incomplete requests were taken into account by default.</blockquote><blockquote class=\"note\">This directive is available as part of our <a href=\"http://nginx.com/products/\">commercial subscription</a>.</blockquote>",
    "module": "ngx_http_upstream_module",
    "link": "http/ngx_http_upstream_module.html#least_time",
    "name": "least_time"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>queue</strong> <code><i>number</i></code> [<code>timeout</code>=<code><i>time</i></code>];</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>upstream</code><br></td></tr></tbody></table><p>This directive appeared in version 1.5.12.</p>",
    "doc": "<p>If an upstream server cannot be selected immediately while processing a request, the request will be placed into the queue. The directive specifies the maximum <code><i>number</i></code> of requests that can be in the queue at the same time. If the queue is filled up, or the server to pass the request to cannot be selected within the time period specified in the <code>timeout</code> parameter, the 502 (Bad Gateway) error will be returned to the client.</p><p>The default value of the <code>timeout</code> parameter is 60 seconds.</p><blockquote class=\"note\">When using load balancer methods other than the default round-robin method, it is necessary to activate them before the <code>queue</code> directive.</blockquote><blockquote class=\"note\">This directive is available as part of our <a href=\"http://nginx.com/products/\">commercial subscription</a>.</blockquote>",
    "module": "ngx_http_upstream_module",
    "link": "http/ngx_http_upstream_module.html#queue",
    "name": "queue"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>random</strong> [<code>two</code> [<code><i>method</i></code>]];</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>upstream</code><br></td></tr></tbody></table><p>This directive appeared in version 1.15.1.</p>",
    "doc": "<p>Specifies that a group should use a load balancing method where a request is passed to a randomly selected server, taking into account weights of servers.</p><p>The optional <code>two</code> parameter instructs nginx to randomly select <a href=\"https://homes.cs.washington.edu/~karlin/papers/balls.pdf\">two</a> servers and then choose a server using the specified <code>method</code>. The default method is <code>least_conn</code> which passes a request to a server with the least number of active connections.</p>",
    "module": "ngx_http_upstream_module",
    "link": "http/ngx_http_upstream_module.html#random",
    "name": "random"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>resolver</strong> <code><i>address</i></code> ... [<code>valid</code>=<code><i>time</i></code>] [<code>ipv6</code>=<code>on</code>|<code>off</code>] [<code>status_zone</code>=<code><i>zone</i></code>];</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>upstream</code><br></td></tr></tbody></table><p>This directive appeared in version 1.17.5.</p>",
    "doc": "<p>Configures name servers used to resolve names of upstream servers into addresses, for example:</p><blockquote class=\"example\"><pre>resolver 127.0.0.1 [::1]:5353;\n</pre></blockquote><p>The address can be specified as a domain name or IP address, with an optional port. If port is not specified, the port 53 is used. Name servers are queried in a round-robin fashion.</p>",
    "module": "ngx_http_upstream_module",
    "link": "http/ngx_http_upstream_module.html#resolver",
    "name": "resolver"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>resolver_timeout</strong> <code><i>time</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>resolver_timeout 30s;</pre></td></tr><tr><th>Context:</th><td><code>upstream</code><br></td></tr></tbody></table><p>This directive appeared in version 1.17.5.</p>",
    "doc": "<p>Sets a timeout for name resolution, for example:</p><blockquote class=\"example\"><pre>resolver_timeout 5s;\n</pre></blockquote><blockquote class=\"note\">This directive is available as part of our <a href=\"http://nginx.com/products/\">commercial subscription</a>.</blockquote>",
    "module": "ngx_http_upstream_module",
    "link": "http/ngx_http_upstream_module.html#resolver_timeout",
    "name": "resolver_timeout"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>sticky</strong> <code>cookie</code> <code><i>name</i></code> [<code>expires=</code><code><i>time</i></code>] [<code>domain=</code><code><i>domain</i></code>] [<code>httponly</code>] [<code>samesite=</code><code>strict</code>|<code>lax</code>|<code>none</code>] [<code>secure</code>] [<code>path=</code><code><i>path</i></code>];</code><br><code><strong>sticky</strong> <code>route</code> <code><i>$variable</i></code> ...;</code><br><code><strong>sticky</strong> <code>learn</code> <code>create=</code><code><i>$variable</i></code> <code>lookup=</code><code><i>$variable</i></code> <code>zone=</code><code><i>name</i></code>:<code><i>size</i></code> [<code>timeout=</code><code><i>time</i></code>] [<code>header</code>] [<code>sync</code>];</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>upstream</code><br></td></tr></tbody></table><p>This directive appeared in version 1.5.7.</p>",
    "doc": "<p>Enables session affinity, which causes requests from the same client to be passed to the same server in a group of servers. Three methods are available:</p><dl class=\"compact\"><dt id=\"sticky_cookie\"><code>cookie</code></dt><dd><p>When the <code>cookie</code> method is used, information about the designated server is passed in an HTTP cookie generated by nginx:</p><blockquote class=\"example\"><pre>upstream backend {\n    server backend1.example.com;\n    server backend2.example.com;\n\n    sticky cookie srv_id expires=1h domain=.example.com path=/;\n}\n</pre></blockquote><p></p><p>A request that comes from a client not yet bound to a particular server is passed to the server selected by the configured balancing method. Further requests with this cookie will be passed to the designated server. If the designated server cannot process a request, the new server is selected as if the client has not been bound yet.</p><blockquote class=\"note\">As a load balancing method always tries to evenly distribute the load considering already bound requests, the server with a higher number of active bound requests has less possibility of getting new unbound requests.</blockquote><p></p><p>The first parameter sets the name of the cookie to be set or inspected. The cookie value is a hexadecimal representation of the MD5 hash of the IP address and port, or of the UNIX-domain socket path. However, if the “<code>route</code>” parameter of the <a href=\"https://nginx.org/en/docs/http/ngx_http_upstream_module.html#server\">server</a> directive is specified, the cookie value will be the value of the “<code>route</code>” parameter:</p><blockquote class=\"example\"><pre>upstream backend {\n    server backend1.example.com route=<strong>a</strong>;\n    server backend2.example.com route=<strong>b</strong>;\n\n    sticky cookie srv_id expires=1h domain=.example.com path=/;\n}\n</pre></blockquote><p>In this case, the value of the “<code>srv_id</code>” cookie will be either <code><i>a</i></code> or <code><i>b</i></code>.</p><p>Additional parameters may be as follows:</p><dl class=\"compact\"><dt><code>expires=</code><code><i>time</i></code></dt><dd>Sets the <code><i>time</i></code> for which a browser should keep the cookie. The special value <code>max</code> will cause the cookie to expire on “<code>31 Dec 2037 23:55:55 GMT</code>”. If the parameter is not specified, it will cause the cookie to expire at the end of a browser session.</dd><dt><code>domain=</code><code><i>domain</i></code></dt><dd>Defines the <code><i>domain</i></code> for which the cookie is set. Parameter value can contain variables (1.11.5).</dd><dt><code>httponly</code></dt><dd>Adds the <code>HttpOnly</code> attribute to the cookie (1.7.11).</dd><dt id=\"sticky_samesite\"><code>samesite=</code><code>strict</code> | <code>lax</code> | <code>none</code></dt><dd>Adds the <code>SameSite</code> attribute to the cookie with one of the following values (1.19.4): <code>Strict</code>, <code>Lax</code>, or <code>None</code>.</dd><dt><code>secure</code></dt><dd>Adds the <code>Secure</code> attribute to the cookie (1.7.11).</dd><dt><code>path=</code><code><i>path</i></code></dt><dd>Defines the <code><i>path</i></code> for which the cookie is set.</dd></dl><p>If any parameters are omitted, the corresponding cookie fields are not set.</p></dd><dt id=\"sticky_route\"><code>route</code></dt><dd><p>When the <code>route</code> method is used, proxied server assigns client a route on receipt of the first request. All subsequent requests from this client will carry routing information in a cookie or URI. This information is compared with the “<code>route</code>” parameter of the <a href=\"https://nginx.org/en/docs/http/ngx_http_upstream_module.html#server\">server</a> directive to identify the server to which the request should be proxied. If the “<code>route</code>” parameter is not specified, the route name will be a hexadecimal representation of the MD5 hash of the IP address and port, or of the UNIX-domain socket path. If the designated server cannot process a request, the new server is selected by the configured balancing method as if there is no routing information in the request.</p><p>The parameters of the <code>route</code> method specify variables that may contain routing information. The first non-empty variable is used to find the matching server.</p><p>Example:</p><blockquote class=\"example\"><pre>map $cookie_jsessionid $route_cookie {\n    ~.+\\.(?P&lt;route&gt;\\w+)$ $route;\n}\n\nmap $request_uri $route_uri {\n    ~jsessionid=.+\\.(?P&lt;route&gt;\\w+)$ $route;\n}\n\nupstream backend {\n    server backend1.example.com route=a;\n    server backend2.example.com route=b;\n\n    sticky route $route_cookie $route_uri;\n}\n</pre></blockquote><p>Here, the route is taken from the “<code>JSESSIONID</code>” cookie if present in a request. Otherwise, the route from the URI is used.</p></dd><dt id=\"sticky_learn\"><code>learn</code></dt><dd><p>When the <code>learn</code> method (1.7.1) is used, nginx analyzes upstream server responses and learns server-initiated sessions usually passed in an HTTP cookie.</p><blockquote class=\"example\"><pre>upstream backend {\n   server backend1.example.com:8080;\n   server backend2.example.com:8081;\n\n   sticky learn\n          create=$upstream_cookie_examplecookie\n          lookup=$cookie_examplecookie\n          zone=client_sessions:1m;\n}\n</pre></blockquote><p>In the example, the upstream server creates a session by setting the cookie “<code>EXAMPLECOOKIE</code>” in the response. Further requests with this cookie will be passed to the same server. If the server cannot process the request, the new server is selected as if the client has not been bound yet.</p><p>The parameters <code>create</code> and <code>lookup</code> specify variables that indicate how new sessions are created and existing sessions are searched, respectively. Both parameters may be specified more than once, in which case the first non-empty variable is used.</p><p>Sessions are stored in a shared memory zone, whose <code><i>name</i></code> and <code><i>size</i></code> are configured by the <code>zone</code> parameter. One megabyte zone can store about 4000 sessions on the 64-bit platform. The sessions that are not accessed during the time specified by the <code>timeout</code> parameter get removed from the zone. By default, <code>timeout</code> is set to 10 minutes.</p><a name=\"sticky_learn_header\"></a><p>The <code>header</code> parameter (1.13.1) allows creating a session right after receiving response headers from the upstream server.</p><a name=\"sticky_learn_sync\"></a><p>The <code>sync</code> parameter (1.13.8) enables <a href=\"https://nginx.org/en/docs/stream/ngx_stream_zone_sync_module.html#zone_sync\">synchronization</a> of the shared memory zone.</p></dd></dl><blockquote class=\"note\">This directive is available as part of our <a href=\"http://nginx.com/products/\">commercial subscription</a>.</blockquote>",
    "module": "ngx_http_upstream_module",
    "link": "http/ngx_http_upstream_module.html#sticky",
    "name": "sticky"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>sticky_cookie_insert</strong> <code><i>name</i></code> [<code>expires=</code><code><i>time</i></code>] [<code>domain=</code><code><i>domain</i></code>] [<code>path=</code><code><i>path</i></code>];</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>upstream</code><br></td></tr></tbody></table>",
    "doc": "<p>This directive is obsolete since version 1.5.7. An equivalent <a href=\"https://nginx.org/en/docs/http/ngx_http_upstream_module.html#sticky\">sticky</a> directive with a new syntax should be used instead:</p><blockquote class=\"note\"><code>sticky cookie</code> <code><i>name</i></code> [<code>expires=</code><code><i>time</i></code>] [<code>domain=</code><code><i>domain</i></code>] [<code>path=</code><code><i>path</i></code>];</blockquote>",
    "module": "ngx_http_upstream_module",
    "link": "http/ngx_http_upstream_module.html#sticky_cookie_insert",
    "name": "sticky_cookie_insert"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>upstream_conf</strong>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Turns on the HTTP interface of upstream configuration in the surrounding location. Access to this location should be <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#satisfy\">limited</a>.</p><p>Configuration commands can be used to:</p>",
    "module": "ngx_http_upstream_conf_module",
    "link": "http/ngx_http_upstream_conf_module.html#upstream_conf",
    "name": "upstream_conf"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>health_check</strong> [<code><i>parameters</i></code>];</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Enables periodic health checks of the servers in a <a href=\"https://nginx.org/en/docs/http/ngx_http_upstream_module.html#upstream\">group</a> referenced in the surrounding location.</p><p>The following optional parameters are supported:</p><dl class=\"compact\"><dt id=\"health_check_interval\"><code>interval</code>=<code><i>time</i></code></dt><dd>sets the interval between two consecutive health checks, by default, 5 seconds.</dd><dt id=\"health_check_jitter\"><code>jitter</code>=<code><i>time</i></code></dt><dd>sets the time within which each health check will be randomly delayed, by default, there is no delay.</dd><dt id=\"health_check_fails\"><code>fails</code>=<code><i>number</i></code></dt><dd>sets the number of consecutive failed health checks of a particular server after which this server will be considered unhealthy, by default, 1.</dd><dt id=\"health_check_passes\"><code>passes</code>=<code><i>number</i></code></dt><dd>sets the number of consecutive passed health checks of a particular server after which the server will be considered healthy, by default, 1.</dd><dt id=\"health_check_uri\"><code>uri</code>=<code><i>uri</i></code></dt><dd>defines the URI used in health check requests, by default, “<code>/</code>”.</dd><dt id=\"health_check_mandatory\"><code>mandatory</code> [<code>persistent</code>]</dt><dd><p>sets the initial “checking” state for a server until the first health check is completed (1.11.7). Client requests are not passed to servers in the “checking” state. If the parameter is not specified, the server will be initially considered healthy.</p><a name=\"health_check_persistent\"></a><p>The <code>persistent</code> parameter (1.19.7) sets the initial “up” state for a server after reload if the server was considered healthy before reload.</p></dd><dt id=\"health_check_match\"><code>match</code>=<code><i>name</i></code></dt><dd>specifies the <code>match</code> block configuring the tests that a response should pass in order for a health check to pass. By default, the response should have status code 2xx or 3xx.</dd><dt id=\"health_check_port\"><code>port</code>=<code><i>number</i></code></dt><dd>defines the port used when connecting to a server to perform a health check (1.9.7). By default, equals the <a href=\"https://nginx.org/en/docs/http/ngx_http_upstream_module.html#server\">server</a> port.</dd><dt id=\"health_check_grpc\"><code>type</code>=<code>grpc</code> [<code>grpc_service</code>=<code><i>name</i></code>] [<code>grpc_status</code>=<code><i>code</i></code>]</dt><dd>enables periodic <a href=\"https://github.com/grpc/grpc/blob/master/doc/health-checking.md#grpc-health-checking-protocol\">health checks</a> of a gRPC server or a particular gRPC service specified with the optional <code>grpc_service</code> parameter (1.19.5). If the server does not support the gRPC Health Checking Protocol, the optional <code>grpc_status</code> parameter can be used to specify non-zero gRPC <a href=\"https://github.com/grpc/grpc/blob/master/doc/statuscodes.md#status-codes-and-their-use-in-grpc\">status</a> (for example, status code “<code>12</code>” / “<code>UNIMPLEMENTED</code>”) that will be treated as healthy:<blockquote class=\"example\"><pre>health_check mandatory type=grpc grpc_status=12;\n</pre></blockquote>The <code>type</code>=<code>grpc</code> parameter must be specified after all other directive parameters, <code>grpc_service</code> and <code>grpc_status</code> must follow <code>type</code>=<code>grpc</code>. The parameter is not compatible with <a href=\"https://nginx.org/en/docs/http/ngx_http_upstream_hc_module.html#health_check_uri\"><code>uri</code></a> or <a href=\"https://nginx.org/en/docs/http/ngx_http_upstream_hc_module.html#health_check_match\"><code>match</code></a> parameters.</dd><dt id=\"health_check_keepalive_time\"><code>keepalive_time</code>=<code><i>time</i></code></dt><dd>enables <a href=\"https://nginx.org/en/docs/http/ngx_http_upstream_module.html#keepalive\">keepalive</a> connections for health checks and specifies the time during which requests can be processed through one keepalive connection (1.21.7). By default keepalive connections are disabled.</dd></dl>",
    "module": "ngx_http_upstream_hc_module",
    "link": "http/ngx_http_upstream_hc_module.html#health_check",
    "name": "health_check"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>match</strong> <code><i>name</i></code> { ... }</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code><br></td></tr></tbody></table>",
    "doc": "<p>Defines the named test set used to verify responses to health check requests.</p><p>The following items can be tested in a response:</p><dl class=\"compact\"><dt><code>status 200;</code></dt><dd>status is 200</dd><dt><code>status ! 500;</code></dt><dd>status is not 500</dd><dt><code>status 200 204;</code></dt><dd>status is 200 or 204</dd><dt><code>status ! 301 302;</code></dt><dd>status is neither 301 nor 302</dd><dt><code>status 200-399;</code></dt><dd>status is in the range from 200 to 399</dd><dt><code>status ! 400-599;</code></dt><dd>status is not in the range from 400 to 599</dd><dt><code>status 301-303 307;</code></dt><dd>status is either 301, 302, 303, or 307</dd></dl><dl class=\"compact\"><dt><code>header Content-Type = text/html;</code></dt><dd>header contains “Content-Type” with value <code>text/html</code></dd><dt><code>header Content-Type != text/html;</code></dt><dd>header contains “Content-Type” with value other than <code>text/html</code></dd><dt><code>header Connection ~ close;</code></dt><dd>header contains “Connection” with value matching regular expression <code>close</code></dd><dt><code>header Connection !~ close;</code></dt><dd>header contains “Connection” with value not matching regular expression <code>close</code></dd><dt><code>header Host;</code></dt><dd>header contains “Host”</dd><dt><code>header ! X-Accel-Redirect;</code></dt><dd>header lacks “X-Accel-Redirect”</dd></dl><dl class=\"compact\"><dt><code>body ~ \"Welcome to nginx!\";</code></dt><dd>body matches regular expression “<code>Welcome to nginx!</code>”</dd><dt><code>body !~ \"Welcome to nginx!\";</code></dt><dd>body does not match regular expression “<code>Welcome to nginx!</code>”</dd></dl><dl class=\"compact\"><dt id=\"match_require\"><code>require</code> <code><i>$variable</i></code> <code>...;</code></dt><dd>all specified variables are not empty and not equal to “0” (1.15.9).</dd></dl><p>If several tests are specified, the response matches only if it matches all tests.</p><blockquote class=\"note\">Only the first 256k of the response body are examined.</blockquote><p>Examples:</p><blockquote class=\"example\"><pre># status is 200, content type is \"text/html\",\n# and body contains \"Welcome to nginx!\"\nmatch welcome {\n    status 200;\n    header Content-Type = text/html;\n    body ~ \"Welcome to nginx!\";\n}\n</pre></blockquote><blockquote class=\"example\"><pre># status is not one of 301, 302, 303, or 307, and header does not have \"Refresh:\"\nmatch not_redirect {\n    status ! 301-303 307;\n    header ! Refresh;\n}\n</pre></blockquote><blockquote class=\"example\"><pre># status ok and not in maintenance mode\nmatch server_ok {\n    status 200-399;\n    body !~ \"maintenance mode\";\n}\n</pre></blockquote><blockquote class=\"example\"><pre># status is 200 or 204\nmap $upstream_status $good_status {\n    200 1;\n    204 1;\n}\n\nmatch server_ok {\n    require $good_status;\n}\n</pre></blockquote>",
    "module": "ngx_http_upstream_hc_module",
    "link": "http/ngx_http_upstream_hc_module.html#match",
    "name": "match"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>userid</strong> <code>on</code> | <code>v1</code> | <code>log</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>userid off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Enables or disables setting cookies and logging the received cookies:</p><dl class=\"compact\"><dt><code>on</code></dt><dd>enables the setting of version 2 cookies and logging of the received cookies;</dd><dt><code>v1</code></dt><dd>enables the setting of version 1 cookies and logging of the received cookies;</dd><dt><code>log</code></dt><dd>disables the setting of cookies, but enables logging of the received cookies;</dd><dt><code>off</code></dt><dd>disables the setting of cookies and logging of the received cookies.</dd></dl>",
    "module": "ngx_http_userid_module",
    "link": "http/ngx_http_userid_module.html#userid",
    "name": "userid"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>userid_domain</strong> <code><i>name</i></code> | <code>none</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>userid_domain none;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Defines a domain for which the cookie is set. The <code>none</code> parameter disables setting of a domain for the cookie.</p>",
    "module": "ngx_http_userid_module",
    "link": "http/ngx_http_userid_module.html#userid_domain",
    "name": "userid_domain"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>userid_expires</strong> <code><i>time</i></code> | <code>max</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>userid_expires off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets a time during which a browser should keep the cookie. The parameter <code>max</code> will cause the cookie to expire on “<code>31 Dec 2037 23:55:55 GMT</code>”. The parameter <code>off</code> will cause the cookie to expire at the end of a browser session.</p>",
    "module": "ngx_http_userid_module",
    "link": "http/ngx_http_userid_module.html#userid_expires",
    "name": "userid_expires"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>userid_flags</strong> <code>off</code> | <code><i>flag</i></code> ...;</code><br></td></tr><tr><th>Default:</th><td><pre>userid_flags off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.19.3.</p>",
    "doc": "<p>If the parameter is not <code>off</code>, defines one or more additional flags for the cookie: <code>secure</code>, <code>httponly</code>, <code>samesite=strict</code>, <code>samesite=lax</code>, <code>samesite=none</code>.</p>",
    "module": "ngx_http_userid_module",
    "link": "http/ngx_http_userid_module.html#userid_flags",
    "name": "userid_flags"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>userid_mark</strong> <code><i>letter</i></code> | <code><i>digit</i></code> | <code>=</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>userid_mark off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>If the parameter is not <code>off</code>, enables the cookie marking mechanism and sets the character used as a mark. This mechanism is used to add or change <a href=\"https://nginx.org/en/docs/http/ngx_http_userid_module.html#userid_p3p\">userid_p3p</a> and/or a cookie expiration time while preserving the client identifier. A mark can be any letter of the English alphabet (case-sensitive), digit, or the “<code>=</code>” character.</p><p>If the mark is set, it is compared with the first padding symbol in the base64 representation of the client identifier passed in a cookie. If they do not match, the cookie is resent with the specified mark, expiration time, and “P3P” header.</p>",
    "module": "ngx_http_userid_module",
    "link": "http/ngx_http_userid_module.html#userid_mark",
    "name": "userid_mark"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>userid_name</strong> <code><i>name</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>userid_name uid;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets the cookie name.</p>",
    "module": "ngx_http_userid_module",
    "link": "http/ngx_http_userid_module.html#userid_name",
    "name": "userid_name"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>userid_p3p</strong> <code><i>string</i></code> | <code>none</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>userid_p3p none;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets a value for the “P3P” header field that will be sent along with the cookie. If the directive is set to the special value <code>none</code>, the “P3P” header will not be sent in a response.</p>",
    "module": "ngx_http_userid_module",
    "link": "http/ngx_http_userid_module.html#userid_p3p",
    "name": "userid_p3p"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>userid_path</strong> <code><i>path</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>userid_path /;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Defines a path for which the cookie is set.</p>",
    "module": "ngx_http_userid_module",
    "link": "http/ngx_http_userid_module.html#userid_path",
    "name": "userid_path"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>userid_service</strong> <code><i>number</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>userid_service IP address of the server;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>If identifiers are issued by multiple servers (services), each service should be assigned its own <code><i>number</i></code> to ensure that client identifiers are unique. For version 1 cookies, the default value is zero. For version 2 cookies, the default value is the number composed from the last four octets of the server’s IP address.</p>",
    "module": "ngx_http_userid_module",
    "link": "http/ngx_http_userid_module.html#userid_service",
    "name": "userid_service"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>uwsgi_bind</strong> <code><i>address</i></code> [<code>transparent</code>] | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Makes outgoing connections to a uwsgi server originate from the specified local IP address with an optional port (1.11.2). Parameter value can contain variables (1.3.12). The special value <code>off</code> (1.3.12) cancels the effect of the <code>uwsgi_bind</code> directive inherited from the previous configuration level, which allows the system to auto-assign the local IP address and port.</p>",
    "module": "ngx_http_uwsgi_module",
    "link": "http/ngx_http_uwsgi_module.html#uwsgi_bind",
    "name": "uwsgi_bind"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>uwsgi_buffer_size</strong> <code><i>size</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>uwsgi_buffer_size 4k|8k;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets the <code><i>size</i></code> of the buffer used for reading the first part of the response received from the uwsgi server. This part usually contains a small response header. By default, the buffer size is equal to one memory page. This is either 4K or 8K, depending on a platform. It can be made smaller, however.</p>",
    "module": "ngx_http_uwsgi_module",
    "link": "http/ngx_http_uwsgi_module.html#uwsgi_buffer_size",
    "name": "uwsgi_buffer_size"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>uwsgi_buffering</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>uwsgi_buffering on;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Enables or disables buffering of responses from the uwsgi server.</p><p>When buffering is enabled, nginx receives a response from the uwsgi server as soon as possible, saving it into the buffers set by the <a href=\"https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_buffer_size\">uwsgi_buffer_size</a> and <a href=\"https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_buffers\">uwsgi_buffers</a> directives. If the whole response does not fit into memory, a part of it can be saved to a <a href=\"https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_temp_path\">temporary file</a> on the disk. Writing to temporary files is controlled by the <a href=\"https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_max_temp_file_size\">uwsgi_max_temp_file_size</a> and <a href=\"https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_temp_file_write_size\">uwsgi_temp_file_write_size</a> directives.</p><p>When buffering is disabled, the response is passed to a client synchronously, immediately as it is received. nginx will not try to read the whole response from the uwsgi server. The maximum size of the data that nginx can receive from the server at a time is set by the <a href=\"https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_buffer_size\">uwsgi_buffer_size</a> directive.</p><p>Buffering can also be enabled or disabled by passing “<code>yes</code>” or “<code>no</code>” in the “X-Accel-Buffering” response header field. This capability can be disabled using the <a href=\"https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_ignore_headers\">uwsgi_ignore_headers</a> directive.</p>",
    "module": "ngx_http_uwsgi_module",
    "link": "http/ngx_http_uwsgi_module.html#uwsgi_buffering",
    "name": "uwsgi_buffering"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>uwsgi_buffers</strong> <code><i>number</i></code> <code><i>size</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>uwsgi_buffers 8 4k|8k;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets the <code><i>number</i></code> and <code><i>size</i></code> of the buffers used for reading a response from the uwsgi server, for a single connection. By default, the buffer size is equal to one memory page. This is either 4K or 8K, depending on a platform.</p>",
    "module": "ngx_http_uwsgi_module",
    "link": "http/ngx_http_uwsgi_module.html#uwsgi_buffers",
    "name": "uwsgi_buffers"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>uwsgi_busy_buffers_size</strong> <code><i>size</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>uwsgi_busy_buffers_size 8k|16k;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>When <a href=\"https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_buffering\">buffering</a> of responses from the uwsgi server is enabled, limits the total <code><i>size</i></code> of buffers that can be busy sending a response to the client while the response is not yet fully read. In the meantime, the rest of the buffers can be used for reading the response and, if needed, buffering part of the response to a temporary file. By default, <code><i>size</i></code> is limited by the size of two buffers set by the <a href=\"https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_buffer_size\">uwsgi_buffer_size</a> and <a href=\"https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_buffers\">uwsgi_buffers</a> directives.</p>",
    "module": "ngx_http_uwsgi_module",
    "link": "http/ngx_http_uwsgi_module.html#uwsgi_busy_buffers_size",
    "name": "uwsgi_busy_buffers_size"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>uwsgi_cache</strong> <code><i>zone</i></code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>uwsgi_cache off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Defines a shared memory zone used for caching. The same zone can be used in several places. Parameter value can contain variables (1.7.9). The <code>off</code> parameter disables caching inherited from the previous configuration level.</p>",
    "module": "ngx_http_uwsgi_module",
    "link": "http/ngx_http_uwsgi_module.html#uwsgi_cache",
    "name": "uwsgi_cache"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>uwsgi_cache_background_update</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>uwsgi_cache_background_update off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.11.10.</p>",
    "doc": "<p>Allows starting a background subrequest to update an expired cache item, while a stale cached response is returned to the client. Note that it is necessary to <a href=\"https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_cache_use_stale_updating\">allow</a> the usage of a stale cached response when it is being updated.</p>",
    "module": "ngx_http_uwsgi_module",
    "link": "http/ngx_http_uwsgi_module.html#uwsgi_cache_background_update",
    "name": "uwsgi_cache_background_update"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>uwsgi_cache_bypass</strong> <code><i>string</i></code> ...;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Defines conditions under which the response will not be taken from a cache. If at least one value of the string parameters is not empty and is not equal to “0” then the response will not be taken from the cache:</p><blockquote class=\"example\"><pre>uwsgi_cache_bypass $cookie_nocache $arg_nocache$arg_comment;\nuwsgi_cache_bypass $http_pragma    $http_authorization;\n</pre></blockquote><p>Can be used along with the <a href=\"https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_no_cache\">uwsgi_no_cache</a> directive.</p>",
    "module": "ngx_http_uwsgi_module",
    "link": "http/ngx_http_uwsgi_module.html#uwsgi_cache_bypass",
    "name": "uwsgi_cache_bypass"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>uwsgi_cache_key</strong> <code><i>string</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Defines a key for caching, for example</p><blockquote class=\"example\"><pre>uwsgi_cache_key localhost:9000$request_uri;\n</pre></blockquote>",
    "module": "ngx_http_uwsgi_module",
    "link": "http/ngx_http_uwsgi_module.html#uwsgi_cache_key",
    "name": "uwsgi_cache_key"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>uwsgi_cache_lock</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>uwsgi_cache_lock off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.1.12.</p>",
    "doc": "<p>When enabled, only one request at a time will be allowed to populate a new cache element identified according to the <a href=\"https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_cache_key\">uwsgi_cache_key</a> directive by passing a request to a uwsgi server. Other requests of the same cache element will either wait for a response to appear in the cache or the cache lock for this element to be released, up to the time set by the <a href=\"https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_cache_lock_timeout\">uwsgi_cache_lock_timeout</a> directive.</p>",
    "module": "ngx_http_uwsgi_module",
    "link": "http/ngx_http_uwsgi_module.html#uwsgi_cache_lock",
    "name": "uwsgi_cache_lock"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>uwsgi_cache_lock_age</strong> <code><i>time</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>uwsgi_cache_lock_age 5s;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.7.8.</p>",
    "doc": "<p>If the last request passed to the uwsgi server for populating a new cache element has not completed for the specified <code><i>time</i></code>, one more request may be passed to the uwsgi server.</p>",
    "module": "ngx_http_uwsgi_module",
    "link": "http/ngx_http_uwsgi_module.html#uwsgi_cache_lock_age",
    "name": "uwsgi_cache_lock_age"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>uwsgi_cache_lock_timeout</strong> <code><i>time</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>uwsgi_cache_lock_timeout 5s;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.1.12.</p>",
    "doc": "<p>Sets a timeout for <a href=\"https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_cache_lock\">uwsgi_cache_lock</a>. When the <code><i>time</i></code> expires, the request will be passed to the uwsgi server, however, the response will not be cached.</p><blockquote class=\"note\">Before 1.7.8, the response could be cached.</blockquote>",
    "module": "ngx_http_uwsgi_module",
    "link": "http/ngx_http_uwsgi_module.html#uwsgi_cache_lock_timeout",
    "name": "uwsgi_cache_lock_timeout"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>uwsgi_cache_max_range_offset</strong> <code><i>number</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.11.6.</p>",
    "doc": "<p>Sets an offset in bytes for byte-range requests. If the range is beyond the offset, the range request will be passed to the uwsgi server and the response will not be cached.</p>",
    "module": "ngx_http_uwsgi_module",
    "link": "http/ngx_http_uwsgi_module.html#uwsgi_cache_max_range_offset",
    "name": "uwsgi_cache_max_range_offset"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>uwsgi_cache_methods</strong> <code>GET</code> | <code>HEAD</code> | <code>POST</code> ...;</code><br></td></tr><tr><th>Default:</th><td><pre>uwsgi_cache_methods GET HEAD;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>If the client request method is listed in this directive then the response will be cached. “<code>GET</code>” and “<code>HEAD</code>” methods are always added to the list, though it is recommended to specify them explicitly. See also the <a href=\"https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_no_cache\">uwsgi_no_cache</a> directive.</p>",
    "module": "ngx_http_uwsgi_module",
    "link": "http/ngx_http_uwsgi_module.html#uwsgi_cache_methods",
    "name": "uwsgi_cache_methods"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>uwsgi_cache_min_uses</strong> <code><i>number</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>uwsgi_cache_min_uses 1;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets the <code><i>number</i></code> of requests after which the response will be cached.</p>",
    "module": "ngx_http_uwsgi_module",
    "link": "http/ngx_http_uwsgi_module.html#uwsgi_cache_min_uses",
    "name": "uwsgi_cache_min_uses"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>uwsgi_cache_path</strong> <code><i>path</i></code> [<code>levels</code>=<code><i>levels</i></code>] [<code>use_temp_path</code>=<code>on</code>|<code>off</code>] <code>keys_zone</code>=<code><i>name</i></code>:<code><i>size</i></code> [<code>inactive</code>=<code><i>time</i></code>] [<code>max_size</code>=<code><i>size</i></code>] [<code>min_free</code>=<code><i>size</i></code>] [<code>manager_files</code>=<code><i>number</i></code>] [<code>manager_sleep</code>=<code><i>time</i></code>] [<code>manager_threshold</code>=<code><i>time</i></code>] [<code>loader_files</code>=<code><i>number</i></code>] [<code>loader_sleep</code>=<code><i>time</i></code>] [<code>loader_threshold</code>=<code><i>time</i></code>] [<code>purger</code>=<code>on</code>|<code>off</code>] [<code>purger_files</code>=<code><i>number</i></code>] [<code>purger_sleep</code>=<code><i>time</i></code>] [<code>purger_threshold</code>=<code><i>time</i></code>];</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets the path and other parameters of a cache. Cache data are stored in files. The file name in a cache is a result of applying the MD5 function to the <a href=\"https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_cache_key\">cache key</a>. The <code>levels</code> parameter defines hierarchy levels of a cache: from 1 to 3, each level accepts values 1 or 2. For example, in the following configuration</p><blockquote class=\"example\"><pre>uwsgi_cache_path /data/nginx/cache levels=1:2 keys_zone=one:10m;\n</pre></blockquote><p>file names in a cache will look like this:</p><blockquote class=\"example\"><pre>/data/nginx/cache/<strong>c</strong>/<strong>29</strong>/b7f54b2df7773722d382f4809d650<strong>29c</strong>\n</pre></blockquote><p>A cached response is first written to a temporary file, and then the file is renamed. Starting from version 0.8.9, temporary files and the cache can be put on different file systems. However, be aware that in this case a file is copied across two file systems instead of the cheap renaming operation. It is thus recommended that for any given location both cache and a directory holding temporary files are put on the same file system. A directory for temporary files is set based on the <code>use_temp_path</code> parameter (1.7.10). If this parameter is omitted or set to the value <code>on</code>, the directory set by the <a href=\"https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_temp_path\">uwsgi_temp_path</a> directive for the given location will be used. If the value is set to <code>off</code>, temporary files will be put directly in the cache directory.</p><p>In addition, all active keys and information about data are stored in a shared memory zone, whose <code><i>name</i></code> and <code><i>size</i></code> are configured by the <code>keys_zone</code> parameter. One megabyte zone can store about 8 thousand keys.</p><blockquote class=\"note\">As part of <a href=\"http://nginx.com/products/\">commercial subscription</a>, the shared memory zone also stores extended cache <a href=\"https://nginx.org/en/docs/http/ngx_http_api_module.html#http_caches_\">information</a>, thus, it is required to specify a larger zone size for the same number of keys. For example, one megabyte zone can store about 4 thousand keys.</blockquote><p>Cached data that are not accessed during the time specified by the <code>inactive</code> parameter get removed from the cache regardless of their freshness. By default, <code>inactive</code> is set to 10 minutes.</p>",
    "module": "ngx_http_uwsgi_module",
    "link": "http/ngx_http_uwsgi_module.html#uwsgi_cache_path",
    "name": "uwsgi_cache_path"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>uwsgi_cache_purge</strong> string ...;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.5.7.</p>",
    "doc": "<p>Defines conditions under which the request will be considered a cache purge request. If at least one value of the string parameters is not empty and is not equal to “0” then the cache entry with a corresponding <a href=\"https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_cache_key\">cache key</a> is removed. The result of successful operation is indicated by returning the 204 (No Content) response.</p><p>If the <a href=\"https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_cache_key\">cache key</a> of a purge request ends with an asterisk (“<code>*</code>”), all cache entries matching the wildcard key will be removed from the cache. However, these entries will remain on the disk until they are deleted for either <a href=\"https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_cache_path\">inactivity</a>, or processed by the <a href=\"https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#purger\">cache purger</a> (1.7.12), or a client attempts to access them.</p><p>Example configuration:</p><blockquote class=\"example\"><pre>uwsgi_cache_path /data/nginx/cache keys_zone=cache_zone:10m;\n\nmap $request_method $purge_method {\n    PURGE   1;\n    default 0;\n}\n\nserver {\n    ...\n    location / {\n        uwsgi_pass        backend;\n        uwsgi_cache       cache_zone;\n        uwsgi_cache_key   $uri;\n        uwsgi_cache_purge $purge_method;\n    }\n}\n</pre></blockquote><blockquote class=\"note\">This functionality is available as part of our <a href=\"http://nginx.com/products/\">commercial subscription</a>.</blockquote>",
    "module": "ngx_http_uwsgi_module",
    "link": "http/ngx_http_uwsgi_module.html#uwsgi_cache_purge",
    "name": "uwsgi_cache_purge"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>uwsgi_cache_revalidate</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>uwsgi_cache_revalidate off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.5.7.</p>",
    "doc": "<p>Enables revalidation of expired cache items using conditional requests with the “If-Modified-Since” and “If-None-Match” header fields.</p>",
    "module": "ngx_http_uwsgi_module",
    "link": "http/ngx_http_uwsgi_module.html#uwsgi_cache_revalidate",
    "name": "uwsgi_cache_revalidate"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>uwsgi_cache_use_stale</strong> <code>error</code> | <code>timeout</code> | <code>invalid_header</code> | <code>updating</code> | <code>http_500</code> | <code>http_503</code> | <code>http_403</code> | <code>http_404</code> | <code>http_429</code> | <code>off</code> ...;</code><br></td></tr><tr><th>Default:</th><td><pre>uwsgi_cache_use_stale off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Determines in which cases a stale cached response can be used when an error occurs during communication with the uwsgi server. The directive’s parameters match the parameters of the <a href=\"https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_next_upstream\">uwsgi_next_upstream</a> directive.</p><p>The <code>error</code> parameter also permits using a stale cached response if a uwsgi server to process a request cannot be selected.</p>",
    "module": "ngx_http_uwsgi_module",
    "link": "http/ngx_http_uwsgi_module.html#uwsgi_cache_use_stale",
    "name": "uwsgi_cache_use_stale"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>uwsgi_cache_valid</strong> [<code><i>code</i></code> ...] <code><i>time</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets caching time for different response codes. For example, the following directives</p><blockquote class=\"example\"><pre>uwsgi_cache_valid 200 302 10m;\nuwsgi_cache_valid 404      1m;\n</pre></blockquote><p>set 10 minutes of caching for responses with codes 200 and 302 and 1 minute for responses with code 404.</p><p>If only caching <code><i>time</i></code> is specified</p><blockquote class=\"example\"><pre>uwsgi_cache_valid 5m;\n</pre></blockquote><p>then only 200, 301, and 302 responses are cached.</p><p>In addition, the <code>any</code> parameter can be specified to cache any responses:</p><blockquote class=\"example\"><pre>uwsgi_cache_valid 200 302 10m;\nuwsgi_cache_valid 301      1h;\nuwsgi_cache_valid any      1m;\n</pre></blockquote><p>Parameters of caching can also be set directly in the response header. This has higher priority than setting of caching time using the directive.</p>",
    "module": "ngx_http_uwsgi_module",
    "link": "http/ngx_http_uwsgi_module.html#uwsgi_cache_valid",
    "name": "uwsgi_cache_valid"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>uwsgi_connect_timeout</strong> <code><i>time</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>uwsgi_connect_timeout 60s;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Defines a timeout for establishing a connection with a uwsgi server. It should be noted that this timeout cannot usually exceed 75 seconds.</p>",
    "module": "ngx_http_uwsgi_module",
    "link": "http/ngx_http_uwsgi_module.html#uwsgi_connect_timeout",
    "name": "uwsgi_connect_timeout"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>uwsgi_force_ranges</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>uwsgi_force_ranges off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.7.7.</p>",
    "doc": "<p>Enables byte-range support for both cached and uncached responses from the uwsgi server regardless of the “Accept-Ranges” field in these responses.</p>",
    "module": "ngx_http_uwsgi_module",
    "link": "http/ngx_http_uwsgi_module.html#uwsgi_force_ranges",
    "name": "uwsgi_force_ranges"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>uwsgi_hide_header</strong> <code><i>field</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>By default, nginx does not pass the header fields “Status” and “X-Accel-...” from the response of a uwsgi server to a client. The <code>uwsgi_hide_header</code> directive sets additional fields that will not be passed. If, on the contrary, the passing of fields needs to be permitted, the <a href=\"https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_pass_header\">uwsgi_pass_header</a> directive can be used.</p>",
    "module": "ngx_http_uwsgi_module",
    "link": "http/ngx_http_uwsgi_module.html#uwsgi_hide_header",
    "name": "uwsgi_hide_header"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>uwsgi_ignore_client_abort</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>uwsgi_ignore_client_abort off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Determines whether the connection with a uwsgi server should be closed when a client closes the connection without waiting for a response.</p>",
    "module": "ngx_http_uwsgi_module",
    "link": "http/ngx_http_uwsgi_module.html#uwsgi_ignore_client_abort",
    "name": "uwsgi_ignore_client_abort"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>uwsgi_ignore_headers</strong> <code><i>field</i></code> ...;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Disables processing of certain response header fields from the uwsgi server. The following fields can be ignored: “X-Accel-Redirect”, “X-Accel-Expires”, “X-Accel-Limit-Rate” (1.1.6), “X-Accel-Buffering” (1.1.6), “X-Accel-Charset” (1.1.6), “Expires”, “Cache-Control”, “Set-Cookie” (0.8.44), and “Vary” (1.7.7).</p><p>If not disabled, processing of these header fields has the following effect:</p>",
    "module": "ngx_http_uwsgi_module",
    "link": "http/ngx_http_uwsgi_module.html#uwsgi_ignore_headers",
    "name": "uwsgi_ignore_headers"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>uwsgi_intercept_errors</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>uwsgi_intercept_errors off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Determines whether a uwsgi server responses with codes greater than or equal to 300 should be passed to a client or be intercepted and redirected to nginx for processing with the <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#error_page\">error_page</a> directive.</p>",
    "module": "ngx_http_uwsgi_module",
    "link": "http/ngx_http_uwsgi_module.html#uwsgi_intercept_errors",
    "name": "uwsgi_intercept_errors"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>uwsgi_limit_rate</strong> <code><i>rate</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>uwsgi_limit_rate 0;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.7.7.</p>",
    "doc": "<p>Limits the speed of reading the response from the uwsgi server. The <code><i>rate</i></code> is specified in bytes per second. The zero value disables rate limiting. The limit is set per a request, and so if nginx simultaneously opens two connections to the uwsgi server, the overall rate will be twice as much as the specified limit. The limitation works only if <a href=\"https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_buffering\">buffering</a> of responses from the uwsgi server is enabled.</p>",
    "module": "ngx_http_uwsgi_module",
    "link": "http/ngx_http_uwsgi_module.html#uwsgi_limit_rate",
    "name": "uwsgi_limit_rate"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>uwsgi_max_temp_file_size</strong> <code><i>size</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>uwsgi_max_temp_file_size 1024m;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>When <a href=\"https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_buffering\">buffering</a> of responses from the uwsgi server is enabled, and the whole response does not fit into the buffers set by the <a href=\"https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_buffer_size\">uwsgi_buffer_size</a> and <a href=\"https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_buffers\">uwsgi_buffers</a> directives, a part of the response can be saved to a temporary file. This directive sets the maximum <code><i>size</i></code> of the temporary file. The size of data written to the temporary file at a time is set by the <a href=\"https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_temp_file_write_size\">uwsgi_temp_file_write_size</a> directive.</p><p>The zero value disables buffering of responses to temporary files.</p><blockquote class=\"note\">This restriction does not apply to responses that will be <a href=\"https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_cache\">cached</a> or <a href=\"https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_store\">stored</a> on disk.</blockquote>",
    "module": "ngx_http_uwsgi_module",
    "link": "http/ngx_http_uwsgi_module.html#uwsgi_max_temp_file_size",
    "name": "uwsgi_max_temp_file_size"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>uwsgi_modifier1</strong> <code><i>number</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>uwsgi_modifier1 0;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets the value of the <code>modifier1</code> field in the <a href=\"http://uwsgi-docs.readthedocs.org/en/latest/Protocol.html#uwsgi-packet-header\">uwsgi packet header</a>.</p>",
    "module": "ngx_http_uwsgi_module",
    "link": "http/ngx_http_uwsgi_module.html#uwsgi_modifier1",
    "name": "uwsgi_modifier1"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>uwsgi_modifier2</strong> <code><i>number</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>uwsgi_modifier2 0;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets the value of the <code>modifier2</code> field in the <a href=\"http://uwsgi-docs.readthedocs.org/en/latest/Protocol.html#uwsgi-packet-header\">uwsgi packet header</a>.</p>",
    "module": "ngx_http_uwsgi_module",
    "link": "http/ngx_http_uwsgi_module.html#uwsgi_modifier2",
    "name": "uwsgi_modifier2"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>uwsgi_next_upstream</strong> <code>error</code> | <code>timeout</code> | <code>invalid_header</code> | <code>http_500</code> | <code>http_503</code> | <code>http_403</code> | <code>http_404</code> | <code>http_429</code> | <code>non_idempotent</code> | <code>off</code> ...;</code><br></td></tr><tr><th>Default:</th><td><pre>uwsgi_next_upstream error timeout;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Specifies in which cases a request should be passed to the next server:</p><dl class=\"compact\"><dt><code>error</code></dt><dd>an error occurred while establishing a connection with the server, passing a request to it, or reading the response header;</dd><dt><code>timeout</code></dt><dd>a timeout has occurred while establishing a connection with the server, passing a request to it, or reading the response header;</dd><dt><code>invalid_header</code></dt><dd>a server returned an empty or invalid response;</dd><dt><code>http_500</code></dt><dd>a server returned a response with the code 500;</dd><dt><code>http_503</code></dt><dd>a server returned a response with the code 503;</dd><dt><code>http_403</code></dt><dd>a server returned a response with the code 403;</dd><dt><code>http_404</code></dt><dd>a server returned a response with the code 404;</dd><dt><code>http_429</code></dt><dd>a server returned a response with the code 429 (1.11.13);</dd><dt id=\"non_idempotent\"><code>non_idempotent</code></dt><dd>normally, requests with a <a href=\"https://datatracker.ietf.org/doc/html/rfc7231#section-4.2.2\">non-idempotent</a> method (<code>POST</code>, <code>LOCK</code>, <code>PATCH</code>) are not passed to the next server if a request has been sent to an upstream server (1.9.13); enabling this option explicitly allows retrying such requests;</dd><dt><code>off</code></dt><dd>disables passing a request to the next server.</dd></dl><p>One should bear in mind that passing a request to the next server is only possible if nothing has been sent to a client yet. That is, if an error or timeout occurs in the middle of the transferring of a response, fixing this is impossible.</p><p>The directive also defines what is considered an <a href=\"https://nginx.org/en/docs/http/ngx_http_upstream_module.html#max_fails\">unsuccessful attempt</a> of communication with a server. The cases of <code>error</code>, <code>timeout</code> and <code>invalid_header</code> are always considered unsuccessful attempts, even if they are not specified in the directive. The cases of <code>http_500</code>, <code>http_503</code>, and <code>http_429</code> are considered unsuccessful attempts only if they are specified in the directive. The cases of <code>http_403</code> and <code>http_404</code> are never considered unsuccessful attempts.</p><p>Passing a request to the next server can be limited by <a href=\"https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_next_upstream_tries\">the number of tries</a> and by <a href=\"https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_next_upstream_timeout\">time</a>.</p>",
    "module": "ngx_http_uwsgi_module",
    "link": "http/ngx_http_uwsgi_module.html#uwsgi_next_upstream",
    "name": "uwsgi_next_upstream"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>uwsgi_next_upstream_timeout</strong> <code><i>time</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>uwsgi_next_upstream_timeout 0;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.7.5.</p>",
    "doc": "<p>Limits the time during which a request can be passed to the <a href=\"https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_next_upstream\">next server</a>. The <code>0</code> value turns off this limitation.</p>",
    "module": "ngx_http_uwsgi_module",
    "link": "http/ngx_http_uwsgi_module.html#uwsgi_next_upstream_timeout",
    "name": "uwsgi_next_upstream_timeout"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>uwsgi_next_upstream_tries</strong> <code><i>number</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>uwsgi_next_upstream_tries 0;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.7.5.</p>",
    "doc": "<p>Limits the number of possible tries for passing a request to the <a href=\"https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_next_upstream\">next server</a>. The <code>0</code> value turns off this limitation.</p>",
    "module": "ngx_http_uwsgi_module",
    "link": "http/ngx_http_uwsgi_module.html#uwsgi_next_upstream_tries",
    "name": "uwsgi_next_upstream_tries"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>uwsgi_no_cache</strong> <code><i>string</i></code> ...;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Defines conditions under which the response will not be saved to a cache. If at least one value of the string parameters is not empty and is not equal to “0” then the response will not be saved:</p><blockquote class=\"example\"><pre>uwsgi_no_cache $cookie_nocache $arg_nocache$arg_comment;\nuwsgi_no_cache $http_pragma    $http_authorization;\n</pre></blockquote><p>Can be used along with the <a href=\"https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_cache_bypass\">uwsgi_cache_bypass</a> directive.</p>",
    "module": "ngx_http_uwsgi_module",
    "link": "http/ngx_http_uwsgi_module.html#uwsgi_no_cache",
    "name": "uwsgi_no_cache"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>uwsgi_param</strong> <code><i>parameter</i></code> <code><i>value</i></code> [<code>if_not_empty</code>];</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets a <code><i>parameter</i></code> that should be passed to the uwsgi server. The <code><i>value</i></code> can contain text, variables, and their combination. These directives are inherited from the previous configuration level if and only if there are no <code>uwsgi_param</code> directives defined on the current level.</p><p>Standard <a href=\"https://datatracker.ietf.org/doc/html/rfc3875#section-4.1\">CGI environment variables</a> should be provided as uwsgi headers, see the <code>uwsgi_params</code> file provided in the distribution:</p><blockquote class=\"example\"><pre>location / {\n    include uwsgi_params;\n    ...\n}\n</pre></blockquote><p>If the directive is specified with <code>if_not_empty</code> (1.1.11) then such a parameter will be passed to the server only if its value is not empty:</p><blockquote class=\"example\"><pre>uwsgi_param HTTPS $https if_not_empty;\n</pre></blockquote>",
    "module": "ngx_http_uwsgi_module",
    "link": "http/ngx_http_uwsgi_module.html#uwsgi_param",
    "name": "uwsgi_param"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>uwsgi_pass</strong> [<code><i>protocol</i></code>://]<code><i>address</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>location</code>, <code>if in location</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets the protocol and address of a uwsgi server. As a <code><i>protocol</i></code>, “<code>uwsgi</code>” or “<code>suwsgi</code>” (secured uwsgi, uwsgi over SSL) can be specified. The address can be specified as a domain name or IP address, and a port:</p><blockquote class=\"example\"><pre>uwsgi_pass localhost:9000;\nuwsgi_pass uwsgi://localhost:9000;\nuwsgi_pass suwsgi://[2001:db8::1]:9090;\n</pre></blockquote><p>or as a UNIX-domain socket path:</p><blockquote class=\"example\"><pre>uwsgi_pass unix:/tmp/uwsgi.socket;\n</pre></blockquote><p>If a domain name resolves to several addresses, all of them will be used in a round-robin fashion. In addition, an address can be specified as a <a href=\"https://nginx.org/en/docs/http/ngx_http_upstream_module.html\">server group</a>.</p><p>Parameter value can contain variables. In this case, if an address is specified as a domain name, the name is searched among the described <a href=\"https://nginx.org/en/docs/http/ngx_http_upstream_module.html\">server groups</a>, and, if not found, is determined using a <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#resolver\">resolver</a>.</p><blockquote class=\"note\">Secured uwsgi protocol is supported since version 1.5.8.</blockquote>",
    "module": "ngx_http_uwsgi_module",
    "link": "http/ngx_http_uwsgi_module.html#uwsgi_pass",
    "name": "uwsgi_pass"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>uwsgi_pass_header</strong> <code><i>field</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Permits passing <a href=\"https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_hide_header\">otherwise disabled</a> header fields from a uwsgi server to a client.</p>",
    "module": "ngx_http_uwsgi_module",
    "link": "http/ngx_http_uwsgi_module.html#uwsgi_pass_header",
    "name": "uwsgi_pass_header"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>uwsgi_pass_request_body</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>uwsgi_pass_request_body on;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Indicates whether the original request body is passed to the uwsgi server. See also the <a href=\"https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_pass_request_headers\">uwsgi_pass_request_headers</a> directive.</p>",
    "module": "ngx_http_uwsgi_module",
    "link": "http/ngx_http_uwsgi_module.html#uwsgi_pass_request_body",
    "name": "uwsgi_pass_request_body"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>uwsgi_pass_request_headers</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>uwsgi_pass_request_headers on;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Indicates whether the header fields of the original request are passed to the uwsgi server. See also the <a href=\"https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_pass_request_body\">uwsgi_pass_request_body</a> directive.</p>",
    "module": "ngx_http_uwsgi_module",
    "link": "http/ngx_http_uwsgi_module.html#uwsgi_pass_request_headers",
    "name": "uwsgi_pass_request_headers"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>uwsgi_read_timeout</strong> <code><i>time</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>uwsgi_read_timeout 60s;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Defines a timeout for reading a response from the uwsgi server. The timeout is set only between two successive read operations, not for the transmission of the whole response. If the uwsgi server does not transmit anything within this time, the connection is closed.</p>",
    "module": "ngx_http_uwsgi_module",
    "link": "http/ngx_http_uwsgi_module.html#uwsgi_read_timeout",
    "name": "uwsgi_read_timeout"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>uwsgi_request_buffering</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>uwsgi_request_buffering on;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.7.11.</p>",
    "doc": "<p>Enables or disables buffering of a client request body.</p><p>When buffering is enabled, the entire request body is <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#client_body_buffer_size\">read</a> from the client before sending the request to a uwsgi server.</p><p>When buffering is disabled, the request body is sent to the uwsgi server immediately as it is received. In this case, the request cannot be passed to the <a href=\"https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_next_upstream\">next server</a> if nginx already started sending the request body.</p><p>When HTTP/1.1 chunked transfer encoding is used to send the original request body, the request body will be buffered regardless of the directive value.</p>",
    "module": "ngx_http_uwsgi_module",
    "link": "http/ngx_http_uwsgi_module.html#uwsgi_request_buffering",
    "name": "uwsgi_request_buffering"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>uwsgi_send_timeout</strong> <code><i>time</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>uwsgi_send_timeout 60s;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets a timeout for transmitting a request to the uwsgi server. The timeout is set only between two successive write operations, not for the transmission of the whole request. If the uwsgi server does not receive anything within this time, the connection is closed.</p>",
    "module": "ngx_http_uwsgi_module",
    "link": "http/ngx_http_uwsgi_module.html#uwsgi_send_timeout",
    "name": "uwsgi_send_timeout"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>uwsgi_socket_keepalive</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>uwsgi_socket_keepalive off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.15.6.</p>",
    "doc": "<p>Configures the “TCP keepalive” behavior for outgoing connections to a uwsgi server. By default, the operating system’s settings are in effect for the socket. If the directive is set to the value “<code>on</code>”, the <code>SO_KEEPALIVE</code> socket option is turned on for the socket.</p>",
    "module": "ngx_http_uwsgi_module",
    "link": "http/ngx_http_uwsgi_module.html#uwsgi_socket_keepalive",
    "name": "uwsgi_socket_keepalive"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>uwsgi_ssl_certificate</strong> <code><i>file</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.7.8.</p>",
    "doc": "<p>Specifies a <code><i>file</i></code> with the certificate in the PEM format used for authentication to a secured uwsgi server.</p><p>Since version 1.21.0, variables can be used in the <code><i>file</i></code> name.</p>",
    "module": "ngx_http_uwsgi_module",
    "link": "http/ngx_http_uwsgi_module.html#uwsgi_ssl_certificate",
    "name": "uwsgi_ssl_certificate"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>uwsgi_ssl_certificate_key</strong> <code><i>file</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.7.8.</p>",
    "doc": "<p>Specifies a <code><i>file</i></code> with the secret key in the PEM format used for authentication to a secured uwsgi server.</p><p>The value <code>engine</code>:<code><i>name</i></code>:<code><i>id</i></code> can be specified instead of the <code><i>file</i></code> (1.7.9), which loads a secret key with a specified <code><i>id</i></code> from the OpenSSL engine <code><i>name</i></code>.</p><p>Since version 1.21.0, variables can be used in the <code><i>file</i></code> name.</p>",
    "module": "ngx_http_uwsgi_module",
    "link": "http/ngx_http_uwsgi_module.html#uwsgi_ssl_certificate_key",
    "name": "uwsgi_ssl_certificate_key"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>uwsgi_ssl_ciphers</strong> <code><i>ciphers</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>uwsgi_ssl_ciphers DEFAULT;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.5.8.</p>",
    "doc": "<p>Specifies the enabled ciphers for requests to a secured uwsgi server. The ciphers are specified in the format understood by the OpenSSL library.</p><p>The full list can be viewed using the “<code>openssl ciphers</code>” command.</p>",
    "module": "ngx_http_uwsgi_module",
    "link": "http/ngx_http_uwsgi_module.html#uwsgi_ssl_ciphers",
    "name": "uwsgi_ssl_ciphers"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>uwsgi_ssl_conf_command</strong> <code><i>name</i></code> <code><i>value</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.19.4.</p>",
    "doc": "<p>Sets arbitrary OpenSSL configuration <a href=\"https://www.openssl.org/docs/man1.1.1/man3/SSL_CONF_cmd.html\">commands</a> when establishing a connection with the secured uwsgi server.</p><blockquote class=\"note\">The directive is supported when using OpenSSL 1.0.2 or higher.</blockquote><p>Several <code>uwsgi_ssl_conf_command</code> directives can be specified on the same level. These directives are inherited from the previous configuration level if and only if there are no <code>uwsgi_ssl_conf_command</code> directives defined on the current level.</p><blockquote class=\"note\">Note that configuring OpenSSL directly might result in unexpected behavior.</blockquote>",
    "module": "ngx_http_uwsgi_module",
    "link": "http/ngx_http_uwsgi_module.html#uwsgi_ssl_conf_command",
    "name": "uwsgi_ssl_conf_command"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>uwsgi_ssl_crl</strong> <code><i>file</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.7.0.</p>",
    "doc": "<p>Specifies a <code><i>file</i></code> with revoked certificates (CRL) in the PEM format used to <a href=\"https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_ssl_verify\">verify</a> the certificate of the secured uwsgi server.</p>",
    "module": "ngx_http_uwsgi_module",
    "link": "http/ngx_http_uwsgi_module.html#uwsgi_ssl_crl",
    "name": "uwsgi_ssl_crl"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>uwsgi_ssl_name</strong> <code><i>name</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>uwsgi_ssl_name host from uwsgi_pass;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.7.0.</p>",
    "doc": "<p>Allows overriding the server name used to <a href=\"https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_ssl_verify\">verify</a> the certificate of the secured uwsgi server and to be <a href=\"https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_ssl_server_name\">passed through SNI</a> when establishing a connection with the secured uwsgi server.</p><p>By default, the host part from <a href=\"https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_pass\">uwsgi_pass</a> is used.</p>",
    "module": "ngx_http_uwsgi_module",
    "link": "http/ngx_http_uwsgi_module.html#uwsgi_ssl_name",
    "name": "uwsgi_ssl_name"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>uwsgi_ssl_password_file</strong> <code><i>file</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.7.8.</p>",
    "doc": "<p>Specifies a <code><i>file</i></code> with passphrases for <a href=\"https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_ssl_certificate_key\">secret keys</a> where each passphrase is specified on a separate line. Passphrases are tried in turn when loading the key.</p>",
    "module": "ngx_http_uwsgi_module",
    "link": "http/ngx_http_uwsgi_module.html#uwsgi_ssl_password_file",
    "name": "uwsgi_ssl_password_file"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>uwsgi_ssl_protocols</strong> [<code>SSLv2</code>] [<code>SSLv3</code>] [<code>TLSv1</code>] [<code>TLSv1.1</code>] [<code>TLSv1.2</code>] [<code>TLSv1.3</code>];</code><br></td></tr><tr><th>Default:</th><td><pre>uwsgi_ssl_protocols TLSv1 TLSv1.1 TLSv1.2;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.5.8.</p>",
    "doc": "<p>Enables the specified protocols for requests to a secured uwsgi server.</p>",
    "module": "ngx_http_uwsgi_module",
    "link": "http/ngx_http_uwsgi_module.html#uwsgi_ssl_protocols",
    "name": "uwsgi_ssl_protocols"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>uwsgi_ssl_server_name</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>uwsgi_ssl_server_name off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.7.0.</p>",
    "doc": "<p>Enables or disables passing of the server name through <a href=\"http://en.wikipedia.org/wiki/Server_Name_Indication\">TLS Server Name Indication extension</a> (SNI, RFC 6066) when establishing a connection with the secured uwsgi server.</p>",
    "module": "ngx_http_uwsgi_module",
    "link": "http/ngx_http_uwsgi_module.html#uwsgi_ssl_server_name",
    "name": "uwsgi_ssl_server_name"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>uwsgi_ssl_session_reuse</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>uwsgi_ssl_session_reuse on;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.5.8.</p>",
    "doc": "<p>Determines whether SSL sessions can be reused when working with a secured uwsgi server. If the errors “<code>SSL3_GET_FINISHED:digest check failed</code>” appear in the logs, try disabling session reuse.</p>",
    "module": "ngx_http_uwsgi_module",
    "link": "http/ngx_http_uwsgi_module.html#uwsgi_ssl_session_reuse",
    "name": "uwsgi_ssl_session_reuse"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>uwsgi_ssl_trusted_certificate</strong> <code><i>file</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.7.0.</p>",
    "doc": "<p>Specifies a <code><i>file</i></code> with trusted CA certificates in the PEM format used to <a href=\"https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_ssl_verify\">verify</a> the certificate of the secured uwsgi server.</p>",
    "module": "ngx_http_uwsgi_module",
    "link": "http/ngx_http_uwsgi_module.html#uwsgi_ssl_trusted_certificate",
    "name": "uwsgi_ssl_trusted_certificate"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>uwsgi_ssl_verify</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>uwsgi_ssl_verify off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.7.0.</p>",
    "doc": "<p>Enables or disables verification of the secured uwsgi server certificate.</p>",
    "module": "ngx_http_uwsgi_module",
    "link": "http/ngx_http_uwsgi_module.html#uwsgi_ssl_verify",
    "name": "uwsgi_ssl_verify"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>uwsgi_ssl_verify_depth</strong> <code><i>number</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>uwsgi_ssl_verify_depth 1;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.7.0.</p>",
    "doc": "<p>Sets the verification depth in the secured uwsgi server certificates chain.</p>",
    "module": "ngx_http_uwsgi_module",
    "link": "http/ngx_http_uwsgi_module.html#uwsgi_ssl_verify_depth",
    "name": "uwsgi_ssl_verify_depth"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>uwsgi_store</strong> <code>on</code> | <code>off</code> | <code><i>string</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>uwsgi_store off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Enables saving of files to a disk. The <code>on</code> parameter saves files with paths corresponding to the directives <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#alias\">alias</a> or <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#root\">root</a>. The <code>off</code> parameter disables saving of files. In addition, the file name can be set explicitly using the <code><i>string</i></code> with variables:</p><blockquote class=\"example\"><pre>uwsgi_store /data/www$original_uri;\n</pre></blockquote><p>The modification time of files is set according to the received “Last-Modified” response header field. The response is first written to a temporary file, and then the file is renamed. Starting from version 0.8.9, temporary files and the persistent store can be put on different file systems. However, be aware that in this case a file is copied across two file systems instead of the cheap renaming operation. It is thus recommended that for any given location both saved files and a directory holding temporary files, set by the <a href=\"https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_temp_path\">uwsgi_temp_path</a> directive, are put on the same file system.</p><p>This directive can be used to create local copies of static unchangeable files, e.g.:</p><blockquote class=\"example\"><pre>location /images/ {\n    root               /data/www;\n    error_page         404 = /fetch$uri;\n}\n\nlocation /fetch/ {\n    internal;\n\n    uwsgi_pass         backend:9000;\n    ...\n\n    uwsgi_store        on;\n    uwsgi_store_access user:rw group:rw all:r;\n    uwsgi_temp_path    /data/temp;\n\n    alias              /data/www/;\n}\n</pre></blockquote>",
    "module": "ngx_http_uwsgi_module",
    "link": "http/ngx_http_uwsgi_module.html#uwsgi_store",
    "name": "uwsgi_store"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>uwsgi_store_access</strong> <code><i>users</i></code>:<code><i>permissions</i></code> ...;</code><br></td></tr><tr><th>Default:</th><td><pre>uwsgi_store_access user:rw;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets access permissions for newly created files and directories, e.g.:</p><blockquote class=\"example\"><pre>uwsgi_store_access user:rw group:rw all:r;\n</pre></blockquote><p>If any <code>group</code> or <code>all</code> access permissions are specified then <code>user</code> permissions may be omitted:</p><blockquote class=\"example\"><pre>uwsgi_store_access group:rw all:r;\n</pre></blockquote>",
    "module": "ngx_http_uwsgi_module",
    "link": "http/ngx_http_uwsgi_module.html#uwsgi_store_access",
    "name": "uwsgi_store_access"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>uwsgi_temp_file_write_size</strong> <code><i>size</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>uwsgi_temp_file_write_size 8k|16k;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Limits the <code><i>size</i></code> of data written to a temporary file at a time, when buffering of responses from the uwsgi server to temporary files is enabled. By default, <code><i>size</i></code> is limited by two buffers set by the <a href=\"https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_buffer_size\">uwsgi_buffer_size</a> and <a href=\"https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_buffers\">uwsgi_buffers</a> directives. The maximum size of a temporary file is set by the <a href=\"https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_max_temp_file_size\">uwsgi_max_temp_file_size</a> directive.</p>",
    "module": "ngx_http_uwsgi_module",
    "link": "http/ngx_http_uwsgi_module.html#uwsgi_temp_file_write_size",
    "name": "uwsgi_temp_file_write_size"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>uwsgi_temp_path</strong> <code><i>path</i></code> [<code><i>level1</i></code> [<code><i>level2</i></code> [<code><i>level3</i></code>]]];</code><br></td></tr><tr><th>Default:</th><td><pre>uwsgi_temp_path uwsgi_temp;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Defines a directory for storing temporary files with data received from uwsgi servers. Up to three-level subdirectory hierarchy can be used underneath the specified directory. For example, in the following configuration</p><blockquote class=\"example\"><pre>uwsgi_temp_path /spool/nginx/uwsgi_temp 1 2;\n</pre></blockquote><p>a temporary file might look like this:</p><blockquote class=\"example\"><pre>/spool/nginx/uwsgi_temp/<strong>7</strong>/<strong>45</strong>/00000123<strong>457</strong>\n</pre></blockquote><p>See also the <code>use_temp_path</code> parameter of the <a href=\"https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_cache_path\">uwsgi_cache_path</a> directive.</p>",
    "module": "ngx_http_uwsgi_module",
    "link": "http/ngx_http_uwsgi_module.html#uwsgi_temp_path",
    "name": "uwsgi_temp_path"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>http2_body_preread_size</strong> <code><i>size</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>http2_body_preread_size 64k;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code><br></td></tr></tbody></table><p>This directive appeared in version 1.11.0.</p>",
    "doc": "<p>Sets the <code><i>size</i></code> of the buffer per each request in which the request body may be saved before it is started to be processed.</p>",
    "module": "ngx_http_v2_module",
    "link": "http/ngx_http_v2_module.html#http2_body_preread_size",
    "name": "http2_body_preread_size"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>http2_chunk_size</strong> <code><i>size</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>http2_chunk_size 8k;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets the maximum size of chunks into which the response body is sliced. A too low value results in higher overhead. A too high value impairs prioritization due to <a href=\"http://en.wikipedia.org/wiki/Head-of-line_blocking\">HOL blocking</a>.</p>",
    "module": "ngx_http_v2_module",
    "link": "http/ngx_http_v2_module.html#http2_chunk_size",
    "name": "http2_chunk_size"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>http2_idle_timeout</strong> <code><i>time</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>http2_idle_timeout 3m;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code><br></td></tr></tbody></table>",
    "doc": "<blockquote class=\"note\">This directive is obsolete since version 1.19.7. The <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#keepalive_timeout\">keepalive_timeout</a> directive should be used instead.</blockquote><p>Sets the timeout of inactivity after which the connection is closed.</p>",
    "module": "ngx_http_v2_module",
    "link": "http/ngx_http_v2_module.html#http2_idle_timeout",
    "name": "http2_idle_timeout"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>http2_max_concurrent_pushes</strong> <code><i>number</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>http2_max_concurrent_pushes 10;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code><br></td></tr></tbody></table><p>This directive appeared in version 1.13.9.</p>",
    "doc": "<p>Limits the maximum number of concurrent <a href=\"https://nginx.org/en/docs/http/ngx_http_v2_module.html#http2_push\">push</a> requests in a connection.</p>",
    "module": "ngx_http_v2_module",
    "link": "http/ngx_http_v2_module.html#http2_max_concurrent_pushes",
    "name": "http2_max_concurrent_pushes"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>http2_max_concurrent_streams</strong> <code><i>number</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>http2_max_concurrent_streams 128;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets the maximum number of concurrent HTTP/2 streams in a connection.</p>",
    "module": "ngx_http_v2_module",
    "link": "http/ngx_http_v2_module.html#http2_max_concurrent_streams",
    "name": "http2_max_concurrent_streams"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>http2_max_field_size</strong> <code><i>size</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>http2_max_field_size 4k;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code><br></td></tr></tbody></table>",
    "doc": "<blockquote class=\"note\">This directive is obsolete since version 1.19.7. The <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#large_client_header_buffers\">large_client_header_buffers</a> directive should be used instead.</blockquote><p>Limits the maximum size of an <a href=\"https://datatracker.ietf.org/doc/html/rfc7541\">HPACK</a>-compressed request header field. The limit applies equally to both name and value. Note that if Huffman encoding is applied, the actual size of decompressed name and value strings may be larger. For most requests, the default limit should be enough.</p>",
    "module": "ngx_http_v2_module",
    "link": "http/ngx_http_v2_module.html#http2_max_field_size",
    "name": "http2_max_field_size"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>http2_max_header_size</strong> <code><i>size</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>http2_max_header_size 16k;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code><br></td></tr></tbody></table>",
    "doc": "<blockquote class=\"note\">This directive is obsolete since version 1.19.7. The <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#large_client_header_buffers\">large_client_header_buffers</a> directive should be used instead.</blockquote><p>Limits the maximum size of the entire request header list after <a href=\"https://datatracker.ietf.org/doc/html/rfc7541\">HPACK</a> decompression. For most requests, the default limit should be enough.</p>",
    "module": "ngx_http_v2_module",
    "link": "http/ngx_http_v2_module.html#http2_max_header_size",
    "name": "http2_max_header_size"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>http2_max_requests</strong> <code><i>number</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>http2_max_requests 1000;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code><br></td></tr></tbody></table><p>This directive appeared in version 1.11.6.</p>",
    "doc": "<blockquote class=\"note\">This directive is obsolete since version 1.19.7. The <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#keepalive_requests\">keepalive_requests</a> directive should be used instead.</blockquote><p>Sets the maximum number of requests (including <a href=\"https://nginx.org/en/docs/http/ngx_http_v2_module.html#http2_push\">push</a> requests) that can be served through one HTTP/2 connection, after which the next client request will lead to connection closing and the need of establishing a new connection.</p><p>Closing connections periodically is necessary to free per-connection memory allocations. Therefore, using too high maximum number of requests could result in excessive memory usage and not recommended.</p>",
    "module": "ngx_http_v2_module",
    "link": "http/ngx_http_v2_module.html#http2_max_requests",
    "name": "http2_max_requests"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>http2_push</strong> <code><i>uri</i></code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>http2_push off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.13.9.</p>",
    "doc": "<p>Pre-emptively sends (<a href=\"https://datatracker.ietf.org/doc/html/rfc7540#section-8.2\">pushes</a>) a request to the specified <code><i>uri</i></code> along with the response to the original request. Only relative URIs with absolute path will be processed, for example:</p><blockquote class=\"example\"><pre>http2_push /static/css/main.css;\n</pre></blockquote><p>The <code><i>uri</i></code> value can contain variables.</p><p>Several <code>http2_push</code> directives can be specified on the same configuration level. The <code>off</code> parameter cancels the effect of the <code>http2_push</code> directives inherited from the previous configuration level.</p>",
    "module": "ngx_http_v2_module",
    "link": "http/ngx_http_v2_module.html#http2_push",
    "name": "http2_push"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>http2_push_preload</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>http2_push_preload off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.13.9.</p>",
    "doc": "<p>Enables automatic conversion of <a href=\"https://www.w3.org/TR/preload/#server-push-http-2\">preload links</a> specified in the “Link” response header fields into <a href=\"https://datatracker.ietf.org/doc/html/rfc7540#section-8.2\">push</a> requests.</p>",
    "module": "ngx_http_v2_module",
    "link": "http/ngx_http_v2_module.html#http2_push_preload",
    "name": "http2_push_preload"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>http2_recv_buffer_size</strong> <code><i>size</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>http2_recv_buffer_size 256k;</pre></td></tr><tr><th>Context:</th><td><code>http</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets the size of the per <a href=\"https://nginx.org/en/docs/ngx_core_module.html#worker_processes\">worker</a> input buffer.</p>",
    "module": "ngx_http_v2_module",
    "link": "http/ngx_http_v2_module.html#http2_recv_buffer_size",
    "name": "http2_recv_buffer_size"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>http2_recv_timeout</strong> <code><i>time</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>http2_recv_timeout 30s;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code><br></td></tr></tbody></table>",
    "doc": "<blockquote class=\"note\">This directive is obsolete since version 1.19.7. The <a href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#client_header_timeout\">client_header_timeout</a> directive should be used instead.</blockquote><p>Sets the timeout for expecting more data from the client, after which the connection is closed.</p>",
    "module": "ngx_http_v2_module",
    "link": "http/ngx_http_v2_module.html#http2_recv_timeout",
    "name": "http2_recv_timeout"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>xml_entities</strong> <code><i>path</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Specifies the DTD file that declares character entities. This file is compiled at the configuration stage. For technical reasons, the module is unable to use the external subset declared in the processed XML, so it is ignored and a specially defined file is used instead. This file should not describe the XML structure. It is enough to declare just the required character entities, for example:</p><blockquote class=\"example\"><pre>&lt;!ENTITY nbsp \"&amp;#xa0;\"&gt;\n</pre></blockquote>",
    "module": "ngx_http_xslt_module",
    "link": "http/ngx_http_xslt_module.html#xml_entities",
    "name": "xml_entities"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>xslt_last_modified</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>xslt_last_modified off;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.5.1.</p>",
    "doc": "<p>Allows preserving the “Last-Modified” header field from the original response during XSLT transformations to facilitate response caching.</p><p>By default, the header field is removed as contents of the response are modified during transformations and may contain dynamically generated elements or parts that are changed independently of the original response.</p>",
    "module": "ngx_http_xslt_module",
    "link": "http/ngx_http_xslt_module.html#xslt_last_modified",
    "name": "xslt_last_modified"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>xslt_param</strong> <code><i>parameter</i></code> <code><i>value</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.1.18.</p>",
    "doc": "<p>Defines the parameters for XSLT stylesheets. The <code><i>value</i></code> is treated as an XPath expression. The <code><i>value</i></code> can contain variables. To pass a string value to a stylesheet, the <a href=\"https://nginx.org/en/docs/http/ngx_http_xslt_module.html#xslt_string_param\">xslt_string_param</a> directive can be used.</p><p>There could be several <code>xslt_param</code> directives. These directives are inherited from the previous configuration level if and only if there are no <code>xslt_param</code> and <a href=\"https://nginx.org/en/docs/http/ngx_http_xslt_module.html#xslt_string_param\">xslt_string_param</a> directives defined on the current level.</p>",
    "module": "ngx_http_xslt_module",
    "link": "http/ngx_http_xslt_module.html#xslt_param",
    "name": "xslt_param"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>xslt_string_param</strong> <code><i>parameter</i></code> <code><i>value</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table><p>This directive appeared in version 1.1.18.</p>",
    "doc": "<p>Defines the string parameters for XSLT stylesheets. XPath expressions in the <code><i>value</i></code> are not interpreted. The <code><i>value</i></code> can contain variables.</p><p>There could be several <code>xslt_string_param</code> directives. These directives are inherited from the previous configuration level if and only if there are no <a href=\"https://nginx.org/en/docs/http/ngx_http_xslt_module.html#xslt_param\">xslt_param</a> and <code>xslt_string_param</code> directives defined on the current level.</p>",
    "module": "ngx_http_xslt_module",
    "link": "http/ngx_http_xslt_module.html#xslt_string_param",
    "name": "xslt_string_param"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>xslt_stylesheet</strong> <code><i>stylesheet</i></code> [<code><i>parameter</i></code>=<code><i>value</i></code> ...];</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Defines the XSLT stylesheet and its optional parameters. A stylesheet is compiled at the configuration stage.</p><p>Parameters can either be specified separately, or grouped in a single line using the “<code>:</code>” delimiter. If a parameter includes the “<code>:</code>” character, it should be escaped as “<code>%3A</code>”. Also, <code>libxslt</code> requires to enclose parameters that contain non-alphanumeric characters into single or double quotes, for example:</p><blockquote class=\"example\"><pre>param1='http%3A//www.example.com':param2=value2\n</pre></blockquote><p>The parameters description can contain variables, for example, the whole line of parameters can be taken from a single variable:</p><blockquote class=\"example\"><pre>location / {\n    xslt_stylesheet /site/xslt/one.xslt\n                    $arg_xslt_params\n                    param1='$value1':param2=value2\n                    param3=value3;\n}\n</pre></blockquote><p>It is possible to specify several stylesheets. They will be applied sequentially in the specified order.</p>",
    "module": "ngx_http_xslt_module",
    "link": "http/ngx_http_xslt_module.html#xslt_stylesheet",
    "name": "xslt_stylesheet"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>xslt_types</strong> <code><i>mime-type</i></code> ...;</code><br></td></tr><tr><th>Default:</th><td><pre>xslt_types text/xml;</pre></td></tr><tr><th>Context:</th><td><code>http</code>, <code>server</code>, <code>location</code><br></td></tr></tbody></table>",
    "doc": "<p>Enables transformations in responses with the specified MIME types in addition to “<code>text/xml</code>”. The special value “<code>*</code>” matches any MIME type (0.8.29). If the transformation result is an HTML response, its MIME type is changed to “<code>text/html</code>”.</p>",
    "module": "ngx_http_xslt_module",
    "link": "http/ngx_http_xslt_module.html#xslt_types",
    "name": "xslt_types"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>listen</strong> <code><i>address</i></code>:<code><i>port</i></code> [<code>ssl</code>] [<code>proxy_protocol</code>] [<code>backlog</code>=<code><i>number</i></code>] [<code>rcvbuf</code>=<code><i>size</i></code>] [<code>sndbuf</code>=<code><i>size</i></code>] [<code>bind</code>] [<code>ipv6only</code>=<code>on</code>|<code>off</code>] [<code>so_keepalive</code>=<code>on</code>|<code>off</code>|[<code><i>keepidle</i></code>]:[<code><i>keepintvl</i></code>]:[<code><i>keepcnt</i></code>]];</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>server</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets the <code><i>address</i></code> and <code><i>port</i></code> for the socket on which the server will accept requests. It is possible to specify just the port. The address can also be a hostname, for example:</p><blockquote class=\"example\"><pre>listen 127.0.0.1:110;\nlisten *:110;\nlisten 110;     # same as *:110\nlisten localhost:110;\n</pre></blockquote><p>IPv6 addresses (0.7.58) are specified in square brackets:</p><blockquote class=\"example\"><pre>listen [::1]:110;\nlisten [::]:110;\n</pre></blockquote><p>UNIX-domain sockets (1.3.5) are specified with the “<code>unix:</code>” prefix:</p><blockquote class=\"example\"><pre>listen unix:/var/run/nginx.sock;\n</pre></blockquote><p>Different servers must listen on different <code><i>address</i></code>:<code><i>port</i></code> pairs.</p><p>The <code>ssl</code> parameter allows specifying that all connections accepted on this port should work in SSL mode.</p>",
    "module": "ngx_mail_core_module",
    "link": "mail/ngx_mail_core_module.html#listen",
    "name": "listen"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>mail</strong> { ... }</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>main</code><br></td></tr></tbody></table>",
    "doc": "<p>Provides the configuration file context in which the mail server directives are specified.</p>",
    "module": "ngx_mail_core_module",
    "link": "mail/ngx_mail_core_module.html#mail",
    "name": "mail"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>max_errors</strong> <code><i>number</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>max_errors 5;</pre></td></tr><tr><th>Context:</th><td><code>mail</code>, <code>server</code><br></td></tr></tbody></table><p>This directive appeared in version 1.21.0.</p>",
    "doc": "<p>Sets the number of protocol errors after which the connection is closed.</p>",
    "module": "ngx_mail_core_module",
    "link": "mail/ngx_mail_core_module.html#max_errors",
    "name": "max_errors"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>protocol</strong> <code>imap</code> | <code>pop3</code> | <code>smtp</code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>server</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets the protocol for a proxied server. Supported protocols are <a href=\"https://nginx.org/en/docs/mail/ngx_mail_imap_module.html\">IMAP</a>, <a href=\"https://nginx.org/en/docs/mail/ngx_mail_pop3_module.html\">POP3</a>, and <a href=\"https://nginx.org/en/docs/mail/ngx_mail_smtp_module.html\">SMTP</a>.</p><p>If the directive is not set, the protocol can be detected automatically based on the well-known port specified in the <a href=\"https://nginx.org/en/docs/mail/ngx_mail_core_module.html#listen\">listen</a> directive:</p>",
    "module": "ngx_mail_core_module",
    "link": "mail/ngx_mail_core_module.html#protocol",
    "name": "protocol"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>resolver</strong> <code><i>address</i></code> ... [<code>valid</code>=<code><i>time</i></code>] [<code>ipv4</code>=<code>on</code>|<code>off</code>] [<code>ipv6</code>=<code>on</code>|<code>off</code>] [<code>status_zone</code>=<code><i>zone</i></code>];</code><br><code><strong>resolver</strong> <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>resolver off;</pre></td></tr><tr><th>Context:</th><td><code>mail</code>, <code>server</code><br></td></tr></tbody></table>",
    "doc": "<p>Configures name servers used to find the client’s hostname to pass it to the <a href=\"https://nginx.org/en/docs/mail/ngx_mail_auth_http_module.html\">authentication server</a>, and in the <a href=\"https://nginx.org/en/docs/mail/ngx_mail_proxy_module.html#xclient\">XCLIENT</a> command when proxying SMTP. For example:</p><blockquote class=\"example\"><pre>resolver 127.0.0.1 [::1]:5353;\n</pre></blockquote><p>The address can be specified as a domain name or IP address, with an optional port (1.3.1, 1.2.2). If port is not specified, the port 53 is used. Name servers are queried in a round-robin fashion.</p><blockquote class=\"note\">Before version 1.1.7, only a single name server could be configured. Specifying name servers using IPv6 addresses is supported starting from versions 1.3.1 and 1.2.2.</blockquote>",
    "module": "ngx_mail_core_module",
    "link": "mail/ngx_mail_core_module.html#resolver",
    "name": "resolver"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>resolver_timeout</strong> <code><i>time</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>resolver_timeout 30s;</pre></td></tr><tr><th>Context:</th><td><code>mail</code>, <code>server</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets a timeout for DNS operations, for example:</p><blockquote class=\"example\"><pre>resolver_timeout 5s;\n</pre></blockquote>",
    "module": "ngx_mail_core_module",
    "link": "mail/ngx_mail_core_module.html#resolver_timeout",
    "name": "resolver_timeout"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>server</strong> { ... }</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>mail</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets the configuration for a server.</p>",
    "module": "ngx_mail_core_module",
    "link": "mail/ngx_mail_core_module.html#server",
    "name": "server"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>server_name</strong> <code><i>name</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>server_name hostname;</pre></td></tr><tr><th>Context:</th><td><code>mail</code>, <code>server</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets the server name that is used:</p>",
    "module": "ngx_mail_core_module",
    "link": "mail/ngx_mail_core_module.html#server_name",
    "name": "server_name"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>timeout</strong> <code><i>time</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>timeout 60s;</pre></td></tr><tr><th>Context:</th><td><code>mail</code>, <code>server</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets the timeout that is used before proxying to the backend starts.</p>",
    "module": "ngx_mail_core_module",
    "link": "mail/ngx_mail_core_module.html#timeout",
    "name": "timeout"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>auth_http</strong> <code><i>URL</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>mail</code>, <code>server</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets the URL of the HTTP authentication server. The protocol is described <a href=\"https://nginx.org/en/docs/mail/ngx_mail_auth_http_module.html#protocol\">below</a>.</p>",
    "module": "ngx_mail_auth_http_module",
    "link": "mail/ngx_mail_auth_http_module.html#auth_http",
    "name": "auth_http"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>auth_http_header</strong> <code><i>header</i></code> <code><i>value</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>mail</code>, <code>server</code><br></td></tr></tbody></table>",
    "doc": "<p>Appends the specified header to requests sent to the authentication server. This header can be used as the shared secret to verify that the request comes from nginx. For example:</p><blockquote class=\"example\"><pre>auth_http_header X-Auth-Key \"secret_string\";\n</pre></blockquote>",
    "module": "ngx_mail_auth_http_module",
    "link": "mail/ngx_mail_auth_http_module.html#auth_http_header",
    "name": "auth_http_header"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>auth_http_pass_client_cert</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>auth_http_pass_client_cert off;</pre></td></tr><tr><th>Context:</th><td><code>mail</code>, <code>server</code><br></td></tr></tbody></table><p>This directive appeared in version 1.7.11.</p>",
    "doc": "<p>Appends the “Auth-SSL-Cert” header with the <a href=\"https://nginx.org/en/docs/mail/ngx_mail_ssl_module.html#ssl_verify_client\">client</a> certificate in the PEM format (urlencoded) to requests sent to the authentication server.</p>",
    "module": "ngx_mail_auth_http_module",
    "link": "mail/ngx_mail_auth_http_module.html#auth_http_pass_client_cert",
    "name": "auth_http_pass_client_cert"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>auth_http_timeout</strong> <code><i>time</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>auth_http_timeout 60s;</pre></td></tr><tr><th>Context:</th><td><code>mail</code>, <code>server</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets the timeout for communication with the authentication server.</p>",
    "module": "ngx_mail_auth_http_module",
    "link": "mail/ngx_mail_auth_http_module.html#auth_http_timeout",
    "name": "auth_http_timeout"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_buffer</strong> <code><i>size</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>proxy_buffer 4k|8k;</pre></td></tr><tr><th>Context:</th><td><code>mail</code>, <code>server</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets the size of the buffer used for proxying. By default, the buffer size is equal to one memory page. Depending on a platform, it is either 4K or 8K.</p>",
    "module": "ngx_mail_proxy_module",
    "link": "mail/ngx_mail_proxy_module.html#proxy_buffer",
    "name": "proxy_buffer"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_pass_error_message</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>proxy_pass_error_message off;</pre></td></tr><tr><th>Context:</th><td><code>mail</code>, <code>server</code><br></td></tr></tbody></table>",
    "doc": "<p>Indicates whether to pass the error message obtained during the authentication on the backend to the client.</p><p>Usually, if the authentication in nginx is a success, the backend cannot return an error. If it nevertheless returns an error, it means some internal error has occurred. In such case the backend message can contain information that should not be shown to the client. However, responding with an error for the correct password is a normal behavior for some POP3 servers. For example, CommuniGatePro informs a user about <a href=\"http://www.stalker.com/CommuniGatePro/Alerts.html#Quota\">mailbox overflow</a> or other events by periodically outputting the <a href=\"http://www.stalker.com/CommuniGatePro/POP.html#Alerts\">authentication error</a>. The directive should be enabled in this case.</p>",
    "module": "ngx_mail_proxy_module",
    "link": "mail/ngx_mail_proxy_module.html#proxy_pass_error_message",
    "name": "proxy_pass_error_message"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_protocol</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>proxy_protocol off;</pre></td></tr><tr><th>Context:</th><td><code>mail</code>, <code>server</code><br></td></tr></tbody></table><p>This directive appeared in version 1.19.8.</p>",
    "doc": "<p>Enables the <a href=\"http://www.haproxy.org/download/1.5/doc/proxy-protocol.txt\">PROXY protocol</a> for connections to a backend.</p>",
    "module": "ngx_mail_proxy_module",
    "link": "mail/ngx_mail_proxy_module.html#proxy_protocol",
    "name": "proxy_protocol"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_smtp_auth</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>proxy_smtp_auth off;</pre></td></tr><tr><th>Context:</th><td><code>mail</code>, <code>server</code><br></td></tr></tbody></table><p>This directive appeared in version 1.19.4.</p>",
    "doc": "<p>Enables or disables user authentication on the SMTP backend using the <code>AUTH</code> command.</p><p>If <a href=\"https://nginx.org/en/docs/mail/ngx_mail_proxy_module.html#xclient\">XCLIENT</a> is also enabled, then the <code>XCLIENT</code> command will not send the <code>LOGIN</code> parameter.</p>",
    "module": "ngx_mail_proxy_module",
    "link": "mail/ngx_mail_proxy_module.html#proxy_smtp_auth",
    "name": "proxy_smtp_auth"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_timeout</strong> <code><i>timeout</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>proxy_timeout 24h;</pre></td></tr><tr><th>Context:</th><td><code>mail</code>, <code>server</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets the <code><i>timeout</i></code> between two successive read or write operations on client or proxied server connections. If no data is transmitted within this time, the connection is closed.</p>",
    "module": "ngx_mail_proxy_module",
    "link": "mail/ngx_mail_proxy_module.html#proxy_timeout",
    "name": "proxy_timeout"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>xclient</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>xclient on;</pre></td></tr><tr><th>Context:</th><td><code>mail</code>, <code>server</code><br></td></tr></tbody></table>",
    "doc": "<p>Enables or disables the passing of the <a href=\"http://www.postfix.org/XCLIENT_README.html\">XCLIENT</a> command with client parameters when connecting to the SMTP backend.</p><p>With <code>XCLIENT</code>, the MTA is able to write client information to the log and apply various limitations based on this data.</p><p>If <code>XCLIENT</code> is enabled then nginx passes the following commands when connecting to the backend:</p>",
    "module": "ngx_mail_proxy_module",
    "link": "mail/ngx_mail_proxy_module.html#xclient",
    "name": "xclient"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>set_real_ip_from</strong> <code><i>address</i></code> | <code><i>CIDR</i></code> | <code>unix:</code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>mail</code>, <code>server</code><br></td></tr></tbody></table>",
    "doc": "<p>Defines trusted addresses that are known to send correct replacement addresses. If the special value <code>unix:</code> is specified, all UNIX-domain sockets will be trusted.</p>",
    "module": "ngx_mail_realip_module",
    "link": "mail/ngx_mail_realip_module.html#set_real_ip_from",
    "name": "set_real_ip_from"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>ssl</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>ssl off;</pre></td></tr><tr><th>Context:</th><td><code>mail</code>, <code>server</code><br></td></tr></tbody></table>",
    "doc": "<p>This directive was made obsolete in version 1.15.0. The <code>ssl</code> parameter of the <a href=\"https://nginx.org/en/docs/mail/ngx_mail_core_module.html#listen\">listen</a> directive should be used instead.</p>",
    "module": "ngx_mail_ssl_module",
    "link": "mail/ngx_mail_ssl_module.html#ssl",
    "name": "ssl"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>ssl_certificate</strong> <code><i>file</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>mail</code>, <code>server</code><br></td></tr></tbody></table>",
    "doc": "<p>Specifies a <code><i>file</i></code> with the certificate in the PEM format for the given server. If intermediate certificates should be specified in addition to a primary certificate, they should be specified in the same file in the following order: the primary certificate comes first, then the intermediate certificates. A secret key in the PEM format may be placed in the same file.</p><p>Since version 1.11.0, this directive can be specified multiple times to load certificates of different types, for example, RSA and ECDSA:</p><blockquote class=\"example\"><pre>server {\n    listen              993 ssl;\n\n    ssl_certificate     example.com.rsa.crt;\n    ssl_certificate_key example.com.rsa.key;\n\n    ssl_certificate     example.com.ecdsa.crt;\n    ssl_certificate_key example.com.ecdsa.key;\n\n    ...\n}\n</pre></blockquote><blockquote class=\"note\">Only OpenSSL 1.0.2 or higher supports separate certificate chains for different certificates. With older versions, only one certificate chain can be used.</blockquote>",
    "module": "ngx_mail_ssl_module",
    "link": "mail/ngx_mail_ssl_module.html#ssl_certificate",
    "name": "ssl_certificate"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>ssl_certificate_key</strong> <code><i>file</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>mail</code>, <code>server</code><br></td></tr></tbody></table>",
    "doc": "<p>Specifies a <code><i>file</i></code> with the secret key in the PEM format for the given server.</p><p>The value <code>engine</code>:<code><i>name</i></code>:<code><i>id</i></code> can be specified instead of the <code><i>file</i></code> (1.7.9), which loads a secret key with a specified <code><i>id</i></code> from the OpenSSL engine <code><i>name</i></code>.</p>",
    "module": "ngx_mail_ssl_module",
    "link": "mail/ngx_mail_ssl_module.html#ssl_certificate_key",
    "name": "ssl_certificate_key"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>ssl_ciphers</strong> <code><i>ciphers</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>ssl_ciphers HIGH:!aNULL:!MD5;</pre></td></tr><tr><th>Context:</th><td><code>mail</code>, <code>server</code><br></td></tr></tbody></table>",
    "doc": "<p>Specifies the enabled ciphers. The ciphers are specified in the format understood by the OpenSSL library, for example:</p><blockquote class=\"example\"><pre>ssl_ciphers ALL:!aNULL:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP;\n</pre></blockquote><p>The full list can be viewed using the “<code>openssl ciphers</code>” command.</p><blockquote class=\"note\">The previous versions of nginx used <a href=\"https://nginx.org/en/docs/http/configuring_https_servers.html#compatibility\">different</a> ciphers by default.</blockquote>",
    "module": "ngx_mail_ssl_module",
    "link": "mail/ngx_mail_ssl_module.html#ssl_ciphers",
    "name": "ssl_ciphers"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>ssl_client_certificate</strong> <code><i>file</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>mail</code>, <code>server</code><br></td></tr></tbody></table><p>This directive appeared in version 1.7.11.</p>",
    "doc": "<p>Specifies a <code><i>file</i></code> with trusted CA certificates in the PEM format used to <a href=\"https://nginx.org/en/docs/mail/ngx_mail_ssl_module.html#ssl_verify_client\">verify</a> client certificates.</p><p>The list of certificates will be sent to clients. If this is not desired, the <a href=\"https://nginx.org/en/docs/mail/ngx_mail_ssl_module.html#ssl_trusted_certificate\">ssl_trusted_certificate</a> directive can be used.</p>",
    "module": "ngx_mail_ssl_module",
    "link": "mail/ngx_mail_ssl_module.html#ssl_client_certificate",
    "name": "ssl_client_certificate"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>ssl_conf_command</strong> <code><i>name</i></code> <code><i>value</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>mail</code>, <code>server</code><br></td></tr></tbody></table><p>This directive appeared in version 1.19.4.</p>",
    "doc": "<p>Sets arbitrary OpenSSL configuration <a href=\"https://www.openssl.org/docs/man1.1.1/man3/SSL_CONF_cmd.html\">commands</a>.</p><blockquote class=\"note\">The directive is supported when using OpenSSL 1.0.2 or higher.</blockquote><p>Several <code>ssl_conf_command</code> directives can be specified on the same level:</p><blockquote class=\"example\"><pre>ssl_conf_command Options PrioritizeChaCha;\nssl_conf_command Ciphersuites TLS_CHACHA20_POLY1305_SHA256;\n</pre></blockquote><p>These directives are inherited from the previous configuration level if and only if there are no <code>ssl_conf_command</code> directives defined on the current level.</p><blockquote class=\"note\">Note that configuring OpenSSL directly might result in unexpected behavior.</blockquote>",
    "module": "ngx_mail_ssl_module",
    "link": "mail/ngx_mail_ssl_module.html#ssl_conf_command",
    "name": "ssl_conf_command"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>ssl_crl</strong> <code><i>file</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>mail</code>, <code>server</code><br></td></tr></tbody></table><p>This directive appeared in version 1.7.11.</p>",
    "doc": "<p>Specifies a <code><i>file</i></code> with revoked certificates (CRL) in the PEM format used to <a href=\"https://nginx.org/en/docs/mail/ngx_mail_ssl_module.html#ssl_verify_client\">verify</a> client certificates.</p>",
    "module": "ngx_mail_ssl_module",
    "link": "mail/ngx_mail_ssl_module.html#ssl_crl",
    "name": "ssl_crl"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>ssl_dhparam</strong> <code><i>file</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>mail</code>, <code>server</code><br></td></tr></tbody></table><p>This directive appeared in version 0.7.2.</p>",
    "doc": "<p>Specifies a <code><i>file</i></code> with DH parameters for DHE ciphers.</p><p>By default no parameters are set, and therefore DHE ciphers will not be used.</p><blockquote class=\"note\">Prior to version 1.11.0, builtin parameters were used by default.</blockquote>",
    "module": "ngx_mail_ssl_module",
    "link": "mail/ngx_mail_ssl_module.html#ssl_dhparam",
    "name": "ssl_dhparam"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>ssl_ecdh_curve</strong> <code><i>curve</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>ssl_ecdh_curve auto;</pre></td></tr><tr><th>Context:</th><td><code>mail</code>, <code>server</code><br></td></tr></tbody></table><p>This directive appeared in versions 1.1.0 and 1.0.6.</p>",
    "doc": "<p>Specifies a <code><i>curve</i></code> for ECDHE ciphers.</p><p>When using OpenSSL 1.0.2 or higher, it is possible to specify multiple curves (1.11.0), for example:</p><blockquote class=\"example\"><pre>ssl_ecdh_curve prime256v1:secp384r1;\n</pre></blockquote><p>The special value <code>auto</code> (1.11.0) instructs nginx to use a list built into the OpenSSL library when using OpenSSL 1.0.2 or higher, or <code>prime256v1</code> with older versions.</p><blockquote class=\"note\">Prior to version 1.11.0, the <code>prime256v1</code> curve was used by default.</blockquote><blockquote class=\"note\">When using OpenSSL 1.0.2 or higher, this directive sets the list of curves supported by the server. Thus, in order for ECDSA certificates to work, it is important to include the curves used in the certificates.</blockquote>",
    "module": "ngx_mail_ssl_module",
    "link": "mail/ngx_mail_ssl_module.html#ssl_ecdh_curve",
    "name": "ssl_ecdh_curve"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>ssl_password_file</strong> <code><i>file</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>mail</code>, <code>server</code><br></td></tr></tbody></table><p>This directive appeared in version 1.7.3.</p>",
    "doc": "<p>Specifies a <code><i>file</i></code> with passphrases for <a href=\"https://nginx.org/en/docs/mail/ngx_mail_ssl_module.html#ssl_certificate_key\">secret keys</a> where each passphrase is specified on a separate line. Passphrases are tried in turn when loading the key.</p><p>Example:</p><blockquote class=\"example\"><pre>mail {\n    ssl_password_file /etc/keys/global.pass;\n    ...\n\n    server {\n        server_name mail1.example.com;\n        ssl_certificate_key /etc/keys/first.key;\n    }\n\n    server {\n        server_name mail2.example.com;\n\n        # named pipe can also be used instead of a file\n        ssl_password_file /etc/keys/fifo;\n        ssl_certificate_key /etc/keys/second.key;\n    }\n}\n</pre></blockquote>",
    "module": "ngx_mail_ssl_module",
    "link": "mail/ngx_mail_ssl_module.html#ssl_password_file",
    "name": "ssl_password_file"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>ssl_prefer_server_ciphers</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>ssl_prefer_server_ciphers off;</pre></td></tr><tr><th>Context:</th><td><code>mail</code>, <code>server</code><br></td></tr></tbody></table>",
    "doc": "<p>Specifies that server ciphers should be preferred over client ciphers when the SSLv3 and TLS protocols are used.</p>",
    "module": "ngx_mail_ssl_module",
    "link": "mail/ngx_mail_ssl_module.html#ssl_prefer_server_ciphers",
    "name": "ssl_prefer_server_ciphers"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>ssl_protocols</strong> [<code>SSLv2</code>] [<code>SSLv3</code>] [<code>TLSv1</code>] [<code>TLSv1.1</code>] [<code>TLSv1.2</code>] [<code>TLSv1.3</code>];</code><br></td></tr><tr><th>Default:</th><td><pre>ssl_protocols TLSv1 TLSv1.1 TLSv1.2;</pre></td></tr><tr><th>Context:</th><td><code>mail</code>, <code>server</code><br></td></tr></tbody></table>",
    "doc": "<p>Enables the specified protocols.</p><blockquote class=\"note\">The <code>TLSv1.1</code> and <code>TLSv1.2</code> parameters (1.1.13, 1.0.12) work only when OpenSSL 1.0.1 or higher is used.</blockquote><blockquote class=\"note\">The <code>TLSv1.3</code> parameter (1.13.0) works only when OpenSSL 1.1.1 or higher is used.</blockquote>",
    "module": "ngx_mail_ssl_module",
    "link": "mail/ngx_mail_ssl_module.html#ssl_protocols",
    "name": "ssl_protocols"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>ssl_session_cache</strong> <code>off</code> | <code>none</code> | [<code>builtin</code>[:<code><i>size</i></code>]] [<code>shared</code>:<code><i>name</i></code>:<code><i>size</i></code>];</code><br></td></tr><tr><th>Default:</th><td><pre>ssl_session_cache none;</pre></td></tr><tr><th>Context:</th><td><code>mail</code>, <code>server</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets the types and sizes of caches that store session parameters. A cache can be of any of the following types:</p><dl class=\"compact\"><dt><code>off</code></dt><dd>the use of a session cache is strictly prohibited: nginx explicitly tells a client that sessions may not be reused.</dd><dt><code>none</code></dt><dd>the use of a session cache is gently disallowed: nginx tells a client that sessions may be reused, but does not actually store session parameters in the cache.</dd><dt id=\"ssl_session_cache_builtin\"><code>builtin</code></dt><dd>a cache built in OpenSSL; used by one worker process only. The cache size is specified in sessions. If size is not given, it is equal to 20480 sessions. Use of the built-in cache can cause memory fragmentation.</dd><dt id=\"ssl_session_cache_shared\"><code>shared</code></dt><dd>a cache shared between all worker processes. The cache size is specified in bytes; one megabyte can store about 4000 sessions. Each shared cache should have an arbitrary name. A cache with the same name can be used in several servers.</dd></dl><p>Both cache types can be used simultaneously, for example:</p><blockquote class=\"example\"><pre>ssl_session_cache builtin:1000 shared:SSL:10m;\n</pre></blockquote><p>but using only shared cache without the built-in cache should be more efficient.</p>",
    "module": "ngx_mail_ssl_module",
    "link": "mail/ngx_mail_ssl_module.html#ssl_session_cache",
    "name": "ssl_session_cache"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>ssl_session_ticket_key</strong> <code><i>file</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>mail</code>, <code>server</code><br></td></tr></tbody></table><p>This directive appeared in version 1.5.7.</p>",
    "doc": "<p>Sets a <code><i>file</i></code> with the secret key used to encrypt and decrypt TLS session tickets. The directive is necessary if the same key has to be shared between multiple servers. By default, a randomly generated key is used.</p><p>If several keys are specified, only the first key is used to encrypt TLS session tickets. This allows configuring key rotation, for example:</p><blockquote class=\"example\"><pre>ssl_session_ticket_key current.key;\nssl_session_ticket_key previous.key;\n</pre></blockquote><p>The <code><i>file</i></code> must contain 80 or 48 bytes of random data and can be created using the following command:</p><blockquote class=\"example\"><pre>openssl rand 80 &gt; ticket.key\n</pre></blockquote><p>Depending on the file size either AES256 (for 80-byte keys, 1.11.8) or AES128 (for 48-byte keys) is used for encryption.</p>",
    "module": "ngx_mail_ssl_module",
    "link": "mail/ngx_mail_ssl_module.html#ssl_session_ticket_key",
    "name": "ssl_session_ticket_key"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>ssl_session_tickets</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>ssl_session_tickets on;</pre></td></tr><tr><th>Context:</th><td><code>mail</code>, <code>server</code><br></td></tr></tbody></table><p>This directive appeared in version 1.5.9.</p>",
    "doc": "<p>Enables or disables session resumption through <a href=\"https://datatracker.ietf.org/doc/html/rfc5077\">TLS session tickets</a>.</p>",
    "module": "ngx_mail_ssl_module",
    "link": "mail/ngx_mail_ssl_module.html#ssl_session_tickets",
    "name": "ssl_session_tickets"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>ssl_session_timeout</strong> <code><i>time</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>ssl_session_timeout 5m;</pre></td></tr><tr><th>Context:</th><td><code>mail</code>, <code>server</code><br></td></tr></tbody></table>",
    "doc": "<p>Specifies a time during which a client may reuse the session parameters.</p>",
    "module": "ngx_mail_ssl_module",
    "link": "mail/ngx_mail_ssl_module.html#ssl_session_timeout",
    "name": "ssl_session_timeout"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>ssl_trusted_certificate</strong> <code><i>file</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>mail</code>, <code>server</code><br></td></tr></tbody></table><p>This directive appeared in version 1.7.11.</p>",
    "doc": "<p>Specifies a <code><i>file</i></code> with trusted CA certificates in the PEM format used to <a href=\"https://nginx.org/en/docs/mail/ngx_mail_ssl_module.html#ssl_verify_client\">verify</a> client certificates.</p><p>In contrast to the certificate set by <a href=\"https://nginx.org/en/docs/mail/ngx_mail_ssl_module.html#ssl_client_certificate\">ssl_client_certificate</a>, the list of these certificates will not be sent to clients.</p>",
    "module": "ngx_mail_ssl_module",
    "link": "mail/ngx_mail_ssl_module.html#ssl_trusted_certificate",
    "name": "ssl_trusted_certificate"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>ssl_verify_client</strong> <code>on</code> | <code>off</code> | <code>optional</code> | <code>optional_no_ca</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>ssl_verify_client off;</pre></td></tr><tr><th>Context:</th><td><code>mail</code>, <code>server</code><br></td></tr></tbody></table><p>This directive appeared in version 1.7.11.</p>",
    "doc": "<p>Enables verification of client certificates. The verification result is passed in the “Auth-SSL-Verify” header of the <a href=\"https://nginx.org/en/docs/mail/ngx_mail_auth_http_module.html#auth_http\">authentication</a> request.</p><p>The <code>optional</code> parameter requests the client certificate and verifies it if the certificate is present.</p><p>The <code>optional_no_ca</code> parameter requests the client certificate but does not require it to be signed by a trusted CA certificate. This is intended for the use in cases when a service that is external to nginx performs the actual certificate verification. The contents of the certificate is accessible through requests <a href=\"https://nginx.org/en/docs/mail/ngx_mail_auth_http_module.html#auth_http_pass_client_cert\">sent</a> to the authentication server.</p>",
    "module": "ngx_mail_ssl_module",
    "link": "mail/ngx_mail_ssl_module.html#ssl_verify_client",
    "name": "ssl_verify_client"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>ssl_verify_depth</strong> <code><i>number</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>ssl_verify_depth 1;</pre></td></tr><tr><th>Context:</th><td><code>mail</code>, <code>server</code><br></td></tr></tbody></table><p>This directive appeared in version 1.7.11.</p>",
    "doc": "<p>Sets the verification depth in the client certificates chain.</p>",
    "module": "ngx_mail_ssl_module",
    "link": "mail/ngx_mail_ssl_module.html#ssl_verify_depth",
    "name": "ssl_verify_depth"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>starttls</strong> <code>on</code> | <code>off</code> | <code>only</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>starttls off;</pre></td></tr><tr><th>Context:</th><td><code>mail</code>, <code>server</code><br></td></tr></tbody></table>",
    "doc": "<dl class=\"compact\"><dt><code>on</code></dt><dd>allow usage of the <code>STLS</code> command for the POP3 and the <code>STARTTLS</code> command for the IMAP and SMTP;</dd><dt><code>off</code></dt><dd>deny usage of the <code>STLS</code> and <code>STARTTLS</code> commands;</dd><dt><code>only</code></dt><dd>require preliminary TLS transition.</dd></dl>",
    "module": "ngx_mail_ssl_module",
    "link": "mail/ngx_mail_ssl_module.html#starttls",
    "name": "starttls"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>imap_auth</strong> <code><i>method</i></code> ...;</code><br></td></tr><tr><th>Default:</th><td><pre>imap_auth plain;</pre></td></tr><tr><th>Context:</th><td><code>mail</code>, <code>server</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets permitted methods of authentication for IMAP clients. Supported methods are:</p><dl class=\"compact\"><dt><code>plain</code></dt><dd><a href=\"https://datatracker.ietf.org/doc/html/rfc3501\">LOGIN</a>, <a href=\"https://datatracker.ietf.org/doc/html/rfc4616\">AUTH=PLAIN</a></dd><dt><code>login</code></dt><dd><a href=\"https://datatracker.ietf.org/doc/html/draft-murchison-sasl-login-00\">AUTH=LOGIN</a></dd><dt><code>cram-md5</code></dt><dd><a href=\"https://datatracker.ietf.org/doc/html/rfc2195\">AUTH=CRAM-MD5</a>. In order for this method to work, the password must be stored unencrypted.</dd><dt><code>external</code></dt><dd><a href=\"https://datatracker.ietf.org/doc/html/rfc4422\">AUTH=EXTERNAL</a> (1.11.6).</dd></dl><p>Plain text authentication methods (the <code>LOGIN</code> command, <code>AUTH=PLAIN</code>, and <code>AUTH=LOGIN</code>) are always enabled, though if the <code>plain</code> and <code>login</code> methods are not specified, <code>AUTH=PLAIN</code> and <code>AUTH=LOGIN</code> will not be automatically included in <a href=\"https://nginx.org/en/docs/mail/ngx_mail_imap_module.html#imap_capabilities\">imap_capabilities</a>.</p>",
    "module": "ngx_mail_imap_module",
    "link": "mail/ngx_mail_imap_module.html#imap_auth",
    "name": "imap_auth"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>imap_capabilities</strong> <code><i>extension</i></code> ...;</code><br></td></tr><tr><th>Default:</th><td><pre>imap_capabilities IMAP4 IMAP4rev1 UIDPLUS;</pre></td></tr><tr><th>Context:</th><td><code>mail</code>, <code>server</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets the <a href=\"https://datatracker.ietf.org/doc/html/rfc3501\">IMAP protocol</a> extensions list that is passed to the client in response to the <code>CAPABILITY</code> command. The authentication methods specified in the <a href=\"https://nginx.org/en/docs/mail/ngx_mail_imap_module.html#imap_auth\">imap_auth</a> directive and <a href=\"https://datatracker.ietf.org/doc/html/rfc2595\">STARTTLS</a> are automatically added to this list depending on the <a href=\"https://nginx.org/en/docs/mail/ngx_mail_ssl_module.html#starttls\">starttls</a> directive value.</p><p>It makes sense to specify the extensions supported by the IMAP backends to which the clients are proxied (if these extensions are related to commands used after the authentication, when nginx transparently proxies a client connection to the backend).</p><p>The current list of standardized extensions is published at <a href=\"http://www.iana.org/assignments/imap4-capabilities\">www.iana.org</a>.</p>",
    "module": "ngx_mail_imap_module",
    "link": "mail/ngx_mail_imap_module.html#imap_capabilities",
    "name": "imap_capabilities"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>imap_client_buffer</strong> <code><i>size</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>imap_client_buffer 4k|8k;</pre></td></tr><tr><th>Context:</th><td><code>mail</code>, <code>server</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets the <code><i>size</i></code> of the buffer used for reading IMAP commands. By default, the buffer size is equal to one memory page. This is either 4K or 8K, depending on a platform.</p>",
    "module": "ngx_mail_imap_module",
    "link": "mail/ngx_mail_imap_module.html#imap_client_buffer",
    "name": "imap_client_buffer"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>pop3_auth</strong> <code><i>method</i></code> ...;</code><br></td></tr><tr><th>Default:</th><td><pre>pop3_auth plain;</pre></td></tr><tr><th>Context:</th><td><code>mail</code>, <code>server</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets permitted methods of authentication for POP3 clients. Supported methods are:</p><dl class=\"compact\"><dt><code>plain</code></dt><dd><a href=\"https://datatracker.ietf.org/doc/html/rfc1939\">USER/PASS</a>, <a href=\"https://datatracker.ietf.org/doc/html/rfc4616\">AUTH PLAIN</a>, <a href=\"https://datatracker.ietf.org/doc/html/draft-murchison-sasl-login-00\">AUTH LOGIN</a></dd><dt><code>apop</code></dt><dd><a href=\"https://datatracker.ietf.org/doc/html/rfc1939\">APOP</a>. In order for this method to work, the password must be stored unencrypted.</dd><dt><code>cram-md5</code></dt><dd><a href=\"https://datatracker.ietf.org/doc/html/rfc2195\">AUTH CRAM-MD5</a>. In order for this method to work, the password must be stored unencrypted.</dd><dt><code>external</code></dt><dd><a href=\"https://datatracker.ietf.org/doc/html/rfc4422\">AUTH EXTERNAL</a> (1.11.6).</dd></dl><p>Plain text authentication methods (<code>USER/PASS</code>, <code>AUTH PLAIN</code>, and <code>AUTH LOGIN</code>) are always enabled, though if the <code>plain</code> method is not specified, <code>AUTH PLAIN</code> and <code>AUTH LOGIN</code> will not be automatically included in <a href=\"https://nginx.org/en/docs/mail/ngx_mail_pop3_module.html#pop3_capabilities\">pop3_capabilities</a>.</p>",
    "module": "ngx_mail_pop3_module",
    "link": "mail/ngx_mail_pop3_module.html#pop3_auth",
    "name": "pop3_auth"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>pop3_capabilities</strong> <code><i>extension</i></code> ...;</code><br></td></tr><tr><th>Default:</th><td><pre>pop3_capabilities TOP USER UIDL;</pre></td></tr><tr><th>Context:</th><td><code>mail</code>, <code>server</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets the <a href=\"https://datatracker.ietf.org/doc/html/rfc2449\">POP3 protocol</a> extensions list that is passed to the client in response to the <code>CAPA</code> command. The authentication methods specified in the <a href=\"https://nginx.org/en/docs/mail/ngx_mail_pop3_module.html#pop3_auth\">pop3_auth</a> directive (<a href=\"https://datatracker.ietf.org/doc/html/rfc2449\">SASL</a> extension) and <a href=\"https://datatracker.ietf.org/doc/html/rfc2595\">STLS</a> are automatically added to this list depending on the <a href=\"https://nginx.org/en/docs/mail/ngx_mail_ssl_module.html#starttls\">starttls</a> directive value.</p><p>It makes sense to specify the extensions supported by the POP3 backends to which the clients are proxied (if these extensions are related to commands used after the authentication, when nginx transparently proxies the client connection to the backend).</p><p>The current list of standardized extensions is published at <a href=\"http://www.iana.org/assignments/pop3-extension-mechanism\">www.iana.org</a>.</p>",
    "module": "ngx_mail_pop3_module",
    "link": "mail/ngx_mail_pop3_module.html#pop3_capabilities",
    "name": "pop3_capabilities"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>smtp_auth</strong> <code><i>method</i></code> ...;</code><br></td></tr><tr><th>Default:</th><td><pre>smtp_auth plain login;</pre></td></tr><tr><th>Context:</th><td><code>mail</code>, <code>server</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets permitted methods of <a href=\"https://datatracker.ietf.org/doc/html/rfc2554\">SASL authentication</a> for SMTP clients. Supported methods are:</p><dl class=\"compact\"><dt><code>plain</code></dt><dd><a href=\"https://datatracker.ietf.org/doc/html/rfc4616\">AUTH PLAIN</a></dd><dt><code>login</code></dt><dd><a href=\"https://datatracker.ietf.org/doc/html/draft-murchison-sasl-login-00\">AUTH LOGIN</a></dd><dt><code>cram-md5</code></dt><dd><a href=\"https://datatracker.ietf.org/doc/html/rfc2195\">AUTH CRAM-MD5</a>. In order for this method to work, the password must be stored unencrypted.</dd><dt><code>external</code></dt><dd><a href=\"https://datatracker.ietf.org/doc/html/rfc4422\">AUTH EXTERNAL</a> (1.11.6).</dd><dt><code>none</code></dt><dd>Authentication is not required.</dd></dl><p>Plain text authentication methods (<code>AUTH PLAIN</code> and <code>AUTH LOGIN</code>) are always enabled, though if the <code>plain</code> and <code>login</code> methods are not specified, <code>AUTH PLAIN</code> and <code>AUTH LOGIN</code> will not be automatically included in <a href=\"https://nginx.org/en/docs/mail/ngx_mail_smtp_module.html#smtp_capabilities\">smtp_capabilities</a>.</p>",
    "module": "ngx_mail_smtp_module",
    "link": "mail/ngx_mail_smtp_module.html#smtp_auth",
    "name": "smtp_auth"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>smtp_capabilities</strong> <code><i>extension</i></code> ...;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>mail</code>, <code>server</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets the SMTP protocol extensions list that is passed to the client in response to the <code>EHLO</code> command. The authentication methods specified in the <a href=\"https://nginx.org/en/docs/mail/ngx_mail_smtp_module.html#smtp_auth\">smtp_auth</a> directive and <a href=\"https://datatracker.ietf.org/doc/html/rfc3207\">STARTTLS</a> are automatically added to this list depending on the <a href=\"https://nginx.org/en/docs/mail/ngx_mail_ssl_module.html#starttls\">starttls</a> directive value.</p><p>It makes sense to specify the extensions supported by the MTA to which the clients are proxied (if these extensions are related to commands used after the authentication, when nginx transparently proxies the client connection to the backend).</p><p>The current list of standardized extensions is published at <a href=\"http://www.iana.org/assignments/mail-parameters\">www.iana.org</a>.</p>",
    "module": "ngx_mail_smtp_module",
    "link": "mail/ngx_mail_smtp_module.html#smtp_capabilities",
    "name": "smtp_capabilities"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>smtp_client_buffer</strong> <code><i>size</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>smtp_client_buffer 4k|8k;</pre></td></tr><tr><th>Context:</th><td><code>mail</code>, <code>server</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets the <code><i>size</i></code> of the buffer used for reading SMTP commands. By default, the buffer size is equal to one memory page. This is either 4K or 8K, depending on a platform.</p>",
    "module": "ngx_mail_smtp_module",
    "link": "mail/ngx_mail_smtp_module.html#smtp_client_buffer",
    "name": "smtp_client_buffer"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>smtp_greeting_delay</strong> <code><i>time</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>smtp_greeting_delay 0;</pre></td></tr><tr><th>Context:</th><td><code>mail</code>, <code>server</code><br></td></tr></tbody></table>",
    "doc": "<p>Allows setting a delay before sending an SMTP greeting in order to reject clients who fail to wait for the greeting before sending SMTP commands.</p>",
    "module": "ngx_mail_smtp_module",
    "link": "mail/ngx_mail_smtp_module.html#smtp_greeting_delay",
    "name": "smtp_greeting_delay"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>listen</strong> <code><i>address</i></code>:<code><i>port</i></code> [<code>ssl</code>] [<code>udp</code>] [<code>proxy_protocol</code>] [<code>fastopen</code>=<code><i>number</i></code>] [<code>backlog</code>=<code><i>number</i></code>] [<code>rcvbuf</code>=<code><i>size</i></code>] [<code>sndbuf</code>=<code><i>size</i></code>] [<code>bind</code>] [<code>ipv6only</code>=<code>on</code>|<code>off</code>] [<code>reuseport</code>] [<code>so_keepalive</code>=<code>on</code>|<code>off</code>|[<code><i>keepidle</i></code>]:[<code><i>keepintvl</i></code>]:[<code><i>keepcnt</i></code>]];</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>server</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets the <code><i>address</i></code> and <code><i>port</i></code> for the socket on which the server will accept connections. It is possible to specify just the port. The address can also be a hostname, for example:</p><blockquote class=\"example\"><pre>listen 127.0.0.1:12345;\nlisten *:12345;\nlisten 12345;     # same as *:12345\nlisten localhost:12345;\n</pre></blockquote><p>IPv6 addresses are specified in square brackets:</p><blockquote class=\"example\"><pre>listen [::1]:12345;\nlisten [::]:12345;\n</pre></blockquote><p>UNIX-domain sockets are specified with the “<code>unix:</code>” prefix:</p><blockquote class=\"example\"><pre>listen unix:/var/run/nginx.sock;\n</pre></blockquote>",
    "module": "ngx_stream_core_module",
    "link": "stream/ngx_stream_core_module.html#listen",
    "name": "listen"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>preread_buffer_size</strong> <code><i>size</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>preread_buffer_size 16k;</pre></td></tr><tr><th>Context:</th><td><code>stream</code>, <code>server</code><br></td></tr></tbody></table><p>This directive appeared in version 1.11.5.</p>",
    "doc": "<p>Specifies a <code><i>size</i></code> of the <a href=\"https://nginx.org/en/docs/stream/stream_processing.html#preread_phase\">preread</a> buffer.</p>",
    "module": "ngx_stream_core_module",
    "link": "stream/ngx_stream_core_module.html#preread_buffer_size",
    "name": "preread_buffer_size"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>preread_timeout</strong> <code><i>timeout</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>preread_timeout 30s;</pre></td></tr><tr><th>Context:</th><td><code>stream</code>, <code>server</code><br></td></tr></tbody></table><p>This directive appeared in version 1.11.5.</p>",
    "doc": "<p>Specifies a <code><i>timeout</i></code> of the <a href=\"https://nginx.org/en/docs/stream/stream_processing.html#preread_phase\">preread</a> phase.</p>",
    "module": "ngx_stream_core_module",
    "link": "stream/ngx_stream_core_module.html#preread_timeout",
    "name": "preread_timeout"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_protocol_timeout</strong> <code><i>timeout</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>proxy_protocol_timeout 30s;</pre></td></tr><tr><th>Context:</th><td><code>stream</code>, <code>server</code><br></td></tr></tbody></table><p>This directive appeared in version 1.11.4.</p>",
    "doc": "<p>Specifies a <code><i>timeout</i></code> for reading the PROXY protocol header to complete. If no entire header is transmitted within this time, the connection is closed.</p>",
    "module": "ngx_stream_core_module",
    "link": "stream/ngx_stream_core_module.html#proxy_protocol_timeout",
    "name": "proxy_protocol_timeout"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>resolver</strong> <code><i>address</i></code> ... [<code>valid</code>=<code><i>time</i></code>] [<code>ipv4</code>=<code>on</code>|<code>off</code>] [<code>ipv6</code>=<code>on</code>|<code>off</code>] [<code>status_zone</code>=<code><i>zone</i></code>];</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>stream</code>, <code>server</code><br></td></tr></tbody></table><p>This directive appeared in version 1.11.3.</p>",
    "doc": "<p>Configures name servers used to resolve names of upstream servers into addresses, for example:</p><blockquote class=\"example\"><pre>resolver 127.0.0.1 [::1]:5353;\n</pre></blockquote><p>The address can be specified as a domain name or IP address, with an optional port. If port is not specified, the port 53 is used. Name servers are queried in a round-robin fashion.</p>",
    "module": "ngx_stream_core_module",
    "link": "stream/ngx_stream_core_module.html#resolver",
    "name": "resolver"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>resolver_timeout</strong> <code><i>time</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>resolver_timeout 30s;</pre></td></tr><tr><th>Context:</th><td><code>stream</code>, <code>server</code><br></td></tr></tbody></table><p>This directive appeared in version 1.11.3.</p>",
    "doc": "<p>Sets a timeout for name resolution, for example:</p><blockquote class=\"example\"><pre>resolver_timeout 5s;\n</pre></blockquote><blockquote class=\"note\">Before version 1.11.3, this directive was available as part of our <a href=\"http://nginx.com/products/\">commercial subscription</a>.</blockquote>",
    "module": "ngx_stream_core_module",
    "link": "stream/ngx_stream_core_module.html#resolver_timeout",
    "name": "resolver_timeout"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>server</strong> { ... }</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>stream</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets the configuration for a server.</p>",
    "module": "ngx_stream_core_module",
    "link": "stream/ngx_stream_core_module.html#server",
    "name": "server"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>stream</strong> { ... }</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>main</code><br></td></tr></tbody></table>",
    "doc": "<p>Provides the configuration file context in which the stream server directives are specified.</p>",
    "module": "ngx_stream_core_module",
    "link": "stream/ngx_stream_core_module.html#stream",
    "name": "stream"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>tcp_nodelay</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>tcp_nodelay on;</pre></td></tr><tr><th>Context:</th><td><code>stream</code>, <code>server</code><br></td></tr></tbody></table><p>This directive appeared in version 1.9.4.</p>",
    "doc": "<p>Enables or disables the use of the <code>TCP_NODELAY</code> option. The option is enabled for both client and proxied server connections.</p>",
    "module": "ngx_stream_core_module",
    "link": "stream/ngx_stream_core_module.html#tcp_nodelay",
    "name": "tcp_nodelay"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>variables_hash_bucket_size</strong> <code><i>size</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>variables_hash_bucket_size 64;</pre></td></tr><tr><th>Context:</th><td><code>stream</code><br></td></tr></tbody></table><p>This directive appeared in version 1.11.2.</p>",
    "doc": "<p>Sets the bucket size for the variables hash table. The details of setting up hash tables are provided in a separate <a href=\"https://nginx.org/en/docs/hash.html\">document</a>.</p>",
    "module": "ngx_stream_core_module",
    "link": "stream/ngx_stream_core_module.html#variables_hash_bucket_size",
    "name": "variables_hash_bucket_size"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>variables_hash_max_size</strong> <code><i>size</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>variables_hash_max_size 1024;</pre></td></tr><tr><th>Context:</th><td><code>stream</code><br></td></tr></tbody></table><p>This directive appeared in version 1.11.2.</p>",
    "doc": "<p>Sets the maximum <code><i>size</i></code> of the variables hash table. The details of setting up hash tables are provided in a separate <a href=\"https://nginx.org/en/docs/hash.html\">document</a>.</p>",
    "module": "ngx_stream_core_module",
    "link": "stream/ngx_stream_core_module.html#variables_hash_max_size",
    "name": "variables_hash_max_size"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>allow</strong> <code><i>address</i></code> | <code><i>CIDR</i></code> | <code>unix:</code> | <code>all</code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>stream</code>, <code>server</code><br></td></tr></tbody></table>",
    "doc": "<p>Allows access for the specified network or address. If the special value <code>unix:</code> is specified, allows access for all UNIX-domain sockets.</p>",
    "module": "ngx_stream_access_module",
    "link": "stream/ngx_stream_access_module.html#allow",
    "name": "allow"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>deny</strong> <code><i>address</i></code> | <code><i>CIDR</i></code> | <code>unix:</code> | <code>all</code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>stream</code>, <code>server</code><br></td></tr></tbody></table>",
    "doc": "<p>Denies access for the specified network or address. If the special value <code>unix:</code> is specified, denies access for all UNIX-domain sockets.</p>",
    "module": "ngx_stream_access_module",
    "link": "stream/ngx_stream_access_module.html#deny",
    "name": "deny"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>geo</strong> [<code><i>$address</i></code>] <code><i>$variable</i></code> { ... }</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>stream</code><br></td></tr></tbody></table>",
    "doc": "<p>Describes the dependency of values of the specified variable on the client IP address. By default, the address is taken from the <code>$remote_addr</code> variable, but it can also be taken from another variable, for example:</p><blockquote class=\"example\"><pre>geo $arg_remote_addr $geo {\n    ...;\n}\n</pre></blockquote><blockquote class=\"note\">Since variables are evaluated only when used, the mere existence of even a large number of declared “<code>geo</code>” variables does not cause any extra costs for connection processing.</blockquote><p>If the value of a variable does not represent a valid IP address then the “<code>255.255.255.255</code>” address is used.</p><p>Addresses are specified either as prefixes in CIDR notation (including individual addresses) or as ranges.</p><p>The following special parameters are also supported:</p><dl class=\"compact\"><dt><code>delete</code></dt><dd>deletes the specified network.</dd><dt><code>default</code></dt><dd>a value set to the variable if the client address does not match any of the specified addresses. When addresses are specified in CIDR notation, “<code>0.0.0.0/0</code>” and “<code>::/0</code>” can be used instead of <code>default</code>. When <code>default</code> is not specified, the default value will be an empty string.</dd><dt><code>include</code></dt><dd>includes a file with addresses and values. There can be several inclusions.</dd><dt><code>ranges</code></dt><dd>indicates that addresses are specified as ranges. This parameter should be the first. To speed up loading of a geo base, addresses should be put in ascending order.</dd></dl><p>Example:</p><blockquote class=\"example\"><pre>geo $country {\n    default        ZZ;\n    include        conf/geo.conf;\n    delete         127.0.0.0/16;\n\n    127.0.0.0/24   US;\n    127.0.0.1/32   RU;\n    10.1.0.0/16    RU;\n    192.168.1.0/24 UK;\n}\n</pre></blockquote><p>The <code>conf/geo.conf</code> file could contain the following lines:</p><blockquote class=\"example\"><pre>10.2.0.0/16    RU;\n192.168.2.0/24 RU;\n</pre></blockquote><p>A value of the most specific match is used. For example, for the 127.0.0.1 address the value “<code>RU</code>” will be chosen, not “<code>US</code>”.</p><p>Example with ranges:</p><blockquote class=\"example\"><pre>geo $country {\n    ranges;\n    default                   ZZ;\n    127.0.0.0-127.0.0.0       US;\n    127.0.0.1-127.0.0.1       RU;\n    127.0.0.1-127.0.0.255     US;\n    10.1.0.0-10.1.255.255     RU;\n    192.168.1.0-192.168.1.255 UK;\n}\n</pre></blockquote>",
    "module": "ngx_stream_geo_module",
    "link": "stream/ngx_stream_geo_module.html#geo",
    "name": "geo"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>geoip_country</strong> <code><i>file</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>stream</code><br></td></tr></tbody></table>",
    "doc": "<p>Specifies a database used to determine the country depending on the client IP address. The following variables are available when using this database:</p><dl class=\"compact\"><dt id=\"var_geoip_country_code\"><code>$geoip_country_code</code></dt><dd>two-letter country code, for example, “<code>RU</code>”, “<code>US</code>”.</dd><dt id=\"var_geoip_country_code3\"><code>$geoip_country_code3</code></dt><dd>three-letter country code, for example, “<code>RUS</code>”, “<code>USA</code>”.</dd><dt id=\"var_geoip_country_name\"><code>$geoip_country_name</code></dt><dd>country name, for example, “<code>Russian Federation</code>”, “<code>United States</code>”.</dd></dl>",
    "module": "ngx_stream_geoip_module",
    "link": "stream/ngx_stream_geoip_module.html#geoip_country",
    "name": "geoip_country"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>geoip_city</strong> <code><i>file</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>stream</code><br></td></tr></tbody></table>",
    "doc": "<p>Specifies a database used to determine the country, region, and city depending on the client IP address. The following variables are available when using this database:</p><dl class=\"compact\"><dt id=\"var_geoip_area_code\"><code>$geoip_area_code</code></dt><dd>telephone area code (US only).<blockquote class=\"note\">This variable may contain outdated information since the corresponding database field is deprecated.</blockquote></dd><dt id=\"var_geoip_city_continent_code\"><code>$geoip_city_continent_code</code></dt><dd>two-letter continent code, for example, “<code>EU</code>”, “<code>NA</code>”.</dd><dt id=\"var_geoip_city_country_code\"><code>$geoip_city_country_code</code></dt><dd>two-letter country code, for example, “<code>RU</code>”, “<code>US</code>”.</dd><dt id=\"var_geoip_city_country_code3\"><code>$geoip_city_country_code3</code></dt><dd>three-letter country code, for example, “<code>RUS</code>”, “<code>USA</code>”.</dd><dt id=\"var_geoip_city_country_name\"><code>$geoip_city_country_name</code></dt><dd>country name, for example, “<code>Russian Federation</code>”, “<code>United States</code>”.</dd><dt id=\"var_geoip_dma_code\"><code>$geoip_dma_code</code></dt><dd>DMA region code in US (also known as “metro code”), according to the <a href=\"https://developers.google.com/adwords/api/docs/appendix/cities-DMAregions\">geotargeting</a> in Google AdWords API.</dd><dt id=\"var_geoip_latitude\"><code>$geoip_latitude</code></dt><dd>latitude.</dd><dt id=\"var_geoip_longitude\"><code>$geoip_longitude</code></dt><dd>longitude.</dd><dt id=\"var_geoip_region\"><code>$geoip_region</code></dt><dd>two-symbol country region code (region, territory, state, province, federal land and the like), for example, “<code>48</code>”, “<code>DC</code>”.</dd><dt id=\"var_geoip_region_name\"><code>$geoip_region_name</code></dt><dd>country region name (region, territory, state, province, federal land and the like), for example, “<code>Moscow City</code>”, “<code>District of Columbia</code>”.</dd><dt id=\"var_geoip_city\"><code>$geoip_city</code></dt><dd>city name, for example, “<code>Moscow</code>”, “<code>Washington</code>”.</dd><dt id=\"var_geoip_postal_code\"><code>$geoip_postal_code</code></dt><dd>postal code.</dd></dl>",
    "module": "ngx_stream_geoip_module",
    "link": "stream/ngx_stream_geoip_module.html#geoip_city",
    "name": "geoip_city"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>geoip_org</strong> <code><i>file</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>stream</code><br></td></tr></tbody></table>",
    "doc": "<p>Specifies a database used to determine the organization depending on the client IP address. The following variable is available when using this database:</p><dl class=\"compact\"><dt id=\"var_geoip_org\"><code>$geoip_org</code></dt><dd>organization name, for example, “The University of Melbourne”.</dd></dl>",
    "module": "ngx_stream_geoip_module",
    "link": "stream/ngx_stream_geoip_module.html#geoip_org",
    "name": "geoip_org"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>js_access</strong> <code><i>function</i></code> | <code><i>module.function</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>stream</code>, <code>server</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets an njs function which will be called at the <a href=\"https://nginx.org/en/docs/stream/stream_processing.html#access_phase\">access</a> phase. Since <a href=\"https://nginx.org/en/docs/njs/changes.html#njs0.4.0\">0.4.0</a>, a module function can be referenced.</p><p>The function is called once at the moment when the stream session reaches the <a href=\"https://nginx.org/en/docs/stream/stream_processing.html#access_phase\">access</a> phase for the first time. The function is called with the following arguments:</p><dl class=\"compact\"><dt><code>s</code></dt><dd>the <a href=\"https://nginx.org/en/docs/njs/reference.html#stream\">Stream Session</a> object</dd></dl><p>At this phase, it is possible to perform initialization or register a callback with the <a href=\"https://nginx.org/en/docs/njs/reference.html#s_on\"><code>s.on()</code></a> method for each incoming data chunk until one of the following methods are called: <a href=\"https://nginx.org/en/docs/njs/reference.html#s_allow\"><code>s.allow()</code></a>, <a href=\"https://nginx.org/en/docs/njs/reference.html#s_decline\"><code>s.decline()</code></a>, <a href=\"https://nginx.org/en/docs/njs/reference.html#s_done\"><code>s.done()</code></a>. As soon as one of these methods is called, the stream session processing switches to the <a href=\"https://nginx.org/en/docs/stream/stream_processing.html\">next phase</a> and all current <a href=\"https://nginx.org/en/docs/njs/reference.html#s_on\"><code>s.on()</code></a> callbacks are dropped.</p><blockquote class=\"note\">As the <code>js_access</code> handler returns its result immediately, it supports only synchronous callbacks. Thus, asynchronous callbacks such as <a href=\"https://nginx.org/en/docs/njs/reference.html#ngx_fetch\"><code>ngx.fetch()</code></a> or <a href=\"https://nginx.org/en/docs/njs/reference.html#settimeout\"><code>setTimeout()</code></a> are not supported.</blockquote>",
    "module": "ngx_stream_js_module",
    "link": "stream/ngx_stream_js_module.html#js_access",
    "name": "js_access"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>js_fetch_buffer_size</strong> <code><i>size</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>js_fetch_buffer_size 16k;</pre></td></tr><tr><th>Context:</th><td><code>stream</code>, <code>server</code><br></td></tr></tbody></table><p>This directive appeared in version 0.7.4.</p>",
    "doc": "<p>Sets the <code><i>size</i></code> of the buffer used for reading and writing with <a href=\"https://nginx.org/en/docs/njs/reference.html#ngx_fetch\">Fetch API</a>.</p>",
    "module": "ngx_stream_js_module",
    "link": "stream/ngx_stream_js_module.html#js_fetch_buffer_size",
    "name": "js_fetch_buffer_size"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>js_fetch_ciphers</strong> <code><i>ciphers</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>js_fetch_ciphers HIGH:!aNULL:!MD5;</pre></td></tr><tr><th>Context:</th><td><code>stream</code>, <code>server</code><br></td></tr></tbody></table><p>This directive appeared in version 0.7.0.</p>",
    "doc": "<p>Specifies the enabled ciphers for HTTPS connections with <a href=\"https://nginx.org/en/docs/njs/reference.html#ngx_fetch\">Fetch API</a>. The ciphers are specified in the format understood by the OpenSSL library.</p><p>The full list can be viewed using the “<code>openssl ciphers</code>” command.</p>",
    "module": "ngx_stream_js_module",
    "link": "stream/ngx_stream_js_module.html#js_fetch_ciphers",
    "name": "js_fetch_ciphers"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>js_fetch_max_response_buffer_size</strong> <code><i>size</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>js_fetch_max_response_buffer_size 1m;</pre></td></tr><tr><th>Context:</th><td><code>stream</code>, <code>server</code><br></td></tr></tbody></table><p>This directive appeared in version 0.7.4.</p>",
    "doc": "<p>Sets the maximum <code><i>size</i></code> of the response received with <a href=\"https://nginx.org/en/docs/njs/reference.html#ngx_fetch\">Fetch API</a>.</p>",
    "module": "ngx_stream_js_module",
    "link": "stream/ngx_stream_js_module.html#js_fetch_max_response_buffer_size",
    "name": "js_fetch_max_response_buffer_size"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>js_fetch_protocols</strong> [<code>TLSv1</code>] [<code>TLSv1.1</code>] [<code>TLSv1.2</code>] [<code>TLSv1.3</code>];</code><br></td></tr><tr><th>Default:</th><td><pre>js_fetch_protocols TLSv1 TLSv1.1 TLSv1.2;</pre></td></tr><tr><th>Context:</th><td><code>stream</code>, <code>server</code><br></td></tr></tbody></table><p>This directive appeared in version 0.7.0.</p>",
    "doc": "<p>Enables the specified protocols for HTTPS connections with <a href=\"https://nginx.org/en/docs/njs/reference.html#ngx_fetch\">Fetch API</a>.</p>",
    "module": "ngx_stream_js_module",
    "link": "stream/ngx_stream_js_module.html#js_fetch_protocols",
    "name": "js_fetch_protocols"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>js_fetch_timeout</strong> <code><i>time</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>js_fetch_timeout 60s;</pre></td></tr><tr><th>Context:</th><td><code>stream</code>, <code>server</code><br></td></tr></tbody></table><p>This directive appeared in version 0.7.4.</p>",
    "doc": "<p>Defines a timeout for reading and writing for <a href=\"https://nginx.org/en/docs/njs/reference.html#ngx_fetch\">Fetch API</a>. The timeout is set only between two successive read/write operations, not for the whole response. If no data is transmitted within this time, the connection is closed.</p>",
    "module": "ngx_stream_js_module",
    "link": "stream/ngx_stream_js_module.html#js_fetch_timeout",
    "name": "js_fetch_timeout"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>js_fetch_trusted_certificate</strong> <code><i>file</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>stream</code>, <code>server</code><br></td></tr></tbody></table><p>This directive appeared in version 0.7.0.</p>",
    "doc": "<p>Specifies a <code><i>file</i></code> with trusted CA certificates in the PEM format used to <a href=\"https://nginx.org/en/docs/njs/reference.html#fetch_verify\">verify</a> the HTTPS certificate with <a href=\"https://nginx.org/en/docs/njs/reference.html#ngx_fetch\">Fetch API</a>.</p>",
    "module": "ngx_stream_js_module",
    "link": "stream/ngx_stream_js_module.html#js_fetch_trusted_certificate",
    "name": "js_fetch_trusted_certificate"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>js_fetch_verify</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>js_fetch_verify on;</pre></td></tr><tr><th>Context:</th><td><code>stream</code>, <code>server</code><br></td></tr></tbody></table><p>This directive appeared in version 0.7.4.</p>",
    "doc": "<p>Enables or disables verification of the HTTPS server certificate with <a href=\"https://nginx.org/en/docs/njs/reference.html#ngx_fetch\">Fetch API</a>.</p>",
    "module": "ngx_stream_js_module",
    "link": "stream/ngx_stream_js_module.html#js_fetch_verify",
    "name": "js_fetch_verify"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>js_fetch_verify_depth</strong> <code><i>number</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>js_fetch_verify_depth 100;</pre></td></tr><tr><th>Context:</th><td><code>stream</code>, <code>server</code><br></td></tr></tbody></table><p>This directive appeared in version 0.7.0.</p>",
    "doc": "<p>Sets the verification depth in the HTTPS server certificates chain with <a href=\"https://nginx.org/en/docs/njs/reference.html#ngx_fetch\">Fetch API</a>.</p>",
    "module": "ngx_stream_js_module",
    "link": "stream/ngx_stream_js_module.html#js_fetch_verify_depth",
    "name": "js_fetch_verify_depth"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>js_filter</strong> <code><i>function</i></code> | <code><i>module.function</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>stream</code>, <code>server</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets a data filter. Since <a href=\"https://nginx.org/en/docs/njs/changes.html#njs0.4.0\">0.4.0</a>, a module function can be referenced. The filter function is called once at the moment when the stream session reaches the <a href=\"https://nginx.org/en/docs/stream/stream_processing.html#content_phase\">content</a> phase.</p><p>The filter function is called with the following arguments:</p><dl class=\"compact\"><dt><code>s</code></dt><dd>the <a href=\"https://nginx.org/en/docs/njs/reference.html#stream\">Stream Session</a> object</dd></dl><p>At this phase, it is possible to perform initialization or register a callback with the <a href=\"https://nginx.org/en/docs/njs/reference.html#s_on\"><code>s.on()</code></a> method for each incoming data chunk. The <a href=\"https://nginx.org/en/docs/njs/reference.html#s_off\"><code>s.off()</code></a> method may be used to unregister a callback and stop filtering.</p><blockquote class=\"note\">As the <code>js_filter</code> handler returns its result immediately, it supports only synchronous operations. Thus, asynchronous operations such as <a href=\"https://nginx.org/en/docs/njs/reference.html#ngx_fetch\"><code>ngx.fetch()</code></a> or <a href=\"https://nginx.org/en/docs/njs/reference.html#settimeout\"><code>setTimeout()</code></a> are not supported.</blockquote>",
    "module": "ngx_stream_js_module",
    "link": "stream/ngx_stream_js_module.html#js_filter",
    "name": "js_filter"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>js_import</strong> <code><i>module.js</i></code> | <code><i>export_name from module.js</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>stream</code>, <code>server</code><br></td></tr></tbody></table><p>This directive appeared in version 0.4.0.</p>",
    "doc": "<p>Imports a module that implements location and variable handlers in njs. The <code>export_name</code> is used as a namespace to access module functions. If the <code>export_name</code> is not specified, the module name will be used as a namespace.</p><blockquote class=\"example\"><pre>js_import stream.js;\n</pre></blockquote><p>Here, the module name <code>stream</code> is used as a namespace while accessing exports. If the imported module exports <code>foo()</code>, <code>stream.foo</code> is used to refer to it.</p><p>Several <code>js_import</code> directives can be specified.</p><blockquote class=\"note\">The directive can be specified on the <code>server</code> level since <a href=\"https://nginx.org/en/docs/njs/changes.html#njs0.7.7\">0.7.7</a>.</blockquote>",
    "module": "ngx_stream_js_module",
    "link": "stream/ngx_stream_js_module.html#js_import",
    "name": "js_import"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>js_include</strong> <code><i>file</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>stream</code><br></td></tr></tbody></table>",
    "doc": "<p>Specifies a file that implements server and variable handlers in njs:</p><blockquote class=\"example\"><pre>nginx.conf:\njs_include stream.js;\njs_set     $js_addr address;\nserver {\n    listen 127.0.0.1:12345;\n    return $js_addr;\n}\n\nstream.js:\nfunction address(s) {\n    return s.remoteAddress;\n}\n</pre></blockquote><p>The directive was made obsolete in version <a href=\"https://nginx.org/en/docs/njs/changes.html#njs0.4.0\">0.4.0</a> and was removed in version <a href=\"https://nginx.org/en/docs/njs/changes.html#njs0.7.1\">0.7.1</a>. The <a href=\"https://nginx.org/en/docs/stream/ngx_stream_js_module.html#js_import\">js_import</a> directive should be used instead.</p>",
    "module": "ngx_stream_js_module",
    "link": "stream/ngx_stream_js_module.html#js_include",
    "name": "js_include"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>js_path</strong> <code><i>path</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>stream</code>, <code>server</code><br></td></tr></tbody></table><p>This directive appeared in version 0.3.0.</p>",
    "doc": "<p>Sets an additional path for njs modules.</p><blockquote class=\"note\">The directive can be specified on the <code>server</code> level since <a href=\"https://nginx.org/en/docs/njs/changes.html#njs0.7.7\">0.7.7</a>.</blockquote>",
    "module": "ngx_stream_js_module",
    "link": "stream/ngx_stream_js_module.html#js_path",
    "name": "js_path"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>js_preread</strong> <code><i>function</i></code> | <code><i>module.function</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>stream</code>, <code>server</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets an njs function which will be called at the <a href=\"https://nginx.org/en/docs/stream/stream_processing.html#preread_phase\">preread</a> phase. Since <a href=\"https://nginx.org/en/docs/njs/changes.html#njs0.4.0\">0.4.0</a>, a module function can be referenced.</p><p>The function is called once at the moment when the stream session reaches the <a href=\"https://nginx.org/en/docs/stream/stream_processing.html#preread_phase\">preread</a> phase for the first time. The function is called with the following arguments:</p><dl class=\"compact\"><dt><code>s</code></dt><dd>the <a href=\"https://nginx.org/en/docs/njs/reference.html#stream\">Stream Session</a> object</dd></dl><p>At this phase, it is possible to perform initialization or register a callback with the <a href=\"https://nginx.org/en/docs/njs/reference.html#s_on\"><code>s.on()</code></a> method for each incoming data chunk until one of the following methods are called: <a href=\"https://nginx.org/en/docs/njs/reference.html#s_allow\"><code>s.allow()</code></a>, <a href=\"https://nginx.org/en/docs/njs/reference.html#s_decline\"><code>s.decline()</code></a>, <a href=\"https://nginx.org/en/docs/njs/reference.html#s_done\"><code>s.done()</code></a>. When one of these methods is called, the stream session switches to the <a href=\"https://nginx.org/en/docs/stream/stream_processing.html\">next phase</a> and all current <a href=\"https://nginx.org/en/docs/njs/reference.html#s_on\"><code>s.on()</code></a> callbacks are dropped.</p><blockquote class=\"note\">As the <code>js_preread</code> handler returns its result immediately, it supports only synchronous callbacks. Thus, asynchronous callbacks such as <a href=\"https://nginx.org/en/docs/njs/reference.html#ngx_fetch\"><code>ngx.fetch()</code></a> or <a href=\"https://nginx.org/en/docs/njs/reference.html#settimeout\"><code>setTimeout()</code></a> are not supported. Nevertheless, asynchronous operations are supported in <a href=\"https://nginx.org/en/docs/njs/reference.html#s_on\"><code>s.on()</code></a> callbacks in the <a href=\"https://nginx.org/en/docs/stream/stream_processing.html#preread_phase\">preread</a> phase. See <a href=\"https://github.com/nginx/njs-examples#authorizing-connections-using-ngx-fetch-as-auth-request-stream-auth-request\">this example</a> for more information.</blockquote>",
    "module": "ngx_stream_js_module",
    "link": "stream/ngx_stream_js_module.html#js_preread",
    "name": "js_preread"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>js_set</strong> <code><i>$variable</i></code> <code><i>function</i></code> | <code><i>module.function</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>stream</code>, <code>server</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets an njs <code>function</code> for the specified <code>variable</code>. Since <a href=\"https://nginx.org/en/docs/njs/changes.html#njs0.4.0\">0.4.0</a>, a module function can be referenced.</p><p>The function is called when the variable is referenced for the first time for a given request. The exact moment depends on a <a href=\"https://nginx.org/en/docs/stream/stream_processing.html\">phase</a> at which the variable is referenced. This can be used to perform some logic not related to variable evaluation. For example, if the variable is referenced only in the <a href=\"https://nginx.org/en/docs/stream/ngx_stream_log_module.html#log_format\">log_format</a> directive, its handler will not be executed until the log phase. This handler can be used to do some cleanup right before the request is freed.</p><blockquote class=\"note\">As the <code>js_set</code> handler returns its result immediately, it supports only synchronous callbacks. Thus, asynchronous callbacks such as <a href=\"https://nginx.org/en/docs/njs/reference.html#ngx_fetch\">ngx.fetch()</a> or <a href=\"https://nginx.org/en/docs/njs/reference.html#settimeout\">setTimeout()</a> are not supported.</blockquote><blockquote class=\"note\">The directive can be specified on the <code>server</code> level since <a href=\"https://nginx.org/en/docs/njs/changes.html#njs0.7.7\">0.7.7</a>.</blockquote>",
    "module": "ngx_stream_js_module",
    "link": "stream/ngx_stream_js_module.html#js_set",
    "name": "js_set"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>js_var</strong> <code><i>$variable</i></code> [<code><i>value</i></code>];</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>stream</code>, <code>server</code><br></td></tr></tbody></table><p>This directive appeared in version 0.5.3.</p>",
    "doc": "<p>Declares a <a href=\"https://nginx.org/en/docs/njs/reference.html#r_variables\">writable</a> variable. The value can contain text, variables, and their combination.</p><blockquote class=\"note\">The directive can be specified on the <code>server</code> level since <a href=\"https://nginx.org/en/docs/njs/changes.html#njs0.7.7\">0.7.7</a>.</blockquote>",
    "module": "ngx_stream_js_module",
    "link": "stream/ngx_stream_js_module.html#js_var",
    "name": "js_var"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>keyval</strong> <code><i>key</i></code> <code><i>$variable</i></code> <code>zone</code>=<code><i>name</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>stream</code><br></td></tr></tbody></table>",
    "doc": "<p>Creates a new <code><i>$variable</i></code> whose value is looked up by the <code><i>key</i></code> in the key-value database. Matching rules are defined by the <a href=\"https://nginx.org/en/docs/stream/ngx_stream_keyval_module.html#keyval_type\"><code>type</code></a> parameter of the <a href=\"https://nginx.org/en/docs/stream/ngx_stream_keyval_module.html#keyval_zone\"><code>keyval_zone</code></a> directive. The database is stored in a shared memory zone specified by the <code>zone</code> parameter.</p>",
    "module": "ngx_stream_keyval_module",
    "link": "stream/ngx_stream_keyval_module.html#keyval",
    "name": "keyval"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>keyval_zone</strong> <code>zone</code>=<code><i>name</i></code>:<code><i>size</i></code> [<code>state</code>=<code><i>file</i></code>] [<code>timeout</code>=<code><i>time</i></code>] [<code>type</code>=<code>string</code>|<code>ip</code>|<code>prefix</code>] [<code>sync</code>];</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>stream</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets the <code><i>name</i></code> and <code><i>size</i></code> of the shared memory zone that keeps the key-value database. Key-value pairs are managed by the <a href=\"https://nginx.org/en/docs/http/ngx_http_api_module.html#stream_keyvals_\">API</a>.</p>",
    "module": "ngx_stream_keyval_module",
    "link": "stream/ngx_stream_keyval_module.html#keyval_zone",
    "name": "keyval_zone"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>limit_conn</strong> <code><i>zone</i></code> <code><i>number</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>stream</code>, <code>server</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets the shared memory zone and the maximum allowed number of connections for a given key value. When this limit is exceeded, the server will close the connection. For example, the directives</p><blockquote class=\"example\"><pre>limit_conn_zone $binary_remote_addr zone=addr:10m;\n\nserver {\n    ...\n    limit_conn addr 1;\n}\n</pre></blockquote><p>allow only one connection per an IP address at a time.</p><p>When several <code>limit_conn</code> directives are specified, any configured limit will apply.</p><p>These directives are inherited from the previous configuration level if and only if there are no <code>limit_conn</code> directives defined on the current level.</p>",
    "module": "ngx_stream_limit_conn_module",
    "link": "stream/ngx_stream_limit_conn_module.html#limit_conn",
    "name": "limit_conn"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>limit_conn_dry_run</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>limit_conn_dry_run off;</pre></td></tr><tr><th>Context:</th><td><code>stream</code>, <code>server</code><br></td></tr></tbody></table><p>This directive appeared in version 1.17.6.</p>",
    "doc": "<p>Enables the dry run mode. In this mode, the number of connections is not limited, however, in the shared memory zone, the number of excessive connections is accounted as usual.</p>",
    "module": "ngx_stream_limit_conn_module",
    "link": "stream/ngx_stream_limit_conn_module.html#limit_conn_dry_run",
    "name": "limit_conn_dry_run"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>limit_conn_log_level</strong> <code>info</code> | <code>notice</code> | <code>warn</code> | <code>error</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>limit_conn_log_level error;</pre></td></tr><tr><th>Context:</th><td><code>stream</code>, <code>server</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets the desired logging level for cases when the server limits the number of connections.</p>",
    "module": "ngx_stream_limit_conn_module",
    "link": "stream/ngx_stream_limit_conn_module.html#limit_conn_log_level",
    "name": "limit_conn_log_level"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>limit_conn_zone</strong> <code><i>key</i></code> <code>zone</code>=<code><i>name</i></code>:<code><i>size</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>stream</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets parameters for a shared memory zone that will keep states for various keys. In particular, the state includes the current number of connections. The <code><i>key</i></code> can contain text, variables, and their combinations (1.11.2). Connections with an empty key value are not accounted. Usage example:</p><blockquote class=\"example\"><pre>limit_conn_zone $binary_remote_addr zone=addr:10m;\n</pre></blockquote><p>Here, the key is a client IP address set by the <code>$binary_remote_addr</code> variable. The size of <code>$binary_remote_addr</code> is 4 bytes for IPv4 addresses or 16 bytes for IPv6 addresses. The stored state always occupies 32 or 64 bytes on 32-bit platforms and 64 bytes on 64-bit platforms. One megabyte zone can keep about 32 thousand 32-byte states or about 16 thousand 64-byte states. If the zone storage is exhausted, the server will close the connection.</p><blockquote class=\"note\">Additionally, as part of our <a href=\"http://nginx.com/products/\">commercial subscription</a>, the <a href=\"https://nginx.org/en/docs/http/ngx_http_api_module.html#stream_limit_conns_\">status information</a> for each such shared memory zone can be <a href=\"https://nginx.org/en/docs/http/ngx_http_api_module.html#getStreamLimitConnZone\">obtained</a> or <a href=\"https://nginx.org/en/docs/http/ngx_http_api_module.html#deleteStreamLimitConnZoneStat\">reset</a> with the <a href=\"https://nginx.org/en/docs/http/ngx_http_api_module.html\">API</a> since 1.17.7.</blockquote>",
    "module": "ngx_stream_limit_conn_module",
    "link": "stream/ngx_stream_limit_conn_module.html#limit_conn_zone",
    "name": "limit_conn_zone"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>access_log</strong> <code><i>path</i></code> <code><i>format</i></code> [<code>buffer</code>=<code><i>size</i></code>] [<code>gzip[=<code><i>level</i></code>]</code>] [<code>flush</code>=<code><i>time</i></code>] [<code>if</code>=<code><i>condition</i></code>];</code><br><code><strong>access_log</strong> <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>access_log off;</pre></td></tr><tr><th>Context:</th><td><code>stream</code>, <code>server</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets the path, <a href=\"https://nginx.org/en/docs/stream/ngx_stream_log_module.html#log_format\">format</a>, and configuration for a buffered log write. Several logs can be specified on the same configuration level. Logging to <a href=\"https://nginx.org/en/docs/syslog.html\">syslog</a> can be configured by specifying the “<code>syslog:</code>” prefix in the first parameter. The special value <code>off</code> cancels all <code>access_log</code> directives on the current level.</p><p>If either the <code>buffer</code> or <code>gzip</code> parameter is used, writes to log will be buffered.</p><blockquote class=\"note\">The buffer size must not exceed the size of an atomic write to a disk file. For FreeBSD this size is unlimited.</blockquote><p>When buffering is enabled, the data will be written to the file:</p>",
    "module": "ngx_stream_log_module",
    "link": "stream/ngx_stream_log_module.html#access_log",
    "name": "access_log"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>log_format</strong> <code><i>name</i></code> [<code>escape</code>=<code>default</code>|<code>json</code>|<code>none</code>] <code><i>string</i></code> ...;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>stream</code><br></td></tr></tbody></table>",
    "doc": "<p>Specifies the log format, for example:</p><blockquote class=\"example\"><pre>log_format proxy '$remote_addr [$time_local] '\n                 '$protocol $status $bytes_sent $bytes_received '\n                 '$session_time \"$upstream_addr\" '\n                 '\"$upstream_bytes_sent\" \"$upstream_bytes_received\" \"$upstream_connect_time\"';\n</pre></blockquote>",
    "module": "ngx_stream_log_module",
    "link": "stream/ngx_stream_log_module.html#log_format",
    "name": "log_format"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>open_log_file_cache</strong> <code>max</code>=<code><i>N</i></code> [<code>inactive</code>=<code><i>time</i></code>] [<code>min_uses</code>=<code><i>N</i></code>] [<code>valid</code>=<code><i>time</i></code>];</code><br><code><strong>open_log_file_cache</strong> <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>open_log_file_cache off;</pre></td></tr><tr><th>Context:</th><td><code>stream</code>, <code>server</code><br></td></tr></tbody></table>",
    "doc": "<p>Defines a cache that stores the file descriptors of frequently used logs whose names contain variables. The directive has the following parameters:</p><dl class=\"compact\"><dt><code>max</code></dt><dd>sets the maximum number of descriptors in a cache; if the cache becomes full the least recently used (LRU) descriptors are closed</dd><dt><code>inactive</code></dt><dd>sets the time after which the cached descriptor is closed if there were no access during this time; by default, 10 seconds</dd><dt><code>min_uses</code></dt><dd>sets the minimum number of file uses during the time defined by the <code>inactive</code> parameter to let the descriptor stay open in a cache; by default, 1</dd><dt><code>valid</code></dt><dd>sets the time after which it should be checked that the file still exists with the same name; by default, 60 seconds</dd><dt><code>off</code></dt><dd>disables caching</dd></dl><p>Usage example:</p><blockquote class=\"example\"><pre>open_log_file_cache max=1000 inactive=20s valid=1m min_uses=2;\n</pre></blockquote>",
    "module": "ngx_stream_log_module",
    "link": "stream/ngx_stream_log_module.html#open_log_file_cache",
    "name": "open_log_file_cache"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>map</strong> <code><i>string</i></code> <code><i>$variable</i></code> { ... }</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>stream</code><br></td></tr></tbody></table>",
    "doc": "<p>Creates a new variable whose value depends on values of one or more of the source variables specified in the first parameter.</p><blockquote class=\"note\">Since variables are evaluated only when they are used, the mere declaration even of a large number of “<code>map</code>” variables does not add any extra costs to connection processing.</blockquote><p>Parameters inside the <code>map</code> block specify a mapping between source and resulting values.</p><p>Source values are specified as strings or regular expressions.</p><p>Strings are matched ignoring the case.</p><p>A regular expression should either start from the “<code>~</code>” symbol for a case-sensitive matching, or from the “<code>~*</code>” symbols for case-insensitive matching. A regular expression can contain named and positional captures that can later be used in other directives along with the resulting variable.</p><p>If a source value matches one of the names of special parameters described below, it should be prefixed with the “<code>\\</code>” symbol.</p><p>The resulting value can contain text, variable, and their combination.</p><p>The following special parameters are also supported:</p><dl class=\"compact\"><dt><code>default</code> <code><i>value</i></code></dt><dd>sets the resulting value if the source value matches none of the specified variants. When <code>default</code> is not specified, the default resulting value will be an empty string.</dd><dt><code>hostnames</code></dt><dd>indicates that source values can be hostnames with a prefix or suffix mask:<blockquote class=\"example\"><pre>*.example.com 1;\nexample.*     1;\n</pre></blockquote>The following two records<blockquote class=\"example\"><pre>example.com   1;\n*.example.com 1;\n</pre></blockquote>can be combined:<blockquote class=\"example\"><pre>.example.com  1;\n</pre></blockquote>This parameter should be specified before the list of values.</dd><dt><code>include</code> <code><i>file</i></code></dt><dd>includes a file with values. There can be several inclusions.</dd><dt id=\"volatile\"><code>volatile</code></dt><dd>indicates that the variable is not cacheable (1.11.7).</dd></dl><p>If the source value matches more than one of the specified variants, e.g. both a mask and a regular expression match, the first matching variant will be chosen, in the following order of priority:</p>",
    "module": "ngx_stream_map_module",
    "link": "stream/ngx_stream_map_module.html#map",
    "name": "map"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>map_hash_bucket_size</strong> <code><i>size</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>map_hash_bucket_size 32|64|128;</pre></td></tr><tr><th>Context:</th><td><code>stream</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets the bucket size for the <a href=\"https://nginx.org/en/docs/stream/ngx_stream_map_module.html#map\">map</a> variables hash tables. Default value depends on the processor’s cache line size. The details of setting up hash tables are provided in a separate <a href=\"https://nginx.org/en/docs/hash.html\">document</a>.</p>",
    "module": "ngx_stream_map_module",
    "link": "stream/ngx_stream_map_module.html#map_hash_bucket_size",
    "name": "map_hash_bucket_size"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>map_hash_max_size</strong> <code><i>size</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>map_hash_max_size 2048;</pre></td></tr><tr><th>Context:</th><td><code>stream</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets the maximum <code><i>size</i></code> of the <a href=\"https://nginx.org/en/docs/stream/ngx_stream_map_module.html#map\">map</a> variables hash tables. The details of setting up hash tables are provided in a separate <a href=\"https://nginx.org/en/docs/hash.html\">document</a>.</p>",
    "module": "ngx_stream_map_module",
    "link": "stream/ngx_stream_map_module.html#map_hash_max_size",
    "name": "map_hash_max_size"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_bind</strong> <code><i>address</i></code> [<code>transparent</code>] | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>stream</code>, <code>server</code><br></td></tr></tbody></table><p>This directive appeared in version 1.9.2.</p>",
    "doc": "<p>Makes outgoing connections to a proxied server originate from the specified local IP <code><i>address</i></code>. Parameter value can contain variables (1.11.2). The special value <code>off</code> cancels the effect of the <code>proxy_bind</code> directive inherited from the previous configuration level, which allows the system to auto-assign the local IP address.</p>",
    "module": "ngx_stream_proxy_module",
    "link": "stream/ngx_stream_proxy_module.html#proxy_bind",
    "name": "proxy_bind"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_buffer_size</strong> <code><i>size</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>proxy_buffer_size 16k;</pre></td></tr><tr><th>Context:</th><td><code>stream</code>, <code>server</code><br></td></tr></tbody></table><p>This directive appeared in version 1.9.4.</p>",
    "doc": "<p>Sets the <code><i>size</i></code> of the buffer used for reading data from the proxied server. Also sets the <code><i>size</i></code> of the buffer used for reading data from the client.</p>",
    "module": "ngx_stream_proxy_module",
    "link": "stream/ngx_stream_proxy_module.html#proxy_buffer_size",
    "name": "proxy_buffer_size"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_connect_timeout</strong> <code><i>time</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>proxy_connect_timeout 60s;</pre></td></tr><tr><th>Context:</th><td><code>stream</code>, <code>server</code><br></td></tr></tbody></table>",
    "doc": "<p>Defines a timeout for establishing a connection with a proxied server.</p>",
    "module": "ngx_stream_proxy_module",
    "link": "stream/ngx_stream_proxy_module.html#proxy_connect_timeout",
    "name": "proxy_connect_timeout"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_download_rate</strong> <code><i>rate</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>proxy_download_rate 0;</pre></td></tr><tr><th>Context:</th><td><code>stream</code>, <code>server</code><br></td></tr></tbody></table><p>This directive appeared in version 1.9.3.</p>",
    "doc": "<p>Limits the speed of reading the data from the proxied server. The <code><i>rate</i></code> is specified in bytes per second. The zero value disables rate limiting. The limit is set per a connection, so if nginx simultaneously opens two connections to the proxied server, the overall rate will be twice as much as the specified limit.</p><p>Parameter value can contain variables (1.17.0). It may be useful in cases where rate should be limited depending on a certain condition:</p><blockquote class=\"example\"><pre>map $slow $rate {\n    1     4k;\n    2     8k;\n}\n\nproxy_download_rate $rate;\n</pre></blockquote>",
    "module": "ngx_stream_proxy_module",
    "link": "stream/ngx_stream_proxy_module.html#proxy_download_rate",
    "name": "proxy_download_rate"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_half_close</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>proxy_half_close off;</pre></td></tr><tr><th>Context:</th><td><code>stream</code>, <code>server</code><br></td></tr></tbody></table><p>This directive appeared in version 1.21.4.</p>",
    "doc": "<p>Enables or disables closing each direction of a TCP connection independently (“TCP half-close”). If enabled, proxying over TCP will be kept until both sides close the connection.</p>",
    "module": "ngx_stream_proxy_module",
    "link": "stream/ngx_stream_proxy_module.html#proxy_half_close",
    "name": "proxy_half_close"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_next_upstream</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>proxy_next_upstream on;</pre></td></tr><tr><th>Context:</th><td><code>stream</code>, <code>server</code><br></td></tr></tbody></table>",
    "doc": "<p>When a connection to the proxied server cannot be established, determines whether a client connection will be passed to the next server.</p><p>Passing a connection to the next server can be limited by <a href=\"https://nginx.org/en/docs/stream/ngx_stream_proxy_module.html#proxy_next_upstream_tries\">the number of tries</a> and by <a href=\"https://nginx.org/en/docs/stream/ngx_stream_proxy_module.html#proxy_next_upstream_timeout\">time</a>.</p>",
    "module": "ngx_stream_proxy_module",
    "link": "stream/ngx_stream_proxy_module.html#proxy_next_upstream",
    "name": "proxy_next_upstream"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_next_upstream_timeout</strong> <code><i>time</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>proxy_next_upstream_timeout 0;</pre></td></tr><tr><th>Context:</th><td><code>stream</code>, <code>server</code><br></td></tr></tbody></table>",
    "doc": "<p>Limits the time allowed to pass a connection to the <a href=\"https://nginx.org/en/docs/stream/ngx_stream_proxy_module.html#proxy_next_upstream\">next server</a>. The <code>0</code> value turns off this limitation.</p>",
    "module": "ngx_stream_proxy_module",
    "link": "stream/ngx_stream_proxy_module.html#proxy_next_upstream_timeout",
    "name": "proxy_next_upstream_timeout"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_next_upstream_tries</strong> <code><i>number</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>proxy_next_upstream_tries 0;</pre></td></tr><tr><th>Context:</th><td><code>stream</code>, <code>server</code><br></td></tr></tbody></table>",
    "doc": "<p>Limits the number of possible tries for passing a connection to the <a href=\"https://nginx.org/en/docs/stream/ngx_stream_proxy_module.html#proxy_next_upstream\">next server</a>. The <code>0</code> value turns off this limitation.</p>",
    "module": "ngx_stream_proxy_module",
    "link": "stream/ngx_stream_proxy_module.html#proxy_next_upstream_tries",
    "name": "proxy_next_upstream_tries"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_pass</strong> <code><i>address</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>server</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets the address of a proxied server. The address can be specified as a domain name or IP address, and a port:</p><blockquote class=\"example\"><pre>proxy_pass localhost:12345;\n</pre></blockquote><p>or as a UNIX-domain socket path:</p><blockquote class=\"example\"><pre>proxy_pass unix:/tmp/stream.socket;\n</pre></blockquote><p>If a domain name resolves to several addresses, all of them will be used in a round-robin fashion. In addition, an address can be specified as a <a href=\"https://nginx.org/en/docs/stream/ngx_stream_upstream_module.html\">server group</a>.</p><p>The address can also be specified using variables (1.11.3):</p><blockquote class=\"example\"><pre>proxy_pass $upstream;\n</pre></blockquote><p>In this case, the server name is searched among the described <a href=\"https://nginx.org/en/docs/stream/ngx_stream_upstream_module.html\">server groups</a>, and, if not found, is determined using a <a href=\"https://nginx.org/en/docs/stream/ngx_stream_core_module.html#resolver\">resolver</a>.</p>",
    "module": "ngx_stream_proxy_module",
    "link": "stream/ngx_stream_proxy_module.html#proxy_pass",
    "name": "proxy_pass"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_protocol</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>proxy_protocol off;</pre></td></tr><tr><th>Context:</th><td><code>stream</code>, <code>server</code><br></td></tr></tbody></table><p>This directive appeared in version 1.9.2.</p>",
    "doc": "<p>Enables the <a href=\"http://www.haproxy.org/download/1.5/doc/proxy-protocol.txt\">PROXY protocol</a> for connections to a proxied server.</p>",
    "module": "ngx_stream_proxy_module",
    "link": "stream/ngx_stream_proxy_module.html#proxy_protocol",
    "name": "proxy_protocol"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_requests</strong> <code><i>number</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>proxy_requests 0;</pre></td></tr><tr><th>Context:</th><td><code>stream</code>, <code>server</code><br></td></tr></tbody></table><p>This directive appeared in version 1.15.7.</p>",
    "doc": "<p>Sets the number of client datagrams at which binding between a client and existing UDP stream session is dropped. After receiving the specified number of datagrams, next datagram from the same client starts a new session. The session terminates when all client datagrams are transmitted to a proxied server and the expected number of <a href=\"https://nginx.org/en/docs/stream/ngx_stream_proxy_module.html#proxy_responses\">responses</a> is received, or when it reaches a <a href=\"https://nginx.org/en/docs/stream/ngx_stream_proxy_module.html#proxy_timeout\">timeout</a>.</p>",
    "module": "ngx_stream_proxy_module",
    "link": "stream/ngx_stream_proxy_module.html#proxy_requests",
    "name": "proxy_requests"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_responses</strong> <code><i>number</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>stream</code>, <code>server</code><br></td></tr></tbody></table><p>This directive appeared in version 1.9.13.</p>",
    "doc": "<p>Sets the number of datagrams expected from the proxied server in response to a client datagram if the <a href=\"https://nginx.org/en/docs/stream/ngx_stream_core_module.html#udp\">UDP</a> protocol is used. The number serves as a hint for session termination. By default, the number of datagrams is not limited.</p><p>If zero value is specified, no response is expected. However, if a response is received and the session is still not finished, the response will be handled.</p>",
    "module": "ngx_stream_proxy_module",
    "link": "stream/ngx_stream_proxy_module.html#proxy_responses",
    "name": "proxy_responses"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_session_drop</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>proxy_session_drop off;</pre></td></tr><tr><th>Context:</th><td><code>stream</code>, <code>server</code><br></td></tr></tbody></table><p>This directive appeared in version 1.15.8.</p>",
    "doc": "<p>Enables terminating all sessions to a proxied server after it was removed from the group or marked as permanently unavailable. This can occur because of <a href=\"https://nginx.org/en/docs/stream/ngx_stream_core_module.html#resolver\">re-resolve</a> or with the API <a href=\"https://nginx.org/en/docs/http/ngx_http_api_module.html#deleteStreamUpstreamServer\"><code>DELETE</code></a> command. A server can be marked as permanently unavailable if it is considered <a href=\"https://nginx.org/en/docs/stream/ngx_stream_upstream_hc_module.html#health_check\">unhealthy</a> or with the API <a href=\"https://nginx.org/en/docs/http/ngx_http_api_module.html#patchStreamUpstreamServer\"><code>PATCH</code></a> command. Each session is terminated when the next read or write event is processed for the client or proxied server.</p><blockquote class=\"note\">This directive is available as part of our <a href=\"http://nginx.com/products/\">commercial subscription</a>.</blockquote>",
    "module": "ngx_stream_proxy_module",
    "link": "stream/ngx_stream_proxy_module.html#proxy_session_drop",
    "name": "proxy_session_drop"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_socket_keepalive</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>proxy_socket_keepalive off;</pre></td></tr><tr><th>Context:</th><td><code>stream</code>, <code>server</code><br></td></tr></tbody></table><p>This directive appeared in version 1.15.6.</p>",
    "doc": "<p>Configures the “TCP keepalive” behavior for outgoing connections to a proxied server. By default, the operating system’s settings are in effect for the socket. If the directive is set to the value “<code>on</code>”, the <code>SO_KEEPALIVE</code> socket option is turned on for the socket.</p>",
    "module": "ngx_stream_proxy_module",
    "link": "stream/ngx_stream_proxy_module.html#proxy_socket_keepalive",
    "name": "proxy_socket_keepalive"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_ssl</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>proxy_ssl off;</pre></td></tr><tr><th>Context:</th><td><code>stream</code>, <code>server</code><br></td></tr></tbody></table>",
    "doc": "<p>Enables the SSL/TLS protocol for connections to a proxied server.</p>",
    "module": "ngx_stream_proxy_module",
    "link": "stream/ngx_stream_proxy_module.html#proxy_ssl",
    "name": "proxy_ssl"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_ssl_certificate</strong> <code><i>file</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>stream</code>, <code>server</code><br></td></tr></tbody></table>",
    "doc": "<p>Specifies a <code><i>file</i></code> with the certificate in the PEM format used for authentication to a proxied server.</p><p>Since version 1.21.0, variables can be used in the <code><i>file</i></code> name.</p>",
    "module": "ngx_stream_proxy_module",
    "link": "stream/ngx_stream_proxy_module.html#proxy_ssl_certificate",
    "name": "proxy_ssl_certificate"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_ssl_certificate_key</strong> <code><i>file</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>stream</code>, <code>server</code><br></td></tr></tbody></table>",
    "doc": "<p>Specifies a <code><i>file</i></code> with the secret key in the PEM format used for authentication to a proxied server.</p><p>Since version 1.21.0, variables can be used in the <code><i>file</i></code> name.</p>",
    "module": "ngx_stream_proxy_module",
    "link": "stream/ngx_stream_proxy_module.html#proxy_ssl_certificate_key",
    "name": "proxy_ssl_certificate_key"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_ssl_ciphers</strong> <code><i>ciphers</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>proxy_ssl_ciphers DEFAULT;</pre></td></tr><tr><th>Context:</th><td><code>stream</code>, <code>server</code><br></td></tr></tbody></table>",
    "doc": "<p>Specifies the enabled ciphers for connections to a proxied server. The ciphers are specified in the format understood by the OpenSSL library.</p><p>The full list can be viewed using the “<code>openssl ciphers</code>” command.</p>",
    "module": "ngx_stream_proxy_module",
    "link": "stream/ngx_stream_proxy_module.html#proxy_ssl_ciphers",
    "name": "proxy_ssl_ciphers"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_ssl_conf_command</strong> <code><i>name</i></code> <code><i>value</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>stream</code>, <code>server</code><br></td></tr></tbody></table><p>This directive appeared in version 1.19.4.</p>",
    "doc": "<p>Sets arbitrary OpenSSL configuration <a href=\"https://www.openssl.org/docs/man1.1.1/man3/SSL_CONF_cmd.html\">commands</a> when establishing a connection with the proxied server.</p><blockquote class=\"note\">The directive is supported when using OpenSSL 1.0.2 or higher.</blockquote><p>Several <code>proxy_ssl_conf_command</code> directives can be specified on the same level. These directives are inherited from the previous configuration level if and only if there are no <code>proxy_ssl_conf_command</code> directives defined on the current level.</p><blockquote class=\"note\">Note that configuring OpenSSL directly might result in unexpected behavior.</blockquote>",
    "module": "ngx_stream_proxy_module",
    "link": "stream/ngx_stream_proxy_module.html#proxy_ssl_conf_command",
    "name": "proxy_ssl_conf_command"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_ssl_crl</strong> <code><i>file</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>stream</code>, <code>server</code><br></td></tr></tbody></table>",
    "doc": "<p>Specifies a <code><i>file</i></code> with revoked certificates (CRL) in the PEM format used to <a href=\"https://nginx.org/en/docs/stream/ngx_stream_proxy_module.html#proxy_ssl_verify\">verify</a> the certificate of the proxied server.</p>",
    "module": "ngx_stream_proxy_module",
    "link": "stream/ngx_stream_proxy_module.html#proxy_ssl_crl",
    "name": "proxy_ssl_crl"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_ssl_name</strong> <code><i>name</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>proxy_ssl_name host from proxy_pass;</pre></td></tr><tr><th>Context:</th><td><code>stream</code>, <code>server</code><br></td></tr></tbody></table>",
    "doc": "<p>Allows overriding the server name used to <a href=\"https://nginx.org/en/docs/stream/ngx_stream_proxy_module.html#proxy_ssl_verify\">verify</a> the certificate of the proxied server and to be <a href=\"https://nginx.org/en/docs/stream/ngx_stream_proxy_module.html#proxy_ssl_server_name\">passed through SNI</a> when establishing a connection with the proxied server. The server name can also be specified using variables (1.11.3).</p><p>By default, the host part of the <a href=\"https://nginx.org/en/docs/stream/ngx_stream_proxy_module.html#proxy_pass\">proxy_pass</a> address is used.</p>",
    "module": "ngx_stream_proxy_module",
    "link": "stream/ngx_stream_proxy_module.html#proxy_ssl_name",
    "name": "proxy_ssl_name"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_ssl_password_file</strong> <code><i>file</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>stream</code>, <code>server</code><br></td></tr></tbody></table>",
    "doc": "<p>Specifies a <code><i>file</i></code> with passphrases for <a href=\"https://nginx.org/en/docs/stream/ngx_stream_proxy_module.html#proxy_ssl_certificate_key\">secret keys</a> where each passphrase is specified on a separate line. Passphrases are tried in turn when loading the key.</p>",
    "module": "ngx_stream_proxy_module",
    "link": "stream/ngx_stream_proxy_module.html#proxy_ssl_password_file",
    "name": "proxy_ssl_password_file"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_ssl_protocols</strong> [<code>SSLv2</code>] [<code>SSLv3</code>] [<code>TLSv1</code>] [<code>TLSv1.1</code>] [<code>TLSv1.2</code>] [<code>TLSv1.3</code>];</code><br></td></tr><tr><th>Default:</th><td><pre>proxy_ssl_protocols TLSv1 TLSv1.1 TLSv1.2;</pre></td></tr><tr><th>Context:</th><td><code>stream</code>, <code>server</code><br></td></tr></tbody></table>",
    "doc": "<p>Enables the specified protocols for connections to a proxied server.</p>",
    "module": "ngx_stream_proxy_module",
    "link": "stream/ngx_stream_proxy_module.html#proxy_ssl_protocols",
    "name": "proxy_ssl_protocols"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_ssl_server_name</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>proxy_ssl_server_name off;</pre></td></tr><tr><th>Context:</th><td><code>stream</code>, <code>server</code><br></td></tr></tbody></table>",
    "doc": "<p>Enables or disables passing of the server name through <a href=\"http://en.wikipedia.org/wiki/Server_Name_Indication\">TLS Server Name Indication extension</a> (SNI, RFC 6066) when establishing a connection with the proxied server.</p>",
    "module": "ngx_stream_proxy_module",
    "link": "stream/ngx_stream_proxy_module.html#proxy_ssl_server_name",
    "name": "proxy_ssl_server_name"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_ssl_session_reuse</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>proxy_ssl_session_reuse on;</pre></td></tr><tr><th>Context:</th><td><code>stream</code>, <code>server</code><br></td></tr></tbody></table>",
    "doc": "<p>Determines whether SSL sessions can be reused when working with the proxied server. If the errors “<code>SSL3_GET_FINISHED:digest check failed</code>” appear in the logs, try disabling session reuse.</p>",
    "module": "ngx_stream_proxy_module",
    "link": "stream/ngx_stream_proxy_module.html#proxy_ssl_session_reuse",
    "name": "proxy_ssl_session_reuse"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_ssl_trusted_certificate</strong> <code><i>file</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>stream</code>, <code>server</code><br></td></tr></tbody></table>",
    "doc": "<p>Specifies a <code><i>file</i></code> with trusted CA certificates in the PEM format used to <a href=\"https://nginx.org/en/docs/stream/ngx_stream_proxy_module.html#proxy_ssl_verify\">verify</a> the certificate of the proxied server.</p>",
    "module": "ngx_stream_proxy_module",
    "link": "stream/ngx_stream_proxy_module.html#proxy_ssl_trusted_certificate",
    "name": "proxy_ssl_trusted_certificate"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_ssl_verify</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>proxy_ssl_verify off;</pre></td></tr><tr><th>Context:</th><td><code>stream</code>, <code>server</code><br></td></tr></tbody></table>",
    "doc": "<p>Enables or disables verification of the proxied server certificate.</p>",
    "module": "ngx_stream_proxy_module",
    "link": "stream/ngx_stream_proxy_module.html#proxy_ssl_verify",
    "name": "proxy_ssl_verify"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_ssl_verify_depth</strong> <code><i>number</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>proxy_ssl_verify_depth 1;</pre></td></tr><tr><th>Context:</th><td><code>stream</code>, <code>server</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets the verification depth in the proxied server certificates chain.</p>",
    "module": "ngx_stream_proxy_module",
    "link": "stream/ngx_stream_proxy_module.html#proxy_ssl_verify_depth",
    "name": "proxy_ssl_verify_depth"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_timeout</strong> <code><i>timeout</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>proxy_timeout 10m;</pre></td></tr><tr><th>Context:</th><td><code>stream</code>, <code>server</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets the <code><i>timeout</i></code> between two successive read or write operations on client or proxied server connections. If no data is transmitted within this time, the connection is closed.</p>",
    "module": "ngx_stream_proxy_module",
    "link": "stream/ngx_stream_proxy_module.html#proxy_timeout",
    "name": "proxy_timeout"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>proxy_upload_rate</strong> <code><i>rate</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>proxy_upload_rate 0;</pre></td></tr><tr><th>Context:</th><td><code>stream</code>, <code>server</code><br></td></tr></tbody></table><p>This directive appeared in version 1.9.3.</p>",
    "doc": "<p>Limits the speed of reading the data from the client. The <code><i>rate</i></code> is specified in bytes per second. The zero value disables rate limiting. The limit is set per a connection, so if the client simultaneously opens two connections, the overall rate will be twice as much as the specified limit.</p><p>Parameter value can contain variables (1.17.0). It may be useful in cases where rate should be limited depending on a certain condition:</p><blockquote class=\"example\"><pre>map $slow $rate {\n    1     4k;\n    2     8k;\n}\n\nproxy_upload_rate $rate;\n</pre></blockquote>",
    "module": "ngx_stream_proxy_module",
    "link": "stream/ngx_stream_proxy_module.html#proxy_upload_rate",
    "name": "proxy_upload_rate"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>set_real_ip_from</strong> <code><i>address</i></code> | <code><i>CIDR</i></code> | <code>unix:</code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>stream</code>, <code>server</code><br></td></tr></tbody></table>",
    "doc": "<p>Defines trusted addresses that are known to send correct replacement addresses. If the special value <code>unix:</code> is specified, all UNIX-domain sockets will be trusted.</p>",
    "module": "ngx_stream_realip_module",
    "link": "stream/ngx_stream_realip_module.html#set_real_ip_from",
    "name": "set_real_ip_from"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>return</strong> <code><i>value</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>server</code><br></td></tr></tbody></table>",
    "doc": "<p>Specifies a <code><i>value</i></code> to send to the client. The value can contain text, variables, and their combination.</p>",
    "module": "ngx_stream_return_module",
    "link": "stream/ngx_stream_return_module.html#return",
    "name": "return"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>set</strong> <code><i>$variable</i></code> <code><i>value</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>server</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets a <code><i>value</i></code> for the specified <code><i>variable</i></code>. The <code><i>value</i></code> can contain text, variables, and their combination.</p>",
    "module": "ngx_stream_set_module",
    "link": "stream/ngx_stream_set_module.html#set",
    "name": "set"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>split_clients</strong> <code><i>string</i></code> <code><i>$variable</i></code> { ... }</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>stream</code><br></td></tr></tbody></table>",
    "doc": "<p>Creates a variable for A/B testing, for example:</p><blockquote class=\"example\"><pre>split_clients \"${remote_addr}AAA\" $variant {\n               0.5%               .one;\n               2.0%               .two;\n               *                  \"\";\n}\n</pre></blockquote><p>The value of the original string is hashed using MurmurHash2. In the example given, hash values from 0 to 21474835 (0.5%) correspond to the value <code>\".one\"</code> of the <code>$variant</code> variable, hash values from 21474836 to 107374180 (2%) correspond to the value <code>\".two\"</code>, and hash values from 107374181 to 4294967295 correspond to the value <code>\"\"</code> (an empty string).</p>",
    "module": "ngx_stream_split_clients_module",
    "link": "stream/ngx_stream_split_clients_module.html#split_clients",
    "name": "split_clients"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>ssl_alpn</strong> <code><i>protocol</i></code> ...;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>stream</code>, <code>server</code><br></td></tr></tbody></table><p>This directive appeared in version 1.21.4.</p>",
    "doc": "<p>Specifies the list of supported <a href=\"https://datatracker.ietf.org/doc/html/rfc7301\">ALPN</a> protocols. One of the protocols must be <a href=\"https://nginx.org/en/docs/stream/ngx_stream_ssl_module.html#var_ssl_alpn_protocol\">negotiated</a> if the client uses ALPN:</p><blockquote class=\"example\"><pre>map $ssl_alpn_protocol $proxy {\n    h2                127.0.0.1:8001;\n    http/1.1          127.0.0.1:8002;\n}\n\nserver {\n    listen      12346;\n    proxy_pass  $proxy;\n    ssl_alpn    h2 http/1.1;\n}\n</pre></blockquote>",
    "module": "ngx_stream_ssl_module",
    "link": "stream/ngx_stream_ssl_module.html#ssl_alpn",
    "name": "ssl_alpn"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>ssl_certificate</strong> <code><i>file</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>stream</code>, <code>server</code><br></td></tr></tbody></table>",
    "doc": "<p>Specifies a <code><i>file</i></code> with the certificate in the PEM format for the given server. If intermediate certificates should be specified in addition to a primary certificate, they should be specified in the same file in the following order: the primary certificate comes first, then the intermediate certificates. A secret key in the PEM format may be placed in the same file.</p><p>Since version 1.11.0, this directive can be specified multiple times to load certificates of different types, for example, RSA and ECDSA:</p><blockquote class=\"example\"><pre>server {\n    listen              12345 ssl;\n\n    ssl_certificate     example.com.rsa.crt;\n    ssl_certificate_key example.com.rsa.key;\n\n    ssl_certificate     example.com.ecdsa.crt;\n    ssl_certificate_key example.com.ecdsa.key;\n\n    ...\n}\n</pre></blockquote><blockquote class=\"note\">Only OpenSSL 1.0.2 or higher supports separate certificate chains for different certificates. With older versions, only one certificate chain can be used.</blockquote><p>Since version 1.15.9, variables can be used in the <code><i>file</i></code> name when using OpenSSL 1.0.2 or higher:</p><blockquote class=\"example\"><pre>ssl_certificate     $ssl_server_name.crt;\nssl_certificate_key $ssl_server_name.key;\n</pre></blockquote><p>Note that using variables implies that a certificate will be loaded for each SSL handshake, and this may have a negative impact on performance.</p>",
    "module": "ngx_stream_ssl_module",
    "link": "stream/ngx_stream_ssl_module.html#ssl_certificate",
    "name": "ssl_certificate"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>ssl_certificate_key</strong> <code><i>file</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>stream</code>, <code>server</code><br></td></tr></tbody></table>",
    "doc": "<p>Specifies a <code><i>file</i></code> with the secret key in the PEM format for the given server.</p><p>The value <code>engine</code>:<code><i>name</i></code>:<code><i>id</i></code> can be specified instead of the <code><i>file</i></code>, which loads a secret key with a specified <code><i>id</i></code> from the OpenSSL engine <code><i>name</i></code>.</p>",
    "module": "ngx_stream_ssl_module",
    "link": "stream/ngx_stream_ssl_module.html#ssl_certificate_key",
    "name": "ssl_certificate_key"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>ssl_ciphers</strong> <code><i>ciphers</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>ssl_ciphers HIGH:!aNULL:!MD5;</pre></td></tr><tr><th>Context:</th><td><code>stream</code>, <code>server</code><br></td></tr></tbody></table>",
    "doc": "<p>Specifies the enabled ciphers. The ciphers are specified in the format understood by the OpenSSL library, for example:</p><blockquote class=\"example\"><pre>ssl_ciphers ALL:!aNULL:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP;\n</pre></blockquote><p>The full list can be viewed using the “<code>openssl ciphers</code>” command.</p>",
    "module": "ngx_stream_ssl_module",
    "link": "stream/ngx_stream_ssl_module.html#ssl_ciphers",
    "name": "ssl_ciphers"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>ssl_client_certificate</strong> <code><i>file</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>stream</code>, <code>server</code><br></td></tr></tbody></table><p>This directive appeared in version 1.11.8.</p>",
    "doc": "<p>Specifies a <code><i>file</i></code> with trusted CA certificates in the PEM format used to <a href=\"https://nginx.org/en/docs/stream/ngx_stream_ssl_module.html#ssl_verify_client\">verify</a> client certificates.</p><p>The list of certificates will be sent to clients. If this is not desired, the <a href=\"https://nginx.org/en/docs/stream/ngx_stream_ssl_module.html#ssl_trusted_certificate\">ssl_trusted_certificate</a> directive can be used.</p>",
    "module": "ngx_stream_ssl_module",
    "link": "stream/ngx_stream_ssl_module.html#ssl_client_certificate",
    "name": "ssl_client_certificate"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>ssl_conf_command</strong> <code><i>name</i></code> <code><i>value</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>stream</code>, <code>server</code><br></td></tr></tbody></table><p>This directive appeared in version 1.19.4.</p>",
    "doc": "<p>Sets arbitrary OpenSSL configuration <a href=\"https://www.openssl.org/docs/man1.1.1/man3/SSL_CONF_cmd.html\">commands</a>.</p><blockquote class=\"note\">The directive is supported when using OpenSSL 1.0.2 or higher.</blockquote><p>Several <code>ssl_conf_command</code> directives can be specified on the same level:</p><blockquote class=\"example\"><pre>ssl_conf_command Options PrioritizeChaCha;\nssl_conf_command Ciphersuites TLS_CHACHA20_POLY1305_SHA256;\n</pre></blockquote><p>These directives are inherited from the previous configuration level if and only if there are no <code>ssl_conf_command</code> directives defined on the current level.</p><blockquote class=\"note\">Note that configuring OpenSSL directly might result in unexpected behavior.</blockquote>",
    "module": "ngx_stream_ssl_module",
    "link": "stream/ngx_stream_ssl_module.html#ssl_conf_command",
    "name": "ssl_conf_command"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>ssl_crl</strong> <code><i>file</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>stream</code>, <code>server</code><br></td></tr></tbody></table><p>This directive appeared in version 1.11.8.</p>",
    "doc": "<p>Specifies a <code><i>file</i></code> with revoked certificates (CRL) in the PEM format used to <a href=\"https://nginx.org/en/docs/stream/ngx_stream_ssl_module.html#ssl_verify_client\">verify</a> client certificates.</p>",
    "module": "ngx_stream_ssl_module",
    "link": "stream/ngx_stream_ssl_module.html#ssl_crl",
    "name": "ssl_crl"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>ssl_dhparam</strong> <code><i>file</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>stream</code>, <code>server</code><br></td></tr></tbody></table>",
    "doc": "<p>Specifies a <code><i>file</i></code> with DH parameters for DHE ciphers.</p><p>By default no parameters are set, and therefore DHE ciphers will not be used.</p><blockquote class=\"note\">Prior to version 1.11.0, builtin parameters were used by default.</blockquote>",
    "module": "ngx_stream_ssl_module",
    "link": "stream/ngx_stream_ssl_module.html#ssl_dhparam",
    "name": "ssl_dhparam"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>ssl_ecdh_curve</strong> <code><i>curve</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>ssl_ecdh_curve auto;</pre></td></tr><tr><th>Context:</th><td><code>stream</code>, <code>server</code><br></td></tr></tbody></table>",
    "doc": "<p>Specifies a <code><i>curve</i></code> for ECDHE ciphers.</p><p>When using OpenSSL 1.0.2 or higher, it is possible to specify multiple curves (1.11.0), for example:</p><blockquote class=\"example\"><pre>ssl_ecdh_curve prime256v1:secp384r1;\n</pre></blockquote><p>The special value <code>auto</code> (1.11.0) instructs nginx to use a list built into the OpenSSL library when using OpenSSL 1.0.2 or higher, or <code>prime256v1</code> with older versions.</p><blockquote class=\"note\">Prior to version 1.11.0, the <code>prime256v1</code> curve was used by default.</blockquote><blockquote class=\"note\">When using OpenSSL 1.0.2 or higher, this directive sets the list of curves supported by the server. Thus, in order for ECDSA certificates to work, it is important to include the curves used in the certificates.</blockquote>",
    "module": "ngx_stream_ssl_module",
    "link": "stream/ngx_stream_ssl_module.html#ssl_ecdh_curve",
    "name": "ssl_ecdh_curve"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>ssl_handshake_timeout</strong> <code><i>time</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>ssl_handshake_timeout 60s;</pre></td></tr><tr><th>Context:</th><td><code>stream</code>, <code>server</code><br></td></tr></tbody></table>",
    "doc": "<p>Specifies a timeout for the SSL handshake to complete.</p>",
    "module": "ngx_stream_ssl_module",
    "link": "stream/ngx_stream_ssl_module.html#ssl_handshake_timeout",
    "name": "ssl_handshake_timeout"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>ssl_password_file</strong> <code><i>file</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>stream</code>, <code>server</code><br></td></tr></tbody></table>",
    "doc": "<p>Specifies a <code><i>file</i></code> with passphrases for <a href=\"https://nginx.org/en/docs/stream/ngx_stream_ssl_module.html#ssl_certificate_key\">secret keys</a> where each passphrase is specified on a separate line. Passphrases are tried in turn when loading the key.</p><p>Example:</p><blockquote class=\"example\"><pre>stream {\n    ssl_password_file /etc/keys/global.pass;\n    ...\n\n    server {\n        listen 127.0.0.1:12345;\n        ssl_certificate_key /etc/keys/first.key;\n    }\n\n    server {\n        listen 127.0.0.1:12346;\n\n        # named pipe can also be used instead of a file\n        ssl_password_file /etc/keys/fifo;\n        ssl_certificate_key /etc/keys/second.key;\n    }\n}\n</pre></blockquote>",
    "module": "ngx_stream_ssl_module",
    "link": "stream/ngx_stream_ssl_module.html#ssl_password_file",
    "name": "ssl_password_file"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>ssl_prefer_server_ciphers</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>ssl_prefer_server_ciphers off;</pre></td></tr><tr><th>Context:</th><td><code>stream</code>, <code>server</code><br></td></tr></tbody></table>",
    "doc": "<p>Specifies that server ciphers should be preferred over client ciphers when the SSLv3 and TLS protocols are used.</p>",
    "module": "ngx_stream_ssl_module",
    "link": "stream/ngx_stream_ssl_module.html#ssl_prefer_server_ciphers",
    "name": "ssl_prefer_server_ciphers"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>ssl_protocols</strong> [<code>SSLv2</code>] [<code>SSLv3</code>] [<code>TLSv1</code>] [<code>TLSv1.1</code>] [<code>TLSv1.2</code>] [<code>TLSv1.3</code>];</code><br></td></tr><tr><th>Default:</th><td><pre>ssl_protocols TLSv1 TLSv1.1 TLSv1.2;</pre></td></tr><tr><th>Context:</th><td><code>stream</code>, <code>server</code><br></td></tr></tbody></table>",
    "doc": "<p>Enables the specified protocols.</p><blockquote class=\"note\">The <code>TLSv1.1</code> and <code>TLSv1.2</code> parameters work only when OpenSSL 1.0.1 or higher is used.</blockquote><blockquote class=\"note\">The <code>TLSv1.3</code> parameter (1.13.0) works only when OpenSSL 1.1.1 or higher is used.</blockquote>",
    "module": "ngx_stream_ssl_module",
    "link": "stream/ngx_stream_ssl_module.html#ssl_protocols",
    "name": "ssl_protocols"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>ssl_session_cache</strong> <code>off</code> | <code>none</code> | [<code>builtin</code>[:<code><i>size</i></code>]] [<code>shared</code>:<code><i>name</i></code>:<code><i>size</i></code>];</code><br></td></tr><tr><th>Default:</th><td><pre>ssl_session_cache none;</pre></td></tr><tr><th>Context:</th><td><code>stream</code>, <code>server</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets the types and sizes of caches that store session parameters. A cache can be of any of the following types:</p><dl class=\"compact\"><dt><code>off</code></dt><dd>the use of a session cache is strictly prohibited: nginx explicitly tells a client that sessions may not be reused.</dd><dt><code>none</code></dt><dd>the use of a session cache is gently disallowed: nginx tells a client that sessions may be reused, but does not actually store session parameters in the cache.</dd><dt id=\"ssl_session_cache_builtin\"><code>builtin</code></dt><dd>a cache built in OpenSSL; used by one worker process only. The cache size is specified in sessions. If size is not given, it is equal to 20480 sessions. Use of the built-in cache can cause memory fragmentation.</dd><dt id=\"ssl_session_cache_shared\"><code>shared</code></dt><dd>a cache shared between all worker processes. The cache size is specified in bytes; one megabyte can store about 4000 sessions. Each shared cache should have an arbitrary name. A cache with the same name can be used in several servers.</dd></dl><p>Both cache types can be used simultaneously, for example:</p><blockquote class=\"example\"><pre>ssl_session_cache builtin:1000 shared:SSL:10m;\n</pre></blockquote><p>but using only shared cache without the built-in cache should be more efficient.</p>",
    "module": "ngx_stream_ssl_module",
    "link": "stream/ngx_stream_ssl_module.html#ssl_session_cache",
    "name": "ssl_session_cache"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>ssl_session_ticket_key</strong> <code><i>file</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>stream</code>, <code>server</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets a <code><i>file</i></code> with the secret key used to encrypt and decrypt TLS session tickets. The directive is necessary if the same key has to be shared between multiple servers. By default, a randomly generated key is used.</p><p>If several keys are specified, only the first key is used to encrypt TLS session tickets. This allows configuring key rotation, for example:</p><blockquote class=\"example\"><pre>ssl_session_ticket_key current.key;\nssl_session_ticket_key previous.key;\n</pre></blockquote><p>The <code><i>file</i></code> must contain 80 or 48 bytes of random data and can be created using the following command:</p><blockquote class=\"example\"><pre>openssl rand 80 &gt; ticket.key\n</pre></blockquote><p>Depending on the file size either AES256 (for 80-byte keys, 1.11.8) or AES128 (for 48-byte keys) is used for encryption.</p>",
    "module": "ngx_stream_ssl_module",
    "link": "stream/ngx_stream_ssl_module.html#ssl_session_ticket_key",
    "name": "ssl_session_ticket_key"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>ssl_session_tickets</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>ssl_session_tickets on;</pre></td></tr><tr><th>Context:</th><td><code>stream</code>, <code>server</code><br></td></tr></tbody></table>",
    "doc": "<p>Enables or disables session resumption through <a href=\"https://datatracker.ietf.org/doc/html/rfc5077\">TLS session tickets</a>.</p>",
    "module": "ngx_stream_ssl_module",
    "link": "stream/ngx_stream_ssl_module.html#ssl_session_tickets",
    "name": "ssl_session_tickets"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>ssl_session_timeout</strong> <code><i>time</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>ssl_session_timeout 5m;</pre></td></tr><tr><th>Context:</th><td><code>stream</code>, <code>server</code><br></td></tr></tbody></table>",
    "doc": "<p>Specifies a time during which a client may reuse the session parameters.</p>",
    "module": "ngx_stream_ssl_module",
    "link": "stream/ngx_stream_ssl_module.html#ssl_session_timeout",
    "name": "ssl_session_timeout"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>ssl_trusted_certificate</strong> <code><i>file</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>stream</code>, <code>server</code><br></td></tr></tbody></table><p>This directive appeared in version 1.11.8.</p>",
    "doc": "<p>Specifies a <code><i>file</i></code> with trusted CA certificates in the PEM format used to <a href=\"https://nginx.org/en/docs/stream/ngx_stream_ssl_module.html#ssl_verify_client\">verify</a> client certificates.</p><p>In contrast to the certificate set by <a href=\"https://nginx.org/en/docs/stream/ngx_stream_ssl_module.html#ssl_client_certificate\">ssl_client_certificate</a>, the list of these certificates will not be sent to clients.</p>",
    "module": "ngx_stream_ssl_module",
    "link": "stream/ngx_stream_ssl_module.html#ssl_trusted_certificate",
    "name": "ssl_trusted_certificate"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>ssl_verify_client</strong> <code>on</code> | <code>off</code> | <code>optional</code> | <code>optional_no_ca</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>ssl_verify_client off;</pre></td></tr><tr><th>Context:</th><td><code>stream</code>, <code>server</code><br></td></tr></tbody></table><p>This directive appeared in version 1.11.8.</p>",
    "doc": "<p>Enables verification of client certificates. The verification result is stored in the <a href=\"https://nginx.org/en/docs/stream/ngx_stream_ssl_module.html#var_ssl_client_verify\">$ssl_client_verify</a> variable. If an error has occurred during the client certificate verification or a client has not presented the required certificate, the connection is closed.</p><p>The <code>optional</code> parameter requests the client certificate and verifies it if the certificate is present.</p><p>The <code>optional_no_ca</code> parameter requests the client certificate but does not require it to be signed by a trusted CA certificate. This is intended for the use in cases when a service that is external to nginx performs the actual certificate verification. The contents of the certificate is accessible through the <a href=\"https://nginx.org/en/docs/stream/ngx_stream_ssl_module.html#var_ssl_client_cert\">$ssl_client_cert</a> variable.</p>",
    "module": "ngx_stream_ssl_module",
    "link": "stream/ngx_stream_ssl_module.html#ssl_verify_client",
    "name": "ssl_verify_client"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>ssl_verify_depth</strong> <code><i>number</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>ssl_verify_depth 1;</pre></td></tr><tr><th>Context:</th><td><code>stream</code>, <code>server</code><br></td></tr></tbody></table><p>This directive appeared in version 1.11.8.</p>",
    "doc": "<p>Sets the verification depth in the client certificates chain.</p>",
    "module": "ngx_stream_ssl_module",
    "link": "stream/ngx_stream_ssl_module.html#ssl_verify_depth",
    "name": "ssl_verify_depth"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>ssl_preread</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>ssl_preread off;</pre></td></tr><tr><th>Context:</th><td><code>stream</code>, <code>server</code><br></td></tr></tbody></table>",
    "doc": "<p>Enables extracting information from the ClientHello message at the <a href=\"https://nginx.org/en/docs/stream/stream_processing.html#preread_phase\">preread</a> phase.</p>",
    "module": "ngx_stream_ssl_preread_module",
    "link": "stream/ngx_stream_ssl_preread_module.html#ssl_preread",
    "name": "ssl_preread"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>upstream</strong> <code><i>name</i></code> { ... }</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>stream</code><br></td></tr></tbody></table>",
    "doc": "<p>Defines a group of servers. Servers can listen on different ports. In addition, servers listening on TCP and UNIX-domain sockets can be mixed.</p><p>Example:</p><blockquote class=\"example\"><pre>upstream backend {\n    server backend1.example.com:12345 weight=5;\n    server 127.0.0.1:12345            max_fails=3 fail_timeout=30s;\n    server unix:/tmp/backend2;\n    server backend3.example.com:12345 resolve;\n\n    server backup1.example.com:12345  backup;\n}\n</pre></blockquote><p>By default, connections are distributed between the servers using a weighted round-robin balancing method. In the above example, each 7 connections will be distributed as follows: 5 connections go to <code>backend1.example.com:12345</code> and one connection to each of the second and third servers. If an error occurs during communication with a server, the connection will be passed to the next server, and so on until all of the functioning servers will be tried. If communication with all servers fails, the connection will be closed.</p>",
    "module": "ngx_stream_upstream_module",
    "link": "stream/ngx_stream_upstream_module.html#upstream",
    "name": "upstream"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>server</strong> <code><i>address</i></code> [<code><i>parameters</i></code>];</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>upstream</code><br></td></tr></tbody></table>",
    "doc": "<p>Defines the <code><i>address</i></code> and other <code><i>parameters</i></code> of a server. The address can be specified as a domain name or IP address with an obligatory port, or as a UNIX-domain socket path specified after the “<code>unix:</code>” prefix. A domain name that resolves to several IP addresses defines multiple servers at once.</p><p>The following parameters can be defined:</p><dl class=\"compact\"><dt id=\"weight\"><code>weight</code>=<code><i>number</i></code></dt><dd>sets the weight of the server, by default, 1.</dd><dt id=\"max_conns\"><code>max_conns</code>=<code><i>number</i></code></dt><dd>limits the maximum <code><i>number</i></code> of simultaneous connections to the proxied server (1.11.5). Default value is zero, meaning there is no limit. If the server group does not reside in the <a href=\"https://nginx.org/en/docs/stream/ngx_stream_upstream_module.html#zone\">shared memory</a>, the limitation works per each worker process.<blockquote class=\"note\">Prior to version 1.11.5, this parameter was available as part of our <a href=\"http://nginx.com/products/\">commercial subscription</a>.</blockquote></dd><dt id=\"max_fails\"><code>max_fails</code>=<code><i>number</i></code></dt><dd>sets the number of unsuccessful attempts to communicate with the server that should happen in the duration set by the <code>fail_timeout</code> parameter to consider the server unavailable for a duration also set by the <code>fail_timeout</code> parameter. By default, the number of unsuccessful attempts is set to 1. The zero value disables the accounting of attempts. Here, an unsuccessful attempt is an error or timeout while establishing a connection with the server.</dd><dt id=\"fail_timeout\"><code>fail_timeout</code>=<code><i>time</i></code></dt><dd>sets<ul class=\"compact\"><li>the time during which the specified number of unsuccessful attempts to communicate with the server should happen to consider the server unavailable;</li><li>and the period of time the server will be considered unavailable.</li></ul>By default, the parameter is set to 10 seconds.</dd><dt id=\"backup\"><code>backup</code></dt><dd>marks the server as a backup server. Connections to the backup server will be passed when the primary servers are unavailable.<blockquote class=\"note\">The parameter cannot be used along with the <a href=\"https://nginx.org/en/docs/stream/ngx_stream_upstream_module.html#hash\">hash</a> and <a href=\"https://nginx.org/en/docs/stream/ngx_stream_upstream_module.html#random\">random</a> load balancing methods.</blockquote></dd><dt id=\"down\"><code>down</code></dt><dd>marks the server as permanently unavailable.</dd></dl><p>Additionally, the following parameters are available as part of our <a href=\"http://nginx.com/products/\">commercial subscription</a>:</p><dl class=\"compact\"><dt id=\"resolve\"><code>resolve</code></dt><dd>monitors changes of the IP addresses that correspond to a domain name of the server, and automatically modifies the upstream configuration without the need of restarting nginx. The server group must reside in the <a href=\"https://nginx.org/en/docs/stream/ngx_stream_upstream_module.html#zone\">shared memory</a>.<p>In order for this parameter to work, the <code>resolver</code> directive must be specified in the <a href=\"https://nginx.org/en/docs/stream/ngx_stream_core_module.html#resolver\">stream</a> block or in the corresponding <a href=\"https://nginx.org/en/docs/stream/ngx_stream_upstream_module.html#resolver\">upstream</a> block.</p></dd><dt id=\"service\"><code>service</code>=<code><i>name</i></code></dt><dd>enables resolving of DNS <a href=\"https://datatracker.ietf.org/doc/html/rfc2782\">SRV</a> records and sets the service <code><i>name</i></code> (1.9.13). In order for this parameter to work, it is necessary to specify the <a href=\"https://nginx.org/en/docs/stream/ngx_stream_upstream_module.html#resolve\">resolve</a> parameter for the server and specify a hostname without a port number.<p>If the service name does not contain a dot (“<code>.</code>”), then the <a href=\"https://datatracker.ietf.org/doc/html/rfc2782\">RFC</a>-compliant name is constructed and the TCP protocol is added to the service prefix. For example, to look up the <code>_http._tcp.backend.example.com</code> SRV record, it is necessary to specify the directive:</p><blockquote class=\"example\"><pre>server backend.example.com service=http resolve;\n</pre></blockquote><p>If the service name contains one or more dots, then the name is constructed by joining the service prefix and the server name. For example, to look up the <code>_http._tcp.backend.example.com</code> and <code>server1.backend.example.com</code> SRV records, it is necessary to specify the directives:</p><blockquote class=\"example\"><pre>server backend.example.com service=_http._tcp resolve;\nserver example.com service=server1.backend resolve;\n</pre></blockquote><p></p><p>Highest-priority SRV records (records with the same lowest-number priority value) are resolved as primary servers, the rest of SRV records are resolved as backup servers. If the <a href=\"https://nginx.org/en/docs/stream/ngx_stream_upstream_module.html#backup\">backup</a> parameter is specified for the server, high-priority SRV records are resolved as backup servers, the rest of SRV records are ignored.</p></dd><dt id=\"slow_start\"><code>slow_start</code>=<code><i>time</i></code></dt><dd>sets the <code><i>time</i></code> during which the server will recover its weight from zero to a nominal value, when unhealthy server becomes <a href=\"https://nginx.org/en/docs/stream/ngx_stream_upstream_hc_module.html#health_check\">healthy</a>, or when the server becomes available after a period of time it was considered <a href=\"https://nginx.org/en/docs/stream/ngx_stream_upstream_module.html#fail_timeout\">unavailable</a>. Default value is zero, i.e. slow start is disabled.<blockquote class=\"note\">The parameter cannot be used along with the <a href=\"https://nginx.org/en/docs/stream/ngx_stream_upstream_module.html#hash\">hash</a> and <a href=\"https://nginx.org/en/docs/stream/ngx_stream_upstream_module.html#random\">random</a> load balancing methods.</blockquote></dd></dl><blockquote class=\"note\">If there is only a single server in a group, <code>max_fails</code>, <code>fail_timeout</code> and <code>slow_start</code> parameters are ignored, and such a server will never be considered unavailable.</blockquote>",
    "module": "ngx_stream_upstream_module",
    "link": "stream/ngx_stream_upstream_module.html#server",
    "name": "server"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>zone</strong> <code><i>name</i></code> [<code><i>size</i></code>];</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>upstream</code><br></td></tr></tbody></table>",
    "doc": "<p>Defines the <code><i>name</i></code> and <code><i>size</i></code> of the shared memory zone that keeps the group’s configuration and run-time state that are shared between worker processes. Several groups may share the same zone. In this case, it is enough to specify the <code><i>size</i></code> only once.</p><p>Additionally, as part of our <a href=\"http://nginx.com/products/\">commercial subscription</a>, such groups allow changing the group membership or modifying the settings of a particular server without the need of restarting nginx. The configuration is accessible via the <a href=\"https://nginx.org/en/docs/http/ngx_http_api_module.html\">API</a> module (1.13.3).</p><blockquote class=\"note\">Prior to version 1.13.3, the configuration was accessible only via a special location handled by <a href=\"https://nginx.org/en/docs/http/ngx_http_upstream_conf_module.html#upstream_conf\">upstream_conf</a>.</blockquote>",
    "module": "ngx_stream_upstream_module",
    "link": "stream/ngx_stream_upstream_module.html#zone",
    "name": "zone"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>state</strong> <code><i>file</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>upstream</code><br></td></tr></tbody></table><p>This directive appeared in version 1.9.7.</p>",
    "doc": "<p>Specifies a <code><i>file</i></code> that keeps the state of the dynamically configurable group.</p><p>Examples:</p><blockquote class=\"example\"><pre>state /var/lib/nginx/state/servers.conf; # path for Linux\nstate /var/db/nginx/state/servers.conf;  # path for FreeBSD\n</pre></blockquote><p>The state is currently limited to the list of servers with their parameters. The file is read when parsing the configuration and is updated each time the upstream configuration is <a href=\"https://nginx.org/en/docs/http/ngx_http_api_module.html#stream_upstreams_stream_upstream_name_servers_\">changed</a>. Changing the file content directly should be avoided. The directive cannot be used along with the <a href=\"https://nginx.org/en/docs/stream/ngx_stream_upstream_module.html#server\">server</a> directive.</p><blockquote class=\"note\">Changes made during <a href=\"https://nginx.org/en/docs/control.html#reconfiguration\">configuration reload</a> or <a href=\"https://nginx.org/en/docs/control.html#upgrade\">binary upgrade</a> can be lost.</blockquote><blockquote class=\"note\">This directive is available as part of our <a href=\"http://nginx.com/products/\">commercial subscription</a>.</blockquote>",
    "module": "ngx_stream_upstream_module",
    "link": "stream/ngx_stream_upstream_module.html#state",
    "name": "state"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>hash</strong> <code><i>key</i></code> [<code>consistent</code>];</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>upstream</code><br></td></tr></tbody></table>",
    "doc": "<p>Specifies a load balancing method for a server group where the client-server mapping is based on the hashed <code><i>key</i></code> value. The <code><i>key</i></code> can contain text, variables, and their combinations (1.11.2). Usage example:</p><blockquote class=\"example\"><pre>hash $remote_addr;\n</pre></blockquote><p>Note that adding or removing a server from the group may result in remapping most of the keys to different servers. The method is compatible with the <a href=\"https://metacpan.org/pod/Cache::Memcached\">Cache::Memcached</a> Perl library.</p><p>If the <code>consistent</code> parameter is specified, the <a href=\"https://www.metabrew.com/article/libketama-consistent-hashing-algo-memcached-clients\">ketama</a> consistent hashing method will be used instead. The method ensures that only a few keys will be remapped to different servers when a server is added to or removed from the group. This helps to achieve a higher cache hit ratio for caching servers. The method is compatible with the <a href=\"https://metacpan.org/pod/Cache::Memcached::Fast\">Cache::Memcached::Fast</a> Perl library with the <code><i>ketama_points</i></code> parameter set to 160.</p>",
    "module": "ngx_stream_upstream_module",
    "link": "stream/ngx_stream_upstream_module.html#hash",
    "name": "hash"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>least_conn</strong>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>upstream</code><br></td></tr></tbody></table>",
    "doc": "<p>Specifies that a group should use a load balancing method where a connection is passed to the server with the least number of active connections, taking into account weights of servers. If there are several such servers, they are tried in turn using a weighted round-robin balancing method.</p>",
    "module": "ngx_stream_upstream_module",
    "link": "stream/ngx_stream_upstream_module.html#least_conn",
    "name": "least_conn"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>least_time</strong> <code>connect</code> | <code>first_byte</code> | <code>last_byte</code> [<code>inflight</code>];</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>upstream</code><br></td></tr></tbody></table>",
    "doc": "<p>Specifies that a group should use a load balancing method where a connection is passed to the server with the least average time and least number of active connections, taking into account weights of servers. If there are several such servers, they are tried in turn using a weighted round-robin balancing method.</p><p>If the <code>connect</code> parameter is specified, time to <a href=\"https://nginx.org/en/docs/stream/ngx_stream_upstream_module.html#var_upstream_connect_time\">connect</a> to the upstream server is used. If the <code>first_byte</code> parameter is specified, time to receive the <a href=\"https://nginx.org/en/docs/stream/ngx_stream_upstream_module.html#var_upstream_first_byte_time\">first byte</a> of data is used. If the <code>last_byte</code> is specified, time to receive the <a href=\"https://nginx.org/en/docs/stream/ngx_stream_upstream_module.html#var_upstream_session_time\">last byte</a> of data is used. If the <code>inflight</code> parameter is specified (1.11.6), incomplete connections are also taken into account.</p><blockquote class=\"note\">Prior to version 1.11.6, incomplete connections were taken into account by default.</blockquote><blockquote class=\"note\">This directive is available as part of our <a href=\"http://nginx.com/products/\">commercial subscription</a>.</blockquote>",
    "module": "ngx_stream_upstream_module",
    "link": "stream/ngx_stream_upstream_module.html#least_time",
    "name": "least_time"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>random</strong> [<code>two</code> [<code><i>method</i></code>]];</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>upstream</code><br></td></tr></tbody></table><p>This directive appeared in version 1.15.1.</p>",
    "doc": "<p>Specifies that a group should use a load balancing method where a connection is passed to a randomly selected server, taking into account weights of servers.</p><p>The optional <code>two</code> parameter instructs nginx to randomly select <a href=\"https://homes.cs.washington.edu/~karlin/papers/balls.pdf\">two</a> servers and then choose a server using the specified <code>method</code>. The default method is <code>least_conn</code> which passes a connection to a server with the least number of active connections.</p>",
    "module": "ngx_stream_upstream_module",
    "link": "stream/ngx_stream_upstream_module.html#random",
    "name": "random"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>resolver</strong> <code><i>address</i></code> ... [<code>valid</code>=<code><i>time</i></code>] [<code>ipv6</code>=<code>on</code>|<code>off</code>] [<code>status_zone</code>=<code><i>zone</i></code>];</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>upstream</code><br></td></tr></tbody></table><p>This directive appeared in version 1.17.5.</p>",
    "doc": "<p>Configures name servers used to resolve names of upstream servers into addresses, for example:</p><blockquote class=\"example\"><pre>resolver 127.0.0.1 [::1]:5353;\n</pre></blockquote><p>The address can be specified as a domain name or IP address, with an optional port. If port is not specified, the port 53 is used. Name servers are queried in a round-robin fashion.</p>",
    "module": "ngx_stream_upstream_module",
    "link": "stream/ngx_stream_upstream_module.html#resolver",
    "name": "resolver"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>resolver_timeout</strong> <code><i>time</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>resolver_timeout 30s;</pre></td></tr><tr><th>Context:</th><td><code>upstream</code><br></td></tr></tbody></table><p>This directive appeared in version 1.17.5.</p>",
    "doc": "<p>Sets a timeout for name resolution, for example:</p><blockquote class=\"example\"><pre>resolver_timeout 5s;\n</pre></blockquote><blockquote class=\"note\">This directive is available as part of our <a href=\"http://nginx.com/products/\">commercial subscription</a>.</blockquote>",
    "module": "ngx_stream_upstream_module",
    "link": "stream/ngx_stream_upstream_module.html#resolver_timeout",
    "name": "resolver_timeout"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>health_check</strong> [<code><i>parameters</i></code>];</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>server</code><br></td></tr></tbody></table>",
    "doc": "<p>Enables periodic health checks of the servers in a <a href=\"https://nginx.org/en/docs/stream/ngx_stream_upstream_module.html#upstream\">group</a>.</p><p>The following optional parameters are supported:</p><dl class=\"compact\"><dt id=\"health_check_interval\"><code>interval</code>=<code><i>time</i></code></dt><dd>sets the interval between two consecutive health checks, by default, 5 seconds.</dd><dt id=\"health_check_jitter\"><code>jitter</code>=<code><i>time</i></code></dt><dd>sets the time within which each health check will be randomly delayed, by default, there is no delay.</dd><dt id=\"health_check_fails\"><code>fails</code>=<code><i>number</i></code></dt><dd>sets the number of consecutive failed health checks of a particular server after which this server will be considered unhealthy, by default, 1.</dd><dt id=\"health_check_passes\"><code>passes</code>=<code><i>number</i></code></dt><dd>sets the number of consecutive passed health checks of a particular server after which the server will be considered healthy, by default, 1.</dd><dt id=\"health_check_mandatory\"><code>mandatory</code> [<code>persistent</code>]</dt><dd><p>sets the initial “checking” state for a server until the first health check is completed (1.11.7). Client connections are not passed to servers in the “checking” state. If the parameter is not specified, the server will be initially considered healthy.</p><a name=\"health_check_persistent\"></a><p>The <code>persistent</code> parameter (1.21.1) sets the initial “up” state for a server after reload if the server was considered healthy before reload.</p></dd><dt id=\"health_check_match\"><code>match</code>=<code><i>name</i></code></dt><dd>specifies the <code>match</code> block configuring the tests that a successful connection should pass in order for a health check to pass. By default, for TCP, only the ability to establish a TCP connection with the server is checked. For <a href=\"https://nginx.org/en/docs/stream/ngx_stream_upstream_hc_module.html#health_check_udp\">UDP</a>, the absence of ICMP “<code>Destination Unreachable</code>” message is expected in reply to the sent string “<code>nginx health check</code>”.<blockquote class=\"note\">Prior to version 1.11.7, by default, UDP health check required a <a href=\"https://nginx.org/en/docs/stream/ngx_stream_upstream_hc_module.html#hc_match\">match</a> block with the <a href=\"https://nginx.org/en/docs/stream/ngx_stream_upstream_hc_module.html#match_send\">send</a> and <a href=\"https://nginx.org/en/docs/stream/ngx_stream_upstream_hc_module.html#match_expect\">expect</a> parameters.</blockquote></dd><dt id=\"health_check_port\"><code>port</code>=<code><i>number</i></code></dt><dd>defines the port used when connecting to a server to perform a health check (1.9.7). By default, equals the <a href=\"https://nginx.org/en/docs/stream/ngx_stream_upstream_module.html#server\">server</a> port.</dd><dt id=\"health_check_udp\"><code>udp</code></dt><dd>specifies that the <code>UDP</code> protocol should be used for health checks instead of the default <code>TCP</code> protocol (1.9.13).</dd></dl>",
    "module": "ngx_stream_upstream_hc_module",
    "link": "stream/ngx_stream_upstream_hc_module.html#health_check",
    "name": "health_check"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>health_check_timeout</strong> <code><i>timeout</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>health_check_timeout 5s;</pre></td></tr><tr><th>Context:</th><td><code>stream</code>, <code>server</code><br></td></tr></tbody></table>",
    "doc": "<p>Overrides the <a href=\"https://nginx.org/en/docs/stream/ngx_stream_proxy_module.html#proxy_timeout\">proxy_timeout</a> value for health checks.</p>",
    "module": "ngx_stream_upstream_hc_module",
    "link": "stream/ngx_stream_upstream_hc_module.html#health_check_timeout",
    "name": "health_check_timeout"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>match</strong> <code><i>name</i></code> { ... }</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>stream</code><br></td></tr></tbody></table>",
    "doc": "<p>Defines the named test set used to verify server responses to health checks.</p><p>The following parameters can be configured:</p><dl class=\"compact\"><dt id=\"match_send\"><code>send</code> <code><i>string</i></code>;</dt><dd>sends a <code><i>string</i></code> to the server;</dd><dt id=\"match_expect\"><code>expect</code> <code><i>string</i></code> | <code>~</code> <code><i>regex</i></code>;</dt><dd>a literal string (1.9.12) or a regular expression that the data obtained from the server should match. The regular expression is specified with the preceding “<code>~*</code>” modifier (for case-insensitive matching), or the “<code>~</code>” modifier (for case-sensitive matching).</dd></dl><p>Both <code>send</code> and <code>expect</code> parameters can contain hexadecimal literals with the prefix “<code>\\x</code>” followed by two hex digits, for example, “<code>\\x80</code>” (1.9.12).</p><p>Health check is passed if:</p>",
    "module": "ngx_stream_upstream_hc_module",
    "link": "stream/ngx_stream_upstream_hc_module.html#match",
    "name": "match"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>zone_sync</strong>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>server</code><br></td></tr></tbody></table>",
    "doc": "<p>Enables the synchronization of shared memory zones between cluster nodes. Cluster nodes are defined using <a href=\"https://nginx.org/en/docs/stream/ngx_stream_zone_sync_module.html#zone_sync_server\">zone_sync_server</a> directives.</p>",
    "module": "ngx_stream_zone_sync_module",
    "link": "stream/ngx_stream_zone_sync_module.html#zone_sync",
    "name": "zone_sync"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>zone_sync_buffers</strong> <code><i>number</i></code> <code><i>size</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>zone_sync_buffers 8 4k|8k;</pre></td></tr><tr><th>Context:</th><td><code>stream</code>, <code>server</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets the <code><i>number</i></code> and <code><i>size</i></code> of the per-zone buffers used for pushing zone contents. By default, the buffer size is equal to one memory page. This is either 4K or 8K, depending on a platform.</p><blockquote class=\"note\">A single buffer must be large enough to hold any entry of each zone being synchronized.</blockquote>",
    "module": "ngx_stream_zone_sync_module",
    "link": "stream/ngx_stream_zone_sync_module.html#zone_sync_buffers",
    "name": "zone_sync_buffers"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>zone_sync_connect_retry_interval</strong> <code><i>time</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>zone_sync_connect_retry_interval 1s;</pre></td></tr><tr><th>Context:</th><td><code>stream</code>, <code>server</code><br></td></tr></tbody></table>",
    "doc": "<p>Defines an interval between connection attempts to another cluster node.</p>",
    "module": "ngx_stream_zone_sync_module",
    "link": "stream/ngx_stream_zone_sync_module.html#zone_sync_connect_retry_interval",
    "name": "zone_sync_connect_retry_interval"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>zone_sync_connect_timeout</strong> <code><i>time</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>zone_sync_connect_timeout 5s;</pre></td></tr><tr><th>Context:</th><td><code>stream</code>, <code>server</code><br></td></tr></tbody></table>",
    "doc": "<p>Defines a timeout for establishing a connection with another cluster node.</p>",
    "module": "ngx_stream_zone_sync_module",
    "link": "stream/ngx_stream_zone_sync_module.html#zone_sync_connect_timeout",
    "name": "zone_sync_connect_timeout"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>zone_sync_interval</strong> <code><i>time</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>zone_sync_interval 1s;</pre></td></tr><tr><th>Context:</th><td><code>stream</code>, <code>server</code><br></td></tr></tbody></table>",
    "doc": "<p>Defines an interval for polling updates in a shared memory zone.</p>",
    "module": "ngx_stream_zone_sync_module",
    "link": "stream/ngx_stream_zone_sync_module.html#zone_sync_interval",
    "name": "zone_sync_interval"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>zone_sync_recv_buffer_size</strong> <code><i>size</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>zone_sync_recv_buffer_size 4k|8k;</pre></td></tr><tr><th>Context:</th><td><code>stream</code>, <code>server</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets <code><i>size</i></code> of a per-connection receive buffer used to parse incoming stream of synchronization messages. The buffer size must be equal or greater than one of the <a href=\"https://nginx.org/en/docs/stream/ngx_stream_zone_sync_module.html#zone_sync_buffers\">zone_sync_buffers</a>. By default, the buffer size is equal to <a href=\"https://nginx.org/en/docs/stream/ngx_stream_zone_sync_module.html#zone_sync_buffers\">zone_sync_buffers</a> <code><i>size</i></code> multiplied by <code><i>number</i></code>.</p>",
    "module": "ngx_stream_zone_sync_module",
    "link": "stream/ngx_stream_zone_sync_module.html#zone_sync_recv_buffer_size",
    "name": "zone_sync_recv_buffer_size"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>zone_sync_server</strong> <code><i>address</i></code> [<code>resolve</code>];</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>server</code><br></td></tr></tbody></table>",
    "doc": "<p>Defines the <code><i>address</i></code> of a cluster node. The address can be specified as a domain name or IP address with a mandatory port, or as a UNIX-domain socket path specified after the “<code>unix:</code>” prefix. A domain name that resolves to several IP addresses defines multiple nodes at once.</p>",
    "module": "ngx_stream_zone_sync_module",
    "link": "stream/ngx_stream_zone_sync_module.html#zone_sync_server",
    "name": "zone_sync_server"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>zone_sync_ssl</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>zone_sync_ssl off;</pre></td></tr><tr><th>Context:</th><td><code>stream</code>, <code>server</code><br></td></tr></tbody></table>",
    "doc": "<p>Enables the SSL/TLS protocol for connections to another cluster server.</p>",
    "module": "ngx_stream_zone_sync_module",
    "link": "stream/ngx_stream_zone_sync_module.html#zone_sync_ssl",
    "name": "zone_sync_ssl"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>zone_sync_ssl_certificate</strong> <code><i>file</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>stream</code>, <code>server</code><br></td></tr></tbody></table>",
    "doc": "<p>Specifies a <code><i>file</i></code> with the certificate in the PEM format used for authentication to another cluster server.</p>",
    "module": "ngx_stream_zone_sync_module",
    "link": "stream/ngx_stream_zone_sync_module.html#zone_sync_ssl_certificate",
    "name": "zone_sync_ssl_certificate"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>zone_sync_ssl_certificate_key</strong> <code><i>file</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>stream</code>, <code>server</code><br></td></tr></tbody></table>",
    "doc": "<p>Specifies a <code><i>file</i></code> with the secret key in the PEM format used for authentication to another cluster server.</p>",
    "module": "ngx_stream_zone_sync_module",
    "link": "stream/ngx_stream_zone_sync_module.html#zone_sync_ssl_certificate_key",
    "name": "zone_sync_ssl_certificate_key"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>zone_sync_ssl_ciphers</strong> <code><i>ciphers</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>zone_sync_ssl_ciphers DEFAULT;</pre></td></tr><tr><th>Context:</th><td><code>stream</code>, <code>server</code><br></td></tr></tbody></table>",
    "doc": "<p>Specifies the enabled ciphers for connections to another cluster server. The ciphers are specified in the format understood by the OpenSSL library.</p><p>The full list can be viewed using the “<code>openssl ciphers</code>” command.</p>",
    "module": "ngx_stream_zone_sync_module",
    "link": "stream/ngx_stream_zone_sync_module.html#zone_sync_ssl_ciphers",
    "name": "zone_sync_ssl_ciphers"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>zone_sync_ssl_conf_command</strong> <code><i>name</i></code> <code><i>value</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>stream</code>, <code>server</code><br></td></tr></tbody></table><p>This directive appeared in version 1.19.4.</p>",
    "doc": "<p>Sets arbitrary OpenSSL configuration <a href=\"https://www.openssl.org/docs/man1.1.1/man3/SSL_CONF_cmd.html\">commands</a> when establishing a connection with another cluster server.</p><blockquote class=\"note\">The directive is supported when using OpenSSL 1.0.2 or higher.</blockquote><p>Several <code>zone_sync_ssl_conf_command</code> directives can be specified on the same level. These directives are inherited from the previous configuration level if and only if there are no <code>zone_sync_ssl_conf_command</code> directives defined on the current level.</p><blockquote class=\"note\">Note that configuring OpenSSL directly might result in unexpected behavior.</blockquote>",
    "module": "ngx_stream_zone_sync_module",
    "link": "stream/ngx_stream_zone_sync_module.html#zone_sync_ssl_conf_command",
    "name": "zone_sync_ssl_conf_command"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>zone_sync_ssl_crl</strong> <code><i>file</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>stream</code>, <code>server</code><br></td></tr></tbody></table>",
    "doc": "<p>Specifies a <code><i>file</i></code> with revoked certificates (CRL) in the PEM format used to <a href=\"https://nginx.org/en/docs/stream/ngx_stream_zone_sync_module.html#zone_sync_ssl_verify\">verify</a> the certificate of another cluster server.</p>",
    "module": "ngx_stream_zone_sync_module",
    "link": "stream/ngx_stream_zone_sync_module.html#zone_sync_ssl_crl",
    "name": "zone_sync_ssl_crl"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>zone_sync_ssl_name</strong> <code><i>name</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>zone_sync_ssl_name host from zone_sync_server;</pre></td></tr><tr><th>Context:</th><td><code>stream</code>, <code>server</code><br></td></tr></tbody></table><p>This directive appeared in version 1.15.7.</p>",
    "doc": "<p>Allows overriding the server name used to <a href=\"https://nginx.org/en/docs/stream/ngx_stream_zone_sync_module.html#zone_sync_ssl_verify\">verify</a> the certificate of a cluster server and to be <a href=\"https://nginx.org/en/docs/stream/ngx_stream_zone_sync_module.html#zone_sync_ssl_server_name\">passed through SNI</a> when establishing a connection with the cluster server.</p><p>By default, the host part of the <a href=\"https://nginx.org/en/docs/stream/ngx_stream_zone_sync_module.html#zone_sync_server\">zone_sync_server</a> address is used, or resolved IP address if the <a href=\"https://nginx.org/en/docs/stream/ngx_stream_zone_sync_module.html#resolve\">resolve</a> parameter is specified.</p>",
    "module": "ngx_stream_zone_sync_module",
    "link": "stream/ngx_stream_zone_sync_module.html#zone_sync_ssl_name",
    "name": "zone_sync_ssl_name"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>zone_sync_ssl_password_file</strong> <code><i>file</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>stream</code>, <code>server</code><br></td></tr></tbody></table>",
    "doc": "<p>Specifies a <code><i>file</i></code> with passphrases for <a href=\"https://nginx.org/en/docs/stream/ngx_stream_zone_sync_module.html#zone_sync_ssl_certificate_key\">secret keys</a> where each passphrase is specified on a separate line. Passphrases are tried in turn when loading the key.</p>",
    "module": "ngx_stream_zone_sync_module",
    "link": "stream/ngx_stream_zone_sync_module.html#zone_sync_ssl_password_file",
    "name": "zone_sync_ssl_password_file"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>zone_sync_ssl_protocols</strong> [<code>SSLv2</code>] [<code>SSLv3</code>] [<code>TLSv1</code>] [<code>TLSv1.1</code>] [<code>TLSv1.2</code>] [<code>TLSv1.3</code>];</code><br></td></tr><tr><th>Default:</th><td><pre>zone_sync_ssl_protocols TLSv1 TLSv1.1 TLSv1.2;</pre></td></tr><tr><th>Context:</th><td><code>stream</code>, <code>server</code><br></td></tr></tbody></table>",
    "doc": "<p>Enables the specified protocols for connections to another cluster server.</p>",
    "module": "ngx_stream_zone_sync_module",
    "link": "stream/ngx_stream_zone_sync_module.html#zone_sync_ssl_protocols",
    "name": "zone_sync_ssl_protocols"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>zone_sync_ssl_server_name</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>zone_sync_ssl_server_name off;</pre></td></tr><tr><th>Context:</th><td><code>stream</code>, <code>server</code><br></td></tr></tbody></table><p>This directive appeared in version 1.15.7.</p>",
    "doc": "<p>Enables or disables passing of the server name through <a href=\"http://en.wikipedia.org/wiki/Server_Name_Indication\">TLS Server Name Indication extension</a> (SNI, RFC 6066) when establishing a connection with another cluster server.</p>",
    "module": "ngx_stream_zone_sync_module",
    "link": "stream/ngx_stream_zone_sync_module.html#zone_sync_ssl_server_name",
    "name": "zone_sync_ssl_server_name"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>zone_sync_ssl_trusted_certificate</strong> <code><i>file</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>stream</code>, <code>server</code><br></td></tr></tbody></table>",
    "doc": "<p>Specifies a <code><i>file</i></code> with trusted CA certificates in the PEM format used to <a href=\"https://nginx.org/en/docs/stream/ngx_stream_zone_sync_module.html#zone_sync_ssl_verify\">verify</a> the certificate of another cluster server.</p>",
    "module": "ngx_stream_zone_sync_module",
    "link": "stream/ngx_stream_zone_sync_module.html#zone_sync_ssl_trusted_certificate",
    "name": "zone_sync_ssl_trusted_certificate"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>zone_sync_ssl_verify</strong> <code>on</code> | <code>off</code>;</code><br></td></tr><tr><th>Default:</th><td><pre>zone_sync_ssl_verify off;</pre></td></tr><tr><th>Context:</th><td><code>stream</code>, <code>server</code><br></td></tr></tbody></table>",
    "doc": "<p>Enables or disables verification of another cluster server certificate.</p>",
    "module": "ngx_stream_zone_sync_module",
    "link": "stream/ngx_stream_zone_sync_module.html#zone_sync_ssl_verify",
    "name": "zone_sync_ssl_verify"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>zone_sync_ssl_verify_depth</strong> <code><i>number</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>zone_sync_ssl_verify_depth 1;</pre></td></tr><tr><th>Context:</th><td><code>stream</code>, <code>server</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets the verification depth in another cluster server certificates chain.</p>",
    "module": "ngx_stream_zone_sync_module",
    "link": "stream/ngx_stream_zone_sync_module.html#zone_sync_ssl_verify_depth",
    "name": "zone_sync_ssl_verify_depth"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>zone_sync_timeout</strong> <code><i>timeout</i></code>;</code><br></td></tr><tr><th>Default:</th><td><pre>zone_sync_timeout 5s;</pre></td></tr><tr><th>Context:</th><td><code>stream</code>, <code>server</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets the <code><i>timeout</i></code> between two successive read or write operations on connection to another cluster node. If no data is transmitted within this time, the connection is closed.</p>",
    "module": "ngx_stream_zone_sync_module",
    "link": "stream/ngx_stream_zone_sync_module.html#zone_sync_timeout",
    "name": "zone_sync_timeout"
  },
  {
    "table": "<table ><tbody><tr><th>Syntax:</th><td><code><strong>google_perftools_profiles</strong> <code><i>file</i></code>;</code><br></td></tr><tr><th>Default:</th><td>—</td></tr><tr><th>Context:</th><td><code>main</code><br></td></tr></tbody></table>",
    "doc": "<p>Sets a file name that keeps profiling information of nginx worker process. The ID of the worker process is always a part of the file name and is appended to the end of the file name, after a dot.</p>",
    "module": "ngx_google_perftools_module",
    "link": "ngx_google_perftools_module.html#google_perftools_profiles",
    "name": "google_perftools_profiles"
  }
]
