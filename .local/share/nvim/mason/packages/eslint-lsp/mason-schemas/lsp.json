{"title":"ESLint","properties":{"eslint.codeAction.showDocumentation":{"additionalProperties":false,"properties":{"enable":{"default":true,"type":"boolean","description":"Show the documentation code actions."}},"type":"object","scope":"resource","markdownDescription":"Show open lint rule documentation web page in the quick fix menu.","default":{"enable":true}},"eslint.nodePath":{"markdownDescription":"A path added to `NODE_PATH` when resolving the eslint module.","default":null,"type":["string","null"],"scope":"machine-overridable"},"eslint.options":{"markdownDescription":"The eslint options object to provide args normally passed to eslint when executed from a command line (see https:\/\/eslint.org\/docs\/developer-guide\/nodejs-api#eslint-class).","default":{},"type":"object","scope":"resource"},"eslint.codeActionsOnSave.rules":{"markdownDescription":"The rules that should be executed when computing the code actions on save or formatting a file. Defaults to the rules configured via the ESLint configuration","default":null,"scope":"resource","anyOf":[{"type":"array","items":{"type":"string"}},{"type":"null"}]},"eslint.format.enable":{"description":"Enables ESLint as a formatter.","default":false,"type":"boolean","scope":"resource"},"eslint.rules.customizations":{"description":"Override the severity of one or more rules reported by this extension, regardless of the project's ESLint config. Use globs to apply default severities for multiple rules.","type":"array","items":{"type":"object","properties":{"rule":{"type":"string"},"severity":{"type":"string","enum":["downgrade","error","info","default","upgrade","warn","off"]}}},"scope":"resource"},"eslint.autoFixOnSave":{"default":false,"type":"boolean","scope":"resource","deprecationMessage":"The setting is deprecated. Use editor.codeActionsOnSave instead with a source.fixAll.eslint member.","description":"Turns auto fix on save on or off."},"eslint.notebooks.rules.customizations":{"description":"A special rules customization section for text cells in notebook documents.","type":"array","items":{"type":"object","properties":{"rule":{"type":"string"},"severity":{"type":"string","enum":["downgrade","error","info","default","upgrade","warn","off"]}}},"scope":"resource"},"eslint.timeBudget.onValidation":{"default":{"warn":4000,"error":8000},"type":"object","scope":"resource","markdownDescription":"The time budget in milliseconds to spend on validation before showing a warning or error.","properties":{"warn":{"markdownDescription":"The time budget in milliseconds to spend on validation before showing a warning.","default":4000,"type":"number","minimum":0},"error":{"markdownDescription":"The time budget in milliseconds to spend on validation before showing an error.","default":8000,"type":"number","minimum":0}}},"eslint.onIgnoredFiles":{"default":"off","type":"string","scope":"resource","description":"Whether ESLint should issue a warning on ignored files.","enum":["warn","off"]},"eslint.enable":{"description":"Controls whether eslint is enabled or not.","default":true,"type":"boolean","scope":"resource"},"eslint.timeBudget.onFixes":{"default":{"warn":3000,"error":6000},"type":"object","scope":"resource","markdownDescription":"The time budget in milliseconds to spend on computing fixes before showing a warning or error.","properties":{"warn":{"markdownDescription":"The time budget in milliseconds to spend on computing fixes before showing a warning.","default":3000,"type":"number","minimum":0},"error":{"markdownDescription":"The time budget in milliseconds to spend on computing fixes before showing an error.","default":6000,"type":"number","minimum":0}}},"eslint.packageManager":{"default":"npm","type":"string","scope":"resource","deprecationMessage":"The setting is deprecated. The Package Manager is automatically detected now.","description":"The package manager you use to install node modules.","enum":["npm","yarn","pnpm"]},"eslint.useESLintClass":{"description":"Since version 7 ESLint offers a new API call ESLint. Use it even if the old CLIEngine is available. From version 8 on forward on ESLint class is available.","default":false,"type":"boolean","scope":"resource"},"eslint.experimental.useFlatConfig":{"description":"Enables support of experimental Flat Config (aka eslint.config.js, supported by ESLint version 8.21 or later).","default":false,"type":"boolean","scope":"resource"},"eslint.workingDirectories":{"markdownDescription":"Specifies how the working directories ESLint is using are computed. ESLint resolves configuration files (e.g. `eslintrc`, `.eslintignore`) relative to a working directory so it is important to configure this correctly.","items":{"anyOf":[{"type":"string"},{"properties":{"mode":{"default":"location","type":"string","enum":["auto","location"]}},"type":"object","required":["mode"]},{"required":["directory"],"properties":{"changeProcessCWD":{"type":"boolean","description":"Whether the process's cwd should be changed as well."},"directory":{"type":"string","description":"The working directory to use if a file's path starts with this directory."}},"type":"object","deprecationMessage":"Use the new !cwd form."},{"properties":{"!cwd":{"type":"boolean","description":"Set to true if ESLint shouldn't change the working directory."},"directory":{"type":"string","description":"The working directory to use if a file's path starts with this directory."}},"type":"object","required":["directory"]},{"properties":{"!cwd":{"type":"boolean","description":"Set to true if ESLint shouldn't change the working directory."},"pattern":{"type":"string","description":"A glob pattern to match a working directory."}},"type":"object","required":["pattern"]}]},"type":"array","scope":"resource"},"eslint.problems.shortenToSingleLine":{"scope":"resource","default":false,"type":"boolean","description":"Shortens the text spans of underlined problems to their first related line."},"eslint.nodeEnv":{"markdownDescription":"The value of `NODE_ENV` to use when running eslint tasks.","default":null,"type":["string","null"],"scope":"resource"},"eslint.validate":{"description":"An array of language ids which should be validated by ESLint. If not installed ESLint will show an error.","items":{"anyOf":[{"type":"string"},{"properties":{"language":{"type":"string","description":"The language id to be validated by ESLint."},"autoFix":{"type":"boolean","description":"Whether auto fixes are provided for the language."}},"type":"object","deprecationMessage":"Auto Fix is enabled by default. Use the single string form."}]},"type":"array","scope":"resource"},"eslint.probe":{"default":["javascript","javascriptreact","typescript","typescriptreact","html","vue","markdown"],"items":{"type":"string"},"scope":"resource","type":"array","description":"An array of language ids for which the extension should probe if support is installed."},"eslint.provideLintTask":{"default":false,"type":"boolean","scope":"resource","description":"Controls whether a task for linting the whole workspace will be available.","deprecationMessage":"This option is deprecated. Use eslint.lintTask.enable instead."},"eslint.ignoreUntitled":{"description":"If true, untitled files won't be validated by ESLint.","default":false,"type":"boolean","scope":"resource"},"eslint.lintTask.options":{"markdownDescription":"Command line options applied when running the task for linting the whole workspace (see https:\/\/eslint.org\/docs\/user-guide\/command-line-interface).","default":".","type":"string","scope":"resource"},"eslint.runtime":{"markdownDescription":"The location of the node binary to run ESLint under.","default":null,"type":["string","null"],"scope":"machine-overridable"},"eslint.execArgv":{"markdownDescription":"Additional exec argv argument passed to the runtime. This can for example be used to control the maximum heap space using --max_old_space_size","default":null,"scope":"machine-overridable","anyOf":[{"type":"array","items":{"type":"string"}},{"type":"null"}]},"eslint.debug":{"markdownDescription":"Enables ESLint debug mode (same as `--debug` on the command line)","default":false,"type":"boolean","scope":"window"},"eslint.codeAction.disableRuleComment":{"additionalProperties":false,"properties":{"commentStyle":{"definition":"The comment style to use when disabling a rule on a specific line.","default":"line","type":"string","enum":["line","block"]},"location":{"description":"Configure the disable rule code action to insert the comment on the same line or a new line.","default":"separateLine","type":"string","enum":["separateLine","sameLine"]},"enable":{"default":true,"type":"boolean","description":"Show the disable code actions."}},"type":"object","scope":"resource","markdownDescription":"Show disable lint rule in the quick fix menu.","default":{"commentStyle":"line","location":"separateLine","enable":true}},"eslint.trace.server":{"description":"Traces the communication between VSCode and the eslint linter service.","default":"off","scope":"window","anyOf":[{"default":"off","type":"string","enum":["off","messages","verbose"]},{"type":"object","properties":{"verbosity":{"default":"off","type":"string","enum":["off","messages","verbose"]},"format":{"default":"text","type":"string","enum":["text","json"]}}}]},"eslint.migration.2_x":{"default":"on","type":"string","scope":"application","description":"Whether ESlint should migrate auto fix on save settings.","enum":["off","on"]},"eslint.lintTask.enable":{"description":"Controls whether a task for linting the whole workspace will be available.","default":false,"type":"boolean","scope":"resource"},"eslint.quiet":{"description":"Turns on quiet mode, which ignores warnings.","default":false,"type":"boolean","scope":"resource"},"eslint.codeActionsOnSave.mode":{"enumDescriptions":["Fixes all possible problems in the file. This option might take some time.","Fixes only reported problems that have non-overlapping textual edits. This option runs a lot faster."],"default":"all","type":"string","scope":"resource","markdownDescription":"Specifies the code action mode. Possible values are 'all' and 'problems'.","enum":["all","problems"]},"eslint.run":{"default":"onType","type":"string","scope":"resource","description":"Run the linter on save (onSave) or on type (onType)","enum":["onSave","onType"]}},"type":"object"}